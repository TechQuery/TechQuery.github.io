<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>民主的真谛</title>
      <link href="/democracy/true-meaning-of-democracy/"/>
      <url>/democracy/true-meaning-of-democracy/</url>
      
        <content type="html"><![CDATA[<h2 id="民主-≠-有了就能好"><a href="#民主-≠-有了就能好" class="headerlink" title="民主 ≠ 有了就能好"></a>民主 ≠ 有了就能好</h2><p>你知道为什么很多海龟还这么爱国粉红吗？因为他们依然是古代思维，理解不了现代思维 ——</p><blockquote><p>绝大多数国人（包括大多数海外民运人士）都把民主在潜意识里看作“明君贤相”，有了它就“形势一片大好，不是小好，是大好”（毛主席语录）。</p></blockquote><p>但言论自由的民主社会总报忧不报喜，打压言论的专制社会总报喜不报忧，造成的观感就是“欧美人民水深火热，中国人民岁月静好”。他们完全不懂民主和开源有着完全相同的原理，就是『<strong>开放式协作</strong>』——</p><blockquote><p>大家<strong>享受亲手解决问题的过程</strong>，真正人民当家做主，而不期待一个救世主。</p></blockquote><p>西方虽笃信唯一真神的耶稣，但真做起事来却践行《国际歌》中的“要靠我们自己”和中华格言“<strong>天助自助者</strong>”。中国虽一直没有国教，中共建政后更宣扬唯物主义无神论，但实际都想当甩手掌柜，巴望着一个伟大领袖降世显灵……</p><h2 id="民主-≠-闹了就能成"><a href="#民主-≠-闹了就能成" class="headerlink" title="民主 ≠ 闹了就能成"></a>民主 ≠ 闹了就能成</h2><p>当然，现代中国人对民主有这么深的误解，与现代西方人也有关系。下生就在欧美民主国家的人，民主是他们的母语，大多数人也讲不清楚母语中的语法结构，所以就只能给专制国家的人描述一些表象 —— 我们能骂政府和总统，能办报、上街，能组党、竞选，所以你们也应该用这些形式去反抗独裁者…… 没有几个人能解释清楚国父们在制定《<a href="https://zh.wikipedia.org/wiki/%E7%BE%8E%E5%9B%BD%E5%AE%AA%E6%B3%95" target="_blank" rel="noopener">美国宪法</a>》时对民主的深思熟虑，以致国外觉得他们在煽动颠覆别国，国内又白左横行、黑命飞贵……</p><p>美国现在还能坚守民主价值而不崩，一代代最高法院大法官起到了非常重要的作用 —— 他们熟读国父们的字字珠玑和前任法官们的经典判例，再充分结合新时代的实际情况，写出一篇篇文辞雄辩的判词，做出一个个影响后世的判例，纠正当下总统、国会和民众出于短期利益和情绪的不理性决定。</p><p>如果类比宗教，大法官们就像天主派下的天使、耶稣身边的使徒，来传播国父们的福音。每当我读完一句句掷地有声的判词，不由心潮澎湃、热泪盈眶，总统箴言脱口而出 ——</p><blockquote><p>God bless America, that government of the people, by the people, for the people!</p></blockquote><p><a href="https://book.douban.com/subject/1144185/" target="_blank" rel="noopener"><img src="https://img2.doubanio.com/view/subject/l/public/s24503563.jpg" alt="美国宪政历程：影响美国的25个司法大案"></a></p><h2 id="【附】真·境外势力煽颠一则"><a href="#【附】真·境外势力煽颠一则" class="headerlink" title="【附】真·境外势力煽颠一则"></a>【附】真·境外势力煽颠一则</h2><blockquote class="twitter-tweet"><p lang="zh" dir="ltr">真 <a href="https://twitter.com/hashtag/%E6%B0%91%E4%B8%BB?src=hash&amp;ref_src=twsrc%5Etfw" target="_blank" rel="noopener">#民主</a> 是在无损他人权益前提下，代表个人主动参与解决身边问题。11月27日的 <a href="https://twitter.com/hashtag/%E7%99%BD%E7%BA%B8%E8%BF%90%E5%8A%A8?src=hash&amp;ref_src=twsrc%5Etfw" target="_blank" rel="noopener">#白纸运动</a> 旨在争取人身自由、悼念死难同胞，而若成都大运会有劳民伤财的 <a href="https://twitter.com/hashtag/%E9%9D%A2%E5%AD%90%E5%B7%A5%E7%A8%8B?src=hash&amp;ref_src=twsrc%5Etfw" target="_blank" rel="noopener">#面子工程</a> ，市民可以去声讨，否则应该学习 <a href="https://twitter.com/hashtag/%E6%B7%84%E5%8D%9A%E7%83%A7%E7%83%A4?src=hash&amp;ref_src=twsrc%5Etfw" target="_blank" rel="noopener">#淄博烧烤</a> 的官民一心实践，把大运会办成一届市民自豪、为国争光的盛会，打脸2023年原主办方俄罗斯！ <a href="https://t.co/DYU1l4Vs0t" target="_blank" rel="noopener">https://t.co/DYU1l4Vs0t</a></p>&mdash; 南漂一卒 (@TechQuery_FCC) <a href="https://twitter.com/TechQuery_FCC/status/1679087004448088064?ref_src=twsrc%5Etfw" target="_blank" rel="noopener">July 12, 2023</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>]]></content>
      
      
      <categories>
          
          <category> Democracy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 误区 </tag>
            
            <tag> 法制 </tag>
            
            <tag> 宪法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>抖音 ≠ 精神鸦片 —— 言论自由之辨</title>
      <link href="/democracy/tiktok-is-not-drug/"/>
      <url>/democracy/tiktok-is-not-drug/</url>
      
        <content type="html"><![CDATA[<p>近两年，我无数次听到身边人说：“<a href="https://www.douyin.com/" target="_blank" rel="noopener">抖音</a>里全是‘商女不知亡国恨’的小姐姐，是奶头乐，让大家都不想去看长文和长视频了。所以我早就卸载了，于是我的精神得到了净化……”云云。</p><p>开始我还会心里打鼓：“啊，我不就是经常在抖音刷小姐姐的人吗？我好不上档次……”但我发现用抖音越久，我的关注列表、推送流里反而都充斥着<strong>人文社科</strong>、<strong>自然科学</strong>、<strong>萌宠居家</strong>等<strong>知识型</strong>和<strong>治愈型</strong>内容。</p><p>我多年前很推崇<a href="https://www.ifanr.com/" target="_blank" rel="noopener">爱范儿</a>的一个试验产品 —— <a href="https://apptopia.com/ios/app/611036705/about" target="_blank" rel="noopener">数读</a>，它界面的每一屏都是包含核心数字、醒目的新闻标题，右下方小字是摘要和详情链接。在当下快节奏、注意力极度缺乏的现代社会，这样简洁明快的形式反而提高了大家对重要信息获取的效率，同时并没有阻碍真正关心一件事的人进一步探寻它的来龙去脉。</p><p>所以抖音除了是我繁忙工作之余的无脑消遣，还用类似“<strong>电梯演讲</strong>”一样的简洁信息流，让我在不想动脑的闲暇时间也可以获知大量之前未曾见过的重要人事物。然后我会马上切到<a href="https://www.wikipedia.org/" target="_blank" rel="noopener">维基百科</a>或<a href="https://www.google.com/" target="_blank" rel="noopener">谷歌搜索</a>，再进行一番深度阅读。</p><p>再者，作为一个程序员，我深知<strong>推荐算法</strong>乃至最近流行的 <a href="https://openai.com/blog/chatgpt" target="_blank" rel="noopener">ChatGPT</a>，不过是大数据丛林中辛勤的蜜蜂，是<strong>高效为人筛选有用信息的超级搜索引擎</strong>。所以它们不过是人的一面镜子，如佛印所说 —— <strong>心中有什么，眼中就有什么</strong>。</p><p>因此，“抖音等短视频平台是精神鸦片”和当年“网游是精神鸦片”、“金钱是万恶之源”如出一辙，不过是人们的甩锅之辞罢了。没有短视频，这些“被毒害”的人也会干其它“低俗”之事，也不会看长文、长视频，更不会更“高雅”、“道德”~ 治国不能靠“孔孟之道”这种人性上限的所谓教化，真民主应该教他们成为<strong>争取并维护自己基本权益的公民</strong>，当他们能过上有尊严的体面生活，高雅与道德自然会去追求。</p><hr><p>反驳完短视频的负面影响，我再来聊聊它的正面价值。</p><p>虽然微信小程序技术层面是历史的倒退，用户体验上也并不比标准网页好多少，但张小龙当年发布小程序时的一个理念却非常值得借鉴 —— 当使用一个产品的场景足够轻量，看似用完即走、单次驻留时间很短的小程序，其实会让用户更多次地点开并使用，累积的用户粘性反而更高，因为用户的心智成本大大降低了。</p><p>由此可以推论，短视频让广大不靠长文、长视频专职吃饭的人民群众，其<strong>表达自我</strong>、<strong>二次创作</strong>变得更加简单、易行，<strong>将创造历史的话语权从权贵和公知下沉到了普通百姓</strong>。（其实<a href="https://www.twitter.com/" target="_blank" rel="noopener">推特</a>、<a href="https://fanfou.com/" target="_blank" rel="noopener">饭否</a>这样的正经微博客平台也是如此）</p><p>为什么<strong>微博客</strong>、<strong>短视频</strong>这样的<strong>轻量创作形式</strong>对中国等发展中国家弥足珍贵，正是因为<strong>在传统社会中个人极度缺乏表达的意识、意愿和能力</strong>，信息的不透明、不通畅所造成的巨大<strong>信息差</strong>，才是民族宗教仇恨、地域阶层歧视、奸商欺诈群众、官吏欺压百姓的<em>万恶之源</em>！！！</p><p><strong>言论自由</strong>、<strong>参政议政</strong>的民主之道，从不是统治阶层主动为之的民众教化，从来都是<strong>平民阶层毫无前提地言己之所想、行己之所乐</strong>。至于现阶段表达的不对、不好，那也是<strong>公民社会</strong>成长的必由之路 —— 走不稳当还想跑？四个轮子的学步车这辈子你是戒不掉了！</p><p>最后再跟我念一遍<strong>言论自由的基本准则</strong> ——</p><ol><li>我不同意你的观点，但我誓死捍卫你说话的权利</li><li>反对错误言论不能用禁止任何可能犯错的人讲话的方式，更多、更大声地表达你认为正确的观点才是正道</li></ol><p>但凡想打破这一准则的人，其政治光谱就是<em>左派社会精英主义</em>，其忧国忧民之言辞并不是真正的民主。因为<strong>民主社会决不允许任何人拥有超越法律而禁止任何人讲话的能力</strong>，但凡有，就一定是<em>极权与专制</em>。</p>]]></content>
      
      
      <categories>
          
          <category> Democracy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> freedom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>脱离 IDE，徒手 Kotlin！</title>
      <link href="/development/start-kotlin-without-ide/"/>
      <url>/development/start-kotlin-without-ide/</url>
      
        <content type="html"><![CDATA[<p>Java、PHP 作为中国软件外包行业的扛把子，自然是码农最多、甲方最爱的后端技术栈，我自主创业以来也有不少甲方要求 Java + Spring 的架构。</p><p>同时，JSer 一直很反感 Java 庞大的代码量，即便后来大行其道的 <a href="https://www.typescriptlang.org/" target="_blank" rel="noopener">TypeScript</a> 为 <a href="https://jscig.github.io/" target="_blank" rel="noopener">JavaScript</a> 生态引入强大的<strong>类型系统</strong>，但感谢 TS 之父也创造了 <a href="https://docs.microsoft.com/en-us/dotnet/csharp/" target="_blank" rel="noopener">C#</a>，其代码也比 Java 简洁很多。</p><p>于是，Java IDE 界新星 IntelliJ IDEA 的东家 JetBrains 发明的 <a href="https://kotlinlang.org/" target="_blank" rel="noopener">Kotlin 语言</a>，便因其现代性而受到 <a href="https://www.android.com/" target="_blank" rel="noopener">Google Android</a> 和我的青睐~</p><p>虽然 Kotlin 官网首页非常小清新地给初学者展示了语言的几大核心用法，但正式文档的入口却繁杂而令人困惑，让我这种觉得他们家 IDE 太重的 <a href="https://code.visualstudio.com/" target="_blank" rel="noopener">VS Code</a> 铁粉无所适从……</p><p>故而有了以下徒手学习之旅 ——</p><h2 id="Hello-Kotlin"><a href="#Hello-Kotlin" class="headerlink" title="Hello, Kotlin!"></a>Hello, Kotlin!</h2><h3 id="Just-for-“fun”"><a href="#Just-for-“fun”" class="headerlink" title="Just for “fun”"></a>Just for “fun”</h3><p><code>hello.kt</code></p><pre class=" language-kotlin"><code class="language-kotlin"><span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"Hello, Kotlin!"</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><blockquote><p>参考：<a href="https://kotlinlang.org/#try-kotlin" target="_blank" rel="noopener">https://kotlinlang.org/#try-kotlin</a></p></blockquote><h3 id="安装编译器"><a href="#安装编译器" class="headerlink" title="安装编译器"></a>安装编译器</h3><p>2018 年做 Python 教练的经历，给了我<a href="https://tech-query.me/development/coder-start-kit/">装环境一把梭</a>的底气。</p><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><pre class=" language-powershell"><code class="language-powershell">choco install kotlinc <span class="token operator">-</span>y</code></pre><h4 id="Mac-OS-X"><a href="#Mac-OS-X" class="headerlink" title="Mac OS X"></a>Mac OS X</h4><pre class=" language-bash"><code class="language-bash">brew <span class="token function">install</span> kotlin</code></pre><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>我只实验成功了“编译为 JAR 包再运行”的方法：</p><pre class=" language-shell"><code class="language-shell">kotlinc hello.kt -include-runtime -d hello.jarjava -jar hello.jar</code></pre><blockquote><p>参考：<a href="https://www.runoob.com/kotlin/kotlin-command-line.html" target="_blank" rel="noopener">https://www.runoob.com/kotlin/kotlin-command-line.html</a></p></blockquote><h2 id="Boot-Spring"><a href="#Boot-Spring" class="headerlink" title="Boot Spring"></a>Boot Spring</h2><p><a href="https://spring.io/projects/spring-boot" target="_blank" rel="noopener">Spring Boot</a> 算是 Java 最典范的后端 MVC 框架，再配上 Kotlin，写起来很像 <a href="https://github.com/idea2app/NodeTS-LeanCloud" target="_blank" rel="noopener">Node.js + TypeScript</a>、Python + <a href="https://flask.palletsprojects.com/" target="_blank" rel="noopener">Flask</a>/Django 等技术栈，利于工程师在它们之间风骚走位，自然值得学习。</p><h3 id="下载脚手架"><a href="#下载脚手架" class="headerlink" title="下载脚手架"></a>下载脚手架</h3><pre class=" language-shell"><code class="language-shell">curl https://start.spring.io/starter.zip \    -d language=kotlin \    -d type=gradle-project \    -d dependencies=web,mustache,jpa,h2,devtools \    -d packageName=com.example.web \    -d name=Web \    -o web.zip</code></pre><blockquote><p>参考：<a href="https://spring.io/guides/tutorials/spring-boot-kotlin/#using-command-line" target="_blank" rel="noopener">https://spring.io/guides/tutorials/spring-boot-kotlin/#using-command-line</a></p></blockquote><h3 id="安装包管理器"><a href="#安装包管理器" class="headerlink" title="安装包管理器"></a>安装包管理器</h3><p>我选择 <a href="https://gradle.org/" target="_blank" rel="noopener">Gradle</a> 作为 JVM 语言的包管理器，主要因为它的配置文件不像老牌 Maven 的 XML 那样繁杂，而且支持 <strong>Kotlin 脚本语法</strong>，让我可以全身心地学习 Kotlin。</p><p>感谢 <a href="https://github.com/mythcsj" target="_blank" rel="noopener">@mythcsj</a> 的解答，让我理解了：</p><blockquote><p>对于 JSer 而言，Maven 类似 NPM，既是个包管理器，也有自建包服务器；而 Gradle 类似 <a href="https://yarnpkg.com/" target="_blank" rel="noopener">Yarn</a>，是构建在前者成熟包服务器之上的新包管理器。</p></blockquote><h4 id="Windows-1"><a href="#Windows-1" class="headerlink" title="Windows"></a>Windows</h4><pre class=" language-powershell"><code class="language-powershell">choco install gradle <span class="token operator">-</span>y</code></pre><h4 id="Mac-OS-X-1"><a href="#Mac-OS-X-1" class="headerlink" title="Mac OS X"></a>Mac OS X</h4><pre class=" language-bash"><code class="language-bash">brew <span class="token function">install</span> gradle</code></pre><h3 id="墙内镜像"><a href="#墙内镜像" class="headerlink" title="墙内镜像"></a>墙内镜像</h3><p>懂的都懂，感谢阿里~</p><p><code>build.gradle.kts</code></p><pre class=" language-diff"><code class="language-diff">repositories {    mavenCentral()<span class="token inserted">+    maven(url = "https://maven.aliyun.com/repository/public")</span><span class="token inserted">+    maven(url = "https://maven.aliyun.com/repository/gradle-plugin")</span><span class="token inserted">+    maven(url = "https://maven.aliyun.com/repository/spring")</span><span class="token inserted">+    maven(url = "https://maven.aliyun.com/repository/spring-plugin")</span>}</code></pre><blockquote><p>参考：<a href="https://developer.aliyun.com/mvn/guide" target="_blank" rel="noopener">https://developer.aliyun.com/mvn/guide</a></p></blockquote><h3 id="Hello-RESTful"><a href="#Hello-RESTful" class="headerlink" title="Hello, RESTful!"></a>Hello, RESTful!</h3><p><code>src\main\kotlin\com\example\web\HelloController.kt</code></p><pre class=" language-kotlin"><code class="language-kotlin"><span class="token keyword">package</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RestController<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>GetMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>ResponseBody<span class="token punctuation">;</span><span class="token annotation builtin">@RestController</span><span class="token keyword">class</span> HelloController <span class="token punctuation">{</span>  <span class="token annotation builtin">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span>  <span class="token annotation builtin">@ResponseBody</span>  <span class="token keyword">fun</span> <span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> MutableMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Int<span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">mutableMapOf</span><span class="token punctuation">(</span><span class="token string">"a"</span> <span class="token keyword">to</span> <span class="token number">1</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><blockquote><p>参考：</p><ol><li><a href="https://spring.io/guides/tutorials/spring-boot-kotlin/#_exposing_http_api" target="_blank" rel="noopener">https://spring.io/guides/tutorials/spring-boot-kotlin/#_exposing_http_api</a></li><li><a href="https://spring.io/guides/gs/rest-service/#_create_a_resource_controller" target="_blank" rel="noopener">https://spring.io/guides/gs/rest-service/#_create_a_resource_controller</a></li></ol></blockquote><h3 id="运行-1"><a href="#运行-1" class="headerlink" title="运行"></a>运行</h3><p>感谢 <a href="https://github.com/aruis" target="_blank" rel="noopener">@aruis</a> 的解答，才让我知道官方脚手架 <code>HELP.md</code> 一大堆链接里都没明确提及的本地运行命令是啥……</p><pre class=" language-shell"><code class="language-shell">./gradlew bootRun</code></pre><h3 id="Docker-镜像"><a href="#Docker-镜像" class="headerlink" title="Docker 镜像"></a>Docker 镜像</h3><p>再次感谢 <a href="https://github.com/idea2app/Kotlin-Spring-Boot/pull/2" target="_blank" rel="noopener">@aruis 发起的 Pull Request</a>，不仅帮我修复了团队脚手架的 bug，还写了 <code>Dockerfile</code>：</p><pre class=" language-dockerfile"><code class="language-dockerfile">FROM openjdk:11.0-jre-slimENV JAR_FILE_NAME demo-0.0.1-SNAPSHOT.jarCOPY build/libs/$JAR_FILE_NAME app.jarEXPOSE 8080ENTRYPOINT ["java", "-jar", "app.jar"]</code></pre><p>于是，我们可以在传统构建后，再构建 Docker 镜像：</p><pre class=" language-shell"><code class="language-shell">./gradlew builddocker build .</code></pre><blockquote><p>参考：<a href="https://spring.io/guides/gs/spring-boot-docker/" target="_blank" rel="noopener">https://spring.io/guides/gs/spring-boot-docker/</a></p></blockquote><h3 id="GitHub-actions-packages"><a href="#GitHub-actions-packages" class="headerlink" title="GitHub actions + packages"></a>GitHub actions + packages</h3><p>每次手动构建 Docker 镜像很烦，<a href="https://hub.docker.com/" target="_blank" rel="noopener">Docker Hub</a> 官方账号我也总是忘记，那就 GitHub <a href="https://github.com/features/actions" target="_blank" rel="noopener">actions</a> + <a href="https://github.com/features/packages" target="_blank" rel="noopener">packages</a> 服务一把梭吧~</p><p><code>.github\workflows\release.yml</code></p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">name</span><span class="token punctuation">:</span> Release Docker image<span class="token key atrule">on</span><span class="token punctuation">:</span>  <span class="token key atrule">push</span><span class="token punctuation">:</span>    <span class="token key atrule">tags</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> v*<span class="token key atrule">jobs</span><span class="token punctuation">:</span>  <span class="token key atrule">push_to_registries</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> Push Docker image to GitHub registry    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest    <span class="token key atrule">permissions</span><span class="token punctuation">:</span>      <span class="token key atrule">packages</span><span class="token punctuation">:</span> write      <span class="token key atrule">contents</span><span class="token punctuation">:</span> read    <span class="token key atrule">steps</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Check out the repo        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Set up JDK 17        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>java@v2        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">java-version</span><span class="token punctuation">:</span> <span class="token number">17</span>          <span class="token key atrule">distribution</span><span class="token punctuation">:</span> adopt          <span class="token key atrule">cache</span><span class="token punctuation">:</span> gradle      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Set up QEMU        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/setup<span class="token punctuation">-</span>qemu<span class="token punctuation">-</span>action@v1      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Set up Docker Buildx        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/setup<span class="token punctuation">-</span>buildx<span class="token punctuation">-</span>action@v1      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Login to GitHub Container Registry        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/login<span class="token punctuation">-</span>action@v1        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">registry</span><span class="token punctuation">:</span> ghcr.io          <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.repository_owner <span class="token punctuation">}</span><span class="token punctuation">}</span>          <span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.GITHUB_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Build Kotlin        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          chmod +x ./gradlew          ./gradlew build</span>      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> ImageName        <span class="token key atrule">uses</span><span class="token punctuation">:</span> ASzc/change<span class="token punctuation">-</span>string<span class="token punctuation">-</span>case<span class="token punctuation">-</span>action@v2        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">string</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.repository <span class="token punctuation">}</span><span class="token punctuation">}</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Push Image        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/build<span class="token punctuation">-</span>push<span class="token punctuation">-</span>action@v2        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">context</span><span class="token punctuation">:</span> .          <span class="token key atrule">platforms</span><span class="token punctuation">:</span> linux/amd64          <span class="token key atrule">push</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>          <span class="token key atrule">tags</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">            ghcr.io/${{ steps.ImageName.outputs.lowercase }}:${{ github.ref_name }}            ghcr.io/${{ steps.ImageName.outputs.lowercase }}:latest</span></code></pre><p>每次发版只需用 <a href="https://git-scm.com/" target="_blank" rel="noopener">Git</a> 打个 tag 即可：</p><pre class=" language-shell"><code class="language-shell">git tag vX.Y.Z HEADgit push origin --tags</code></pre><blockquote><p>参考：</p><ol><li><a href="https://github.com/docker/build-push-action/blob/master/docs/advanced/push-multi-registries.md" target="_blank" rel="noopener">https://github.com/docker/build-push-action/blob/master/docs/advanced/push-multi-registries.md</a></li><li><a href="https://tomgregory.com/build-gradle-projects-with-github-actions/" target="_blank" rel="noopener">https://tomgregory.com/build-gradle-projects-with-github-actions/</a></li></ol></blockquote><h3 id="模板仓库"><a href="#模板仓库" class="headerlink" title="模板仓库"></a>模板仓库</h3><p>借助 <a href="https://docs.github.com/en/repositories/creating-and-managing-repositories/creating-a-template-repository" target="_blank" rel="noopener">GitHub template 仓库</a>这一实用新特性，我们可以轻松创建新项目，最大限度地复用团队沉淀下来的项目公用代码。</p><p>以上讲解的所有内容都汇总在我们 <a href="https://idea2.app/" target="_blank" rel="noopener">idea2app 团队</a>的脚手架中，欢迎大家试用、反馈：</p><p><a href="https://github.com/idea2app/Kotlin-Spring-Boot" target="_blank" rel="noopener">https://github.com/idea2app/Kotlin-Spring-Boot</a></p><h2 id="VS-Code-扩展"><a href="#VS-Code-扩展" class="headerlink" title="VS Code 扩展"></a>VS Code 扩展</h2><p>对于近些年风靡 <strong>Web 全栈开发</strong>领域的 VS Code，Java 生态支持自然不能少，虽然以下两个推荐的扩展插件还都是<em>预览版</em>，但对于日常应用开发足够了：</p><ol><li><a href="https://marketplace.visualstudio.com/items?itemName=vscjava.vscode-java-pack" target="_blank" rel="noopener">https://marketplace.visualstudio.com/items?itemName=vscjava.vscode-java-pack</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=fwcd.kotlin" target="_blank" rel="noopener">https://marketplace.visualstudio.com/items?itemName=fwcd.kotlin</a></li></ol><blockquote><p>参考：<a href="https://www.jianshu.com/p/90158cdc6d18" target="_blank" rel="noopener">https://www.jianshu.com/p/90158cdc6d18</a></p></blockquote><h2 id="更多资料"><a href="#更多资料" class="headerlink" title="更多资料"></a>更多资料</h2><ol><li>Kotlin 常用代码：<a href="https://devhints.io/kotlin" target="_blank" rel="noopener">https://devhints.io/kotlin</a></li><li>Kotlin 文档速查：<a href="https://devdocs.io/kotlin~1.6/" target="_blank" rel="noopener">https://devdocs.io/kotlin~1.6/</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Kotlin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021 年的 Web 标准进展</title>
      <link href="/development/web-progress-2021/"/>
      <url>/development/web-progress-2021/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Google DevFest 2021 成都站</p></blockquote><hr><h2 id="Web-组件"><a href="#Web-组件" class="headerlink" title="Web 组件"></a>Web 组件</h2><blockquote><p><a href="/programming/web-components-practise/slide.html">前情提要</a></p></blockquote><hr><h3 id="服务端渲染"><a href="#服务端渲染" class="headerlink" title="服务端渲染"></a>服务端渲染</h3><hr><h4 id="Template-to-Shadow-DOM"><a href="#Template-to-Shadow-DOM" class="headerlink" title="Template to Shadow DOM"></a>Template to Shadow DOM</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>host-element</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">shadowroot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>open<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>Light content<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>host-element</span><span class="token punctuation">></span></span></code></pre><hr><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>host-element</span><span class="token punctuation">></span></span>  #shadow-root (open)  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">></span></span>    ↳    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>Light content<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>host-element</span><span class="token punctuation">></span></span></code></pre><hr><h4 id="Shadow-DOM-to-Template"><a href="#Shadow-DOM-to-Template" class="headerlink" title="Shadow DOM to Template"></a>Shadow DOM to Template</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> html <span class="token operator">=</span> element<span class="token punctuation">.</span><span class="token function">getInnerHTML</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  includeShadowRoots<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  closedRoots<span class="token punctuation">:</span> <span class="token punctuation">[</span>shadowRoot1<span class="token punctuation">,</span> shadowRoot2<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><h4 id="组件初始化"><a href="#组件初始化" class="headerlink" title="组件初始化"></a>组件初始化</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>menu-toggle</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">shadowroot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>open<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>  Open Menu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>menu-toggle</span><span class="token punctuation">></span></span></code></pre><hr><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">MenuToggle</span> <span class="token keyword">extends</span> <span class="token class-name">HTMLElement</span> <span class="token punctuation">{</span>  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> button <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>shadowRoot<span class="token operator">?</span><span class="token punctuation">.</span>firstElementChild<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>button<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">const</span> shadow <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">attachShadow</span><span class="token punctuation">(</span><span class="token punctuation">{</span> mode<span class="token punctuation">:</span> <span class="token string">'open'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      shadow<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token string">`&lt;button>&lt;slot>&lt;/slot>&lt;/button>`</span></span><span class="token punctuation">;</span>      button <span class="token operator">=</span> shadow<span class="token punctuation">.</span>firstChild<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    button<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> toggle<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span>customElements<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">'menu-toggle'</span><span class="token punctuation">,</span> MenuToggle<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><h4 id="私有-Shadow-DOM"><a href="#私有-Shadow-DOM" class="headerlink" title="私有 Shadow DOM"></a>私有 Shadow DOM</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">MenuToggle</span> <span class="token keyword">extends</span> <span class="token class-name">HTMLElement</span> <span class="token punctuation">{</span>  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> <span class="token punctuation">{</span> shadowRoot <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attachInternals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>shadowRoot<span class="token punctuation">)</span> <span class="token punctuation">{</span>      shadowRoot <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">attachShadow</span><span class="token punctuation">(</span><span class="token punctuation">{</span> mode<span class="token punctuation">:</span> <span class="token string">'open'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      shadowRoot<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token string">`&lt;button>&lt;slot>&lt;/slot>&lt;/button>`</span></span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    shadowRoot<span class="token punctuation">.</span>firstChild<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> toggle<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span>customElements<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">'menu-toggle'</span><span class="token punctuation">,</span> MenuToggle<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><h4 id="仅限于解析器-——-为了安全"><a href="#仅限于解析器-——-为了安全" class="headerlink" title="仅限于解析器 —— 为了安全"></a>仅限于解析器 —— 为了安全</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> template <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'template'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>template<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'shadowroot'</span><span class="token punctuation">,</span> <span class="token string">'open'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 啥也没做</span>div<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>div<span class="token punctuation">.</span>shadowRoot<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// null</span></code></pre><hr><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> html <span class="token operator">=</span> <span class="token template-string"><span class="token string">`    &lt;div>      &lt;template shadowroot="open">&lt;/template>    &lt;/div>  `</span></span><span class="token punctuation">;</span><span class="token keyword">const</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>div<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> html<span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>div<span class="token punctuation">.</span>shadowRoot<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// null</span></code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> document <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DOMParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parseFromString</span><span class="token punctuation">(</span>html<span class="token punctuation">,</span> <span class="token string">'text/html'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>  includeShadowRoots<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token punctuation">{</span> shadowRoot <span class="token punctuation">}</span> <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>shadowRoot<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// # DocumentFragment</span></code></pre><hr><h4 id="CSS-渲染"><a href="#CSS-渲染" class="headerlink" title="CSS 渲染"></a>CSS 渲染</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nineties-button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">shadowroot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>open<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">      <span class="token selector">button </span><span class="token punctuation">{</span>        <span class="token property">color</span><span class="token punctuation">:</span> seagreen<span class="token punctuation">;</span>      <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/comicsans.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>  I'm Blue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nineties-button</span><span class="token punctuation">></span></span></code></pre><hr><h4 id="Polyfill-补丁"><a href="#Polyfill-补丁" class="headerlink" title="Polyfill 补丁"></a>Polyfill 补丁</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> template <span class="token keyword">of</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'template[shadowroot]'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> mode <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'shadowroot'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> shadowRoot <span class="token operator">=</span> template<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">attachShadow</span><span class="token punctuation">(</span><span class="token punctuation">{</span> mode <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  shadowRoot<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>template<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>  template<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><hr><h4 id="数据绑定（难产）"><a href="#数据绑定（难产）" class="headerlink" title="数据绑定（难产）"></a>数据绑定（难产）</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>{{name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    Email: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mailto:{{email}}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{email}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span></code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> template <span class="token operator">=</span> document<span class="token punctuation">.</span>currentScript<span class="token punctuation">.</span>previousElementSibling<span class="token punctuation">;</span><span class="token keyword">const</span> tree <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">createInstance</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  name<span class="token punctuation">:</span> <span class="token string">'Ryosuke Niwa'</span><span class="token punctuation">,</span>  email<span class="token punctuation">:</span> <span class="token string">'rniwa@webkit.org'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">prepend</span><span class="token punctuation">(</span>tree<span class="token punctuation">)</span><span class="token punctuation">;</span>tree<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">'Ryosuke Niwa'</span><span class="token punctuation">,</span> email<span class="token punctuation">:</span> <span class="token string">'rniwa@apple.com'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><hr><h3 id="Event-Submitter"><a href="#Event-Submitter" class="headerlink" title="Event Submitter"></a>Event Submitter</h3><p><a href="https://github.com/idea2app/event-submitter-polyfill" target="_blank" rel="noopener">https://github.com/idea2app/event-submitter-polyfill</a></p><hr><h4 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>data<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">data-name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>first<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Fisrt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">data-name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>second<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Second<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><pre class=" language-javascript"><code class="language-javascript">document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'form'</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'submit'</span><span class="token punctuation">,</span> event <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> <span class="token punctuation">{</span> name <span class="token punctuation">}</span> <span class="token operator">=</span> event<span class="token punctuation">.</span>submitter<span class="token punctuation">.</span>dataset<span class="token punctuation">,</span>    <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>elements<span class="token punctuation">;</span>  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`/api/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span> data<span class="token punctuation">:</span> data<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><h4 id="React"><a href="#React" class="headerlink" title="React"></a>React</h4><pre class=" language-typescript"><code class="language-typescript"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> FormEvent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span> render <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-dom'</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">handleSubmit</span><span class="token punctuation">(</span>event<span class="token punctuation">:</span> FormEvent<span class="token operator">&lt;</span>HTMLFormElement<span class="token operator">></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> <span class="token punctuation">{</span> name <span class="token punctuation">}</span> <span class="token operator">=</span> event<span class="token punctuation">.</span>nativeEvent<span class="token punctuation">.</span>submitter<span class="token punctuation">.</span>dataset<span class="token punctuation">,</span>    <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> event<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>elements<span class="token punctuation">;</span>  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`/api/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span> data<span class="token punctuation">:</span> data<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">render</span><span class="token punctuation">(</span>  <span class="token operator">&lt;</span>form onSubmit<span class="token operator">=</span><span class="token punctuation">{</span>handleSubmit<span class="token punctuation">}</span><span class="token operator">></span>    <span class="token operator">&lt;</span>input name<span class="token operator">=</span><span class="token string">"data"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>button type<span class="token operator">=</span><span class="token string">"submit"</span> data<span class="token operator">-</span>name<span class="token operator">=</span><span class="token string">"first"</span><span class="token operator">></span>      Fisrt    <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>button type<span class="token operator">=</span><span class="token string">"submit"</span> data<span class="token operator">-</span>name<span class="token operator">=</span><span class="token string">"second"</span><span class="token operator">></span>      Second    <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span><span class="token punctuation">,</span>  document<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><h3 id="FormData-事件"><a href="#FormData-事件" class="headerlink" title="FormData 事件"></a>FormData 事件</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> form <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'form'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>form<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'formdata'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> formData <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'my-input'</span><span class="token punctuation">,</span> myInputValue<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><blockquote><ol><li><a href="/programming/more-capable-form-controls/">标准提案作者博文译文</a></li><li><a href="https://github.com/webcomponents/polyfills/issues/172" target="_blank" rel="noopener">polyfill 开发进展</a></li></ol></blockquote><hr><h3 id="Web-表单组件"><a href="#Web-表单组件" class="headerlink" title="Web 表单组件"></a>Web 表单组件</h3><hr><h4 id="Element-Internals"><a href="#Element-Internals" class="headerlink" title="Element Internals"></a>Element Internals</h4><pre class=" language-typescript"><code class="language-typescript"><span class="token keyword">class</span> <span class="token class-name">MyCounter</span> <span class="token keyword">extends</span> <span class="token class-name">HTMLElement</span> <span class="token punctuation">{</span>  <span class="token keyword">static</span> formAssociated <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">;</span>  <span class="token keyword">private</span> value_ <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">private</span> internals_ <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">attachInternals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">get</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value_<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">set</span> <span class="token function">value</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>value_ <span class="token operator">=</span> v<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">get</span> <span class="token function">form</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>internals_<span class="token punctuation">.</span>form<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">get</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">get</span> <span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>localName<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">get</span> <span class="token function">validity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>internals_<span class="token punctuation">.</span>validity<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">get</span> <span class="token function">validationMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>internals_<span class="token punctuation">.</span>validationMessage<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">get</span> <span class="token function">willValidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>internals_<span class="token punctuation">.</span>willValidate<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token function">checkValidity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>internals_<span class="token punctuation">.</span><span class="token function">checkValidity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token function">reportValidity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>internals_<span class="token punctuation">.</span><span class="token function">reportValidity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span>customElements<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">'my-counter'</span><span class="token punctuation">,</span> MyCounter<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><h4 id="HTML-1"><a href="#HTML-1" class="headerlink" title="HTML"></a>HTML</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">contenteditable</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span></code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">{</span> content <span class="token punctuation">}</span> <span class="token operator">=</span> document<span class="token punctuation">.</span>currentScript<span class="token punctuation">.</span>previousElementSibling<span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">MyInput</span> <span class="token keyword">extends</span> <span class="token class-name">HTMLInputElement</span> <span class="token punctuation">{</span>  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attachShadow</span><span class="token punctuation">(</span><span class="token punctuation">{</span> mode<span class="token punctuation">:</span> <span class="token string">'open'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span>customElements<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">'my-input'</span><span class="token punctuation">,</span> MyInput<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token keyword">extends</span><span class="token punctuation">:</span> <span class="token string">'input'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">is</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>my-input<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><hr><h4 id="WebCell"><a href="#WebCell" class="headerlink" title="WebCell"></a>WebCell</h4><pre class=" language-typescript"><code class="language-typescript"><span class="token keyword">import</span> <span class="token punctuation">{</span> component<span class="token punctuation">,</span> mixinForm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'web-cell'</span><span class="token punctuation">;</span>@<span class="token function">component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  tagName<span class="token punctuation">:</span> <span class="token string">'my-counter'</span><span class="token punctuation">,</span>  renderTarget<span class="token punctuation">:</span> <span class="token string">'shadowRoot'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">MyCounter</span> <span class="token keyword">extends</span> <span class="token class-name">mixinForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token operator">&lt;</span>div contenteditable<span class="token operator">=</span><span class="token string">"true"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> standard </tag>
            
            <tag> component </tag>
            
            <tag> form </tag>
            
            <tag> API </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开源给中国的精神启示</title>
      <link href="/community/spiritual-inspiration-of-open-source-to-china/"/>
      <url>/community/spiritual-inspiration-of-open-source-to-china/</url>
      
        <content type="html"><![CDATA[<p>COSCon 2021</p><hr><h2 id="开源之功利"><a href="#开源之功利" class="headerlink" title="开源之功利"></a>开源之功利</h2><hr><p>开源是“用爱发电”？</p><hr><p>开源是一种诞生自计算机软硬件行业的</p><p><strong>新型生产力、生产关系</strong></p><hr><h3 id="于己"><a href="#于己" class="headerlink" title="于己"></a>于己</h3><ol><li>Git 记录代码成长</li><li>GitHub 绿点是工程师最好的简历</li><li>开源项目开发、管理流程称得上业界最佳实践</li></ol><hr><h3 id="于司"><a href="#于司" class="headerlink" title="于司"></a>于司</h3><ol><li>快速搭建业务原型</li><li>技术核心社群共创</li><li>开源做生态，商业来恰饭</li></ol><hr><h2 id="开源之开放"><a href="#开源之开放" class="headerlink" title="开源之开放"></a>开源之开放</h2><hr><p>开源的核心是「开放式社会化协作」</p><hr><p>开放其实也是表面</p><hr><p>开放只不过是一群人的最佳实践</p><hr><p>一群「主动参与」的人总结出的最佳实践</p><hr><p>「开放」的核心是「主动」</p><hr><p>包括国家倡导的「自主创新」</p><hr><p>不「自主」，无「创新」</p><hr><p>不「主动」，无「开源」</p><hr><h2 id="开源之市集"><a href="#开源之市集" class="headerlink" title="开源之市集"></a>开源之市集</h2><hr><p>《大教堂与市集》</p><p><img src="https://upload.wikimedia.org/wikipedia/zh/c/c4/Cathedral-and-the-Bazaar-book-cover.jpg?1635167493419"></p><hr><p>开源三大力量</p><ol><li>个人开发者社区</li><li>贡献开源的商业公司</li><li>开源基金会</li></ol><hr><p>中华传统文化缺乏「主动」的基因</p><hr><p>中国大陆鲜见活跃的「社群」</p><hr><p>不少人对中国大陆的社群发展</p><p>持短期悲观态度</p><hr><p>过去没有「主动」基因</p><p>就不做社群、不做开源了吗？</p><hr><p>社群本就是锻炼</p><p>青年人「主动参与开放式协作」的试验田</p><hr><p>开源社区、开放式社群是</p><p>推动中国开放、包容的有生力量</p><hr><h2 id="开源之成都"><a href="#开源之成都" class="headerlink" title="开源之成都"></a>开源之成都</h2><p><img src="https://ows.blob.core.chinacloudapi.cn/files/assets/COS_Con_2021_banner_c902bf0206.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> Community </category>
          
      </categories>
      
      
        <tags>
            
            <tag> China </tag>
            
            <tag> open-source </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自由职业者中文手册</title>
      <link href="/other/freelancer-chinese-manual/"/>
      <url>/other/freelancer-chinese-manual/</url>
      
        <content type="html"><![CDATA[<h2 id="在线流程"><a href="#在线流程" class="headerlink" title="在线流程"></a>在线流程</h2><h3 id="合同签名"><a href="#合同签名" class="headerlink" title="合同签名"></a>合同签名</h3><p>将<strong>合同终稿</strong>生成 PDF 后，打开 <a href="https://www.ilovepdf.com/zh-cn/sign-pdf" target="_blank" rel="noopener">iLovePDF 签名工具</a>，即可上传并签名，然后发给甲方重复同样步骤。</p><h3 id="发票开具"><a href="#发票开具" class="headerlink" title="发票开具"></a>发票开具</h3><h4 id="纸质版"><a href="#纸质版" class="headerlink" title="纸质版"></a>纸质版</h4><p>进入<a href="https://12366.chinatax.gov.cn/bsfw/onlinetaxation/main" target="_blank" rel="noopener">国家税务总局 12366 纳税服务平台</a>，点击你常居地的省份即可进入当地税务局在线办税系统。</p><p><img src="https://12366.chinatax.gov.cn/core-plugins/12366/css/images/mapchina.jpg"></p><h4 id="电子版"><a href="#电子版" class="headerlink" title="电子版"></a>电子版</h4><p>找公司代开发票时，其开票软件可能生成 <a href="https://zh.wikipedia.org/wiki/%E5%9B%BD%E5%AE%B6%E7%89%88%E5%BC%8F%E6%96%87%E6%A1%A3%E6%A0%BC%E5%BC%8F" target="_blank" rel="noopener">ODF 格式</a>文件，可用国产<a href="https://www.yozodcs.com/page/example.html" target="_blank" rel="noopener">永中 Office 文档阅读/转换器</a>。</p>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FreeLancer </tag>
            
            <tag> manual </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让 Web 打包器再次简单！</title>
      <link href="/development/make-web-bundler-easy-again/"/>
      <url>/development/make-web-bundler-easy-again/</url>
      
        <content type="html"><![CDATA[<blockquote><p>华为云开发者社区<br><br>2021 年 3 月 27 日演讲</p></blockquote><hr><h2 id="Web-最初很简单"><a href="#Web-最初很简单" class="headerlink" title="Web 最初很简单"></a>Web 最初很简单</h2><ul><li>HTTP</li><li>HTML</li><li>CSS</li><li>JavaScript</li></ul><hr><iframe    style="width: 100%; height: 90vh"    scrolling="no" frameborder="no" loading="lazy"    allowtransparency="true" allowfullscreen="true"    title="Web standard - Resource import"    src="https://codepen.io/tech_query/embed/MWbVwWv?height=265&theme-id=dark&default-tab=html,result"></iframe><hr><h2 id="Web-后来很强大"><a href="#Web-后来很强大" class="headerlink" title="Web 后来很强大"></a>Web 后来很强大</h2><ul><li>BOM、DOM</li><li>LESS、SASS、Stylus</li><li>ECMAScript 6+、TypeScript</li><li>WebAssembly</li><li>Canvas、WebGL</li><li>WebSocket</li><li>IndexedDB</li><li>Web Worker、PWA</li><li>WebUSB、WebAuthn</li><li>……</li></ul><hr><h3 id="Web-打包器变得很复杂"><a href="#Web-打包器变得很复杂" class="headerlink" title="Web 打包器变得很复杂"></a>Web 打包器变得很复杂</h3><hr><h4 id="JavaScript-库打包器"><a href="#JavaScript-库打包器" class="headerlink" title="JavaScript 库打包器"></a>JavaScript 库打包器</h4><table><thead><tr><th align="center"><small>名称及官网</small></th><th align="center"><small>简介</small></th><th align="center"><small>备注</small></th></tr></thead><tbody><tr><td align="center"><a href="https://tech-query.me/AMD_bundle.js/">AMD-bundle.js</a></td><td align="center"><small>AMD、CJS 和 ES 通用模块打包器</small></td><td align="center"><small>本人开发 jQuery 仿制版时自研</small></td></tr><tr><td align="center"><a href="https://rollupjs.org/" target="_blank" rel="noopener">rollup.js</a></td><td align="center"><small>ES 模块打包器</small></td><td align="center"><small>全球首个知名的 ES 模块打包器</small></td></tr><tr><td align="center"><a href="https://github.com/developit/microbundle" target="_blank" rel="noopener">MicroBundle</a></td><td align="center"><small>基于 rollup 的 JS 打包器</small></td><td align="center"><small>Preact 等知名库的打包器</small></td></tr><tr><td align="center"><a href="https://esbuild.github.io/" target="_blank" rel="noopener">ESBuild</a></td><td align="center"><small>用 Go 语言开发的 ES/TS 打包器</small></td><td align="center"><small>全球性能最强</small></td></tr></tbody></table><hr><h4 id="Web-应用打包器"><a href="#Web-应用打包器" class="headerlink" title="Web 应用打包器"></a>Web 应用打包器</h4><table><thead><tr><th align="center"><small>名称及官网</small></th><th align="center"><small>简介</small></th><th align="center"><small>备注</small></th></tr></thead><tbody><tr><td align="center"><a href="https://web-cell.dev/DevCLI/" target="_blank" rel="noopener">DevCLI</a></td><td align="center"><small>HTML 5、CSS 3、ECMAScript 6+ 原生资源打包器</small></td><td align="center"><small>本人开发 WebCell 1.0 时自研</small></td></tr><tr><td align="center"><a href="https://webpack.js.org/" target="_blank" rel="noopener">webpack</a></td><td align="center"><small>插件化 Web 资源打包器</small></td><td align="center"><small>全球最著名、最复杂的打包器</small></td></tr><tr><td align="center"><a href="https://parceljs.org/" target="_blank" rel="noopener">Parcel</a></td><td align="center"><small>零配置 Web 原生资源打包器</small></td><td align="center"><small>全球次著名、最易用的打包器</small></td></tr><tr><td align="center"><a href="https://www.snowpack.dev/" target="_blank" rel="noopener">Snowpack</a></td><td align="center"><small>基于 ESBuild 的 Web 资源打包器</small></td><td align="center"><small>全球首个知名 ES 模块应用打包器</small></td></tr><tr><td align="center"><a href="http://vitejs.dev/" target="_blank" rel="noopener">Vite</a></td><td align="center"><small>基于 rollup 和 ESBuild 的 Web 资源打包器</small></td><td align="center"><small>尤雨溪开发 Vue 3.0 时自研</small></td></tr></tbody></table><hr><h4 id="痛点：配置复杂！！！"><a href="#痛点：配置复杂！！！" class="headerlink" title="痛点：配置复杂！！！"></a>痛点：配置复杂！！！</h4><ol><li>标准滞后</li><li>实现繁多</li><li>配置复杂</li><li>迁移困难</li></ol><hr><p>代码还没写，环境配一天……</p><hr><h2 id="我理想中的打包器"><a href="#我理想中的打包器" class="headerlink" title="我理想中的打包器"></a>我理想中的打包器</h2><table><thead><tr><th align="center">本人自研（已废弃）</th><th align="center">社区同款</th><th align="center">社区现状</th></tr></thead><tbody><tr><td align="center">AMD-bundle.js</td><td align="center">ESBuild</td><td align="center">CSS modules 官方尚未支持，但有社区插件</td></tr><tr><td align="center">DevCLI</td><td align="center">Parcel</td><td align="center">v1 bug 无人修复，v2 变复杂且难产</td></tr></tbody></table><hr><h3 id="设计原则"><a href="#设计原则" class="headerlink" title="设计原则"></a>设计原则</h3><ul><li><strong>资源文件引入机制</strong>只依赖 <strong>HTML、CSS、JavaScript 原生语法</strong></li><li><strong>资源文件扩展名</strong>支持：<ul><li>MarkDown、LESS、SASS、TypeScript 等<strong>高级编译语言</strong></li><li>JSON、YAML、CSV 等<strong>文本数据格式</strong></li><li>图片、音视频等<strong>二进制文件的 URI</strong></li></ul></li></ul><hr><ul><li>根据依赖树的需要，自动安装<strong>资源编译器</strong></li><li>自动读取项目现有的各种<strong>编译器配置文件</strong></li><li><strong>打包配置</strong>按社区习惯设置<strong>最优默认值</strong></li><li>配置文件支持 <a href="https://json-schema.org/" target="_blank" rel="noopener">JSON schema</a>、<strong>ES 模块</strong>和 <strong>TypeScript 类型定义</strong></li></ul><hr><h3 id="架构概略"><a href="#架构概略" class="headerlink" title="架构概略"></a>架构概略</h3><ol><li>编译器转换各类代码文件</li><li>编译器生成<strong>抽象语法树</strong>，并查找<strong>资源引用语句</strong></li><li>构造依赖树</li><li>基于观察者模型<strong>增量更新依赖</strong></li></ol><hr><h2 id="我有一个梦想"><a href="#我有一个梦想" class="headerlink" title="我有一个梦想"></a>我有一个梦想</h2><hr><p>Web standard first!</p><hr><p>Make the Web bundler easy again!</p>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> bundle </tag>
            
            <tag> easy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>美国王牌</title>
      <link href="/democracy/america-trump/"/>
      <url>/democracy/america-trump/</url>
      
        <content type="html"><![CDATA[<h2 id="权利还给人民"><a href="#权利还给人民" class="headerlink" title="权利还给人民"></a>权利还给人民</h2><blockquote><p>Today’s ceremony, however, has very special meaning. Because today, we are not merely transferring power from one administration to another or from one party to another.</p><p>But <strong>we are transferring power from Washington D.C. and giving it back to you, the people.</strong></p><p><em><strong>Donald John Trump</strong></em> &gt; <em>January 21th, 2017</em></p></blockquote><p>2021 年 1 月 6 日国会山示威后，有 Twitter 中文网友评论上面这段演讲词时说：</p><blockquote><p>4 年前听着觉得是政客的套话，今天才发现是<strong>川普的理想</strong>。</p></blockquote><iframe    src="https://www.youtube.com/embed/REzS8LcYR78"    style="width: 100%; height: 90vh; border: none"    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"    allowfullscreen></iframe><iframe    src="https://www.youtube.com/embed/_PCHcSVWfGk"    style="width: 100%; height: 90vh; border: none"    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"    allowfullscreen></iframe><iframe    src="https://www.youtube.com/embed/FRmldeESrp8"    style="width: 100%; height: 90vh; border: none"    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"    allowfullscreen></iframe><h2 id="川普改变华盛顿"><a href="#川普改变华盛顿" class="headerlink" title="川普改变华盛顿"></a>川普改变华盛顿</h2><p>其实我是先看了 2020 年美国大选的一些川普家的竞选演讲后，才在国会山示威后看了上面的就职演说。</p><p>在就职演说看到后半段时，我竟情难自控地<strong>泪流满面</strong>、<strong>抽泣不已</strong>…… 而上次面对一个政治人物的演讲热泪盈眶还是<a href="https://movie.douban.com/subject/26761416/" target="_blank" rel="noopener">《至暗时刻》</a>中的丘吉尔。</p><p>大概是因为难得有个兑现大多数<strong>竞选承诺</strong>，我还通过互联网见证了这些<strong>历史时刻</strong>，并为川普深深折服 ——</p><ul><li><strong>率真</strong><ul><li>抨击<strong>白左政治正确</strong>矫枉过正</li><li>反击<strong>主流媒体左倾</strong></li></ul></li><li><strong>务实</strong>：美国优先</li><li><strong>高效</strong>：乔·拜登从政 47 年碌碌无为，川普 47 个月就卓有成效</li><li><strong>果敢</strong><ul><li>阿富汗、中东和平协议</li><li>朝鲜弃核</li><li><strong>力挺台湾、香港民主政体</strong></li><li><strong>制裁中国侵害人权的官员、公司</strong></li></ul></li><li><strong>坚韧</strong>：顶住 3 次弹劾、1 次患病、1 次<strong>建制派集体反扑的大选舞弊</strong>，并依然斗志昂扬</li></ul><iframe    src="https://www.youtube.com/embed/7YLMsWH8ZNU"    style="width: 100%; height: 90vh; border: none"    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"    allowfullscreen></iframe><iframe    src="https://www.youtube.com/embed/tB9QYP3udO4"    style="width: 100%; height: 90vh; border: none"    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"    allowfullscreen></iframe><h2 id="让美国再次伟大"><a href="#让美国再次伟大" class="headerlink" title="让美国再次伟大"></a>让美国再次伟大</h2><p>聆听了这些激动人心的演讲，关注了 1 月 6 日<a href="https://zh.wikipedia.org/zh-cn/%E7%BE%8E%E5%9C%8B%E5%9C%8B%E6%9C%83%E8%81%AF%E5%B8%AD%E6%9C%83%E8%AD%B0" target="_blank" rel="noopener">美国国会参众两院联席会议</a>的直播，我深深地体会了<strong>国会山绝大多数和平示威的川普支持者</strong>所坚信的川普格言 ——</p><blockquote><p><strong>Make America great again!</strong></p></blockquote><p>但愿<strong>有生之年</strong>，在生我养我的这片土地上，也能看到<strong>积极参与公共事务的民众</strong>里，有越来越多的<strong>民选官</strong>走上历史的舞台 ——</p><blockquote><p><strong>让中国再次伟大！</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Democracy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> USA </tag>
            
            <tag> Trump </tag>
            
            <tag> election </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【译】更强大的表单控件</title>
      <link href="/programming/more-capable-form-controls/"/>
      <url>/programming/more-capable-form-controls/</url>
      
        <content type="html"><![CDATA[<blockquote><p>原文：<a href="https://web.dev/more-capable-form-controls/" target="_blank" rel="noopener">https://web.dev/more-capable-form-controls/</a></p></blockquote><p>有了一个新事件，再加上一些自定义元素 API，表单的使用变得更加容易。</p><hr><p>很多开发者构建自定义表单元素，提供浏览器未内置的控件，或自定义超越内置表单控件的外观与体验。</p><p>然而，复制 HTML 内置表单控件的特性很难。想一下当你把一个 <code>&lt;input&gt;</code> 元素加进一个表单时，它自动获得的一些特性：</p><ul><li>输入框自动加进表单的控件列表</li><li>输入框中的值自动与表单一起提交</li><li>输入框参与<a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Forms/Data_form_validation" target="_blank" rel="noopener">表单校验</a>，你可以用 <code>:valid</code> 和 <code>:invalid</code> 伪类为输入框设置样式</li><li>表单重置、重加载时，或浏览器尝试自动填充表单项时，输入框都会被通知</li></ul><p>自定义表单组件通常没有这些特性。开发者能用 JavaScript 解决一些限制，比如向一个表单添加一个隐藏的 <code>&lt;input&gt;</code> 以参与表单提交。但其它特性无法单单用 JavaScript 复制。</p><p>两个 Web 新特性让构建自定义表单控件更简单，解决了现有自定义控件的限制：</p><ul><li><code>formdata</code> 事件让一个任意的 JavaScript 对象参与到表单提交中，所以你可以无需一个隐藏的 <code>&lt;input&gt;</code> 就能添加表单数据</li><li><strong>Form-associated Custom Elements API</strong> 让自定义元素表现得更像内置表单控件</li></ul><p>这两个特性可用于创建效果更好的新型控件。</p><blockquote><p>构建自定义表单组件是个高级话题。本文假定您对表单和表单控件有一定的了解。当构建一个自定义表单控件时，有很多因素要考虑，特别是确定你的控件是对所有用户无障碍的。学习更多表单知识，前往 <a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Forms" target="_blank" rel="noopener">MDN 表单指南</a>.</p></blockquote><h2 id="基于事件的-API"><a href="#基于事件的-API" class="headerlink" title="基于事件的 API"></a>基于事件的 API</h2><p><code>formdata</code> 事件是一个让任何 JavaScript 代码参与表单提交的底层 API。该机制是这样的：</p><ol><li> 你添加一个 <code>formdata</code> 事件监听器到你想交互的表单</li><li> 当一个用户点击提交按钮，该表单触发一个 <code>formdata</code> 事件，它包含一个持有所有待提交数据的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/FormData" target="_blank" rel="noopener"><code>FormData</code></a> 对象</li><li> 每个 <code>formdata</code> 监听器都有机会在表单提交前添加或修改数据</li></ol><p>这里是一个在 <code>formdata</code> 事件监听器中发送一个单值的例子：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> form <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'form'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// FormData 事件在 &lt;form> 提交时、传输前触发</span><span class="token comment" spellcheck="true">// 该事件有个 formData 属性</span>form<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'formdata'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> formData <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// https://developer.mozilla.org/zh-CN/docs/Web/API/FormData</span>  formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'my-input'</span><span class="token punctuation">,</span> myInputValue<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>用我们在 Glitch 的示例来尝试。务必在 Chrome 77 或更高版本上运行，以查看该 API 的运行情况。</p><iframe  src="https://glitch.com/embed/#!/embed/formdata-event?path=README.md&previewSize=0"  title="formdata-event on Glitch"  allow="geolocation; microphone; camera; midi; vr; encrypted-media"  style="height: 90vh; width: 100%; border: 0;"></iframe><h2 id="表单关联的自定义元素"><a href="#表单关联的自定义元素" class="headerlink" title="表单关联的自定义元素"></a>表单关联的自定义元素</h2><p>你可以把基于事件的 API 用于任何类型的组件，但它只允许你与提交过程交互。</p><p>标准化的表单控件除了提交外，还参与了表单生命周期的许多部分。表单关联的自定义元素旨在填补自定义控件和内置控件的鸿沟，并匹配了很多标准表单元素的特性：</p><ul><li>当你把一个表单关联的自定义元素放进一个 <code>&lt;form&gt;</code>，它就像一个浏览器提供的控件，自动与该表单关联。</li><li>该元素可被一个 <code>&lt;label&gt;</code> 元素标记</li><li>该元素可设置一个与表单一起自动提交的值</li><li>该元素可设置一个标记，指示它是否取得有效输入。如果其中一个表单元素有无效输入，该表单则不能被提交。</li><li>该元素可提供一些用于表单生命周期多个部分的回调 —— 比如当该表单被禁用或重置到它的默认状态</li><li>该元素支持标准的 CSS 表单控件伪类，如 <code>:disabled</code> 和 <code>:invalid</code></li></ul><p>这么多功能！本文不会涉及所有内容，但将阐述把自定义元素与表单集成所需的基础知识。</p><p>本节假设你对自定义元素有基本的了解。有关自定义元素的介绍，参见 Web Fundamentals 上的<a href="https://developers.google.com/web/fundamentals/web-components/customelements" target="_blank" rel="noopener">《Custom Elements v1：可复用的 Web 组件》</a>。</p><h3 id="定义一个表单关联的自定义元素"><a href="#定义一个表单关联的自定义元素" class="headerlink" title="定义一个表单关联的自定义元素"></a>定义一个表单关联的自定义元素</h3><p>把一个自定义元素转变成一个表单关联的自定义元素，需要几个额外步骤:</p><ul><li>添加一个静态 <code>formAssociated</code> 属性到你的自定义元素类，这告诉浏览器把该元素看作一个表单控件</li><li>在该元素上调用 <code>attachInternals()</code> 方法，以访问表单控件的其它方法和属性，如 <code>setFormValue()</code> 和 <code>setValidity()</code></li><li>添加表单控件支持的通用属性和方法，如 <code>name</code>、<code>value</code> 和 <code>validity</code></li></ul><p>来看看如何把这些项目融入一个基础的自定义元素定义：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 表单关联的自定义元素必须是独立的自定义元素 ——</span><span class="token comment" spellcheck="true">// 意味着它们必须继承自 HTMLElement，而非它的一个子类。</span><span class="token keyword">class</span> <span class="token class-name">MyCounter</span> <span class="token keyword">extends</span> <span class="token class-name">HTMLElement</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 把该元素标记为一个表单关联的自定义元素</span>  <span class="token keyword">static</span> formAssociated <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 获得访问内部表单控件 API 的能力</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>internals_ <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">attachInternals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 该控件的内部值</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>value_ <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// 表单控件通常暴露一个“value”属性</span>  <span class="token keyword">get</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value_<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">set</span> <span class="token function">value</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>value_ <span class="token operator">=</span> v<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// 以下属性和方法并非必须，但浏览器级表单控件提供了它们。</span>  <span class="token comment" spellcheck="true">// 提供它们有助于确保与浏览器提供的控件保持一致。</span>  <span class="token keyword">get</span> <span class="token function">form</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>internals_<span class="token punctuation">.</span>form<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">get</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">get</span> <span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>localName<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">get</span> <span class="token function">validity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>internals_<span class="token punctuation">.</span>validity<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">get</span> <span class="token function">validationMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>internals_<span class="token punctuation">.</span>validationMessage<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">get</span> <span class="token function">willValidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>internals_<span class="token punctuation">.</span>willValidate<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token function">checkValidity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>internals_<span class="token punctuation">.</span><span class="token function">checkValidity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token function">reportValidity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>internals_<span class="token punctuation">.</span><span class="token function">reportValidity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// ...</span><span class="token punctuation">}</span>customElements<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">'my-counter'</span><span class="token punctuation">,</span> MyCounter<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>一旦注册，你就可以在你使用浏览器表单控件的任何地方使用这个控件：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>兔子的数量: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>my-counter</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>my-counter</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>提交<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><h3 id="设置一个值"><a href="#设置一个值" class="headerlink" title="设置一个值"></a>设置一个值</h3><p><code>attachInternals()</code> 方法返回一个可访问表单控件 API 的 <code>ElementInternals</code> 对象。这些 API 中最基础的是 <code>setFormValue()</code> 方法，用来设置该控件的当前值。<code>setFormValue()</code> 方法可接受三种类型之一的值：</p><ul><li>一个字符串值</li><li>一个 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/File" target="_blank" rel="noopener"><code>File</code></a> 对象</li><li>一个 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/FormData" target="_blank" rel="noopener"><code>FormData</code></a> 对象，你可以用一个 <code>FormData</code> 对象来传多值（例如一个信用卡输入控件可能会传一个卡号、过期日期和验证码）</li></ul><p>设置一个简单值：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">this</span><span class="token punctuation">.</span>internals_<span class="token punctuation">.</span><span class="token function">setFormValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value_<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>设置多值，你可以执行以下操作：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 用该控件名作为提交数据的基础名</span><span class="token keyword">const</span> n <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> entries <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>entries<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>n <span class="token operator">+</span> <span class="token string">'-first-name'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>firstName_<span class="token punctuation">)</span><span class="token punctuation">;</span>entries<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>n <span class="token operator">+</span> <span class="token string">'-last-name'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lastName_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>internals_<span class="token punctuation">.</span><span class="token function">setFormValue</span><span class="token punctuation">(</span>entries<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><blockquote><p><code>setFormValue()</code> 方法接受一个可选的第二参数 <code>state</code>，用来存储该控件的内部状态。<br>详情参见本文「恢复表单状态」一节</p></blockquote><h3 id="输入校验"><a href="#输入校验" class="headerlink" title="输入校验"></a>输入校验</h3><p>你的控件也可以通过调用内部对象上的 <code>setValidity()</code> 方法参与表单校验。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 假设在内部值更新时调用此方法</span><span class="token function">onUpdateValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>        <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token string">':disabled'</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">hasAttribute</span><span class="token punctuation">(</span><span class="token string">'required'</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>value_ <span class="token operator">&lt;</span> <span class="token number">0</span>    <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>internals_<span class="token punctuation">.</span><span class="token function">setValidity</span><span class="token punctuation">(</span>            <span class="token punctuation">{</span> customError<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">'Value cannot be negative.'</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>internals_<span class="token punctuation">.</span><span class="token function">setValidity</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>internals<span class="token punctuation">.</span><span class="token function">setFormValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>你可以用 <code>:valid</code> 和 <code>:invalid</code> 伪类给一个表单关联的自定义元素设置样式，就像一个内置表单控件一样。</p><blockquote><p>尽管你可以设置一个校验消息，但 Chrome 目前不能显示表单关联自定义元素的校验消息。</p></blockquote><h3 id="生命周期回调"><a href="#生命周期回调" class="headerlink" title="生命周期回调"></a>生命周期回调</h3><p>Form-associated Custom Elements API 包含一组额外的生命周期回调，以绑定到表单生命周期。</p><p>这些回调是可选的：仅在你的元素需要在生命周期的某一刻做某事时才实现一个回调。</p><h4 id="void-formAssociatedCallback-form"><a href="#void-formAssociatedCallback-form" class="headerlink" title="void formAssociatedCallback(form)"></a><code>void formAssociatedCallback(form)</code></h4><p>当浏览器将一个表单元素关联到该元素时调用，或从一个表单元素解除关联该元素时。</p><h4 id="void-formDisabledCallback-disabled"><a href="#void-formDisabledCallback-disabled" class="headerlink" title="void formDisabledCallback(disabled)"></a><code>void formDisabledCallback(disabled)</code></h4><p>该元素的 <code>disabled</code> 状态改变后，无论是因为该元素的 <code>disabled</code> 属性被添加或移除；还是因为该元素的一个祖先 <code>&lt;fieldset&gt;</code> 的 <code>disabled</code> 状态被改变。<code>disabled</code> 参数代表该元素的新<a href="https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#concept-fe-disabled" target="_blank" rel="noopener">禁用状态</a>。例如，当该元素被禁用时，它可能要禁用它影子 DOM 中的元素。</p><h4 id="void-formResetCallback"><a href="#void-formResetCallback" class="headerlink" title="void formResetCallback()"></a><code>void formResetCallback()</code></h4><p>该表单被重置后调用。该元素应该将其自身重置回某种默认状态。对于 <code>&lt;input /&gt;</code> 元素，这通常涉及设置 <code>value</code> 属性以匹配标签中设置的 <code>value</code> 属性（或在复选框的案例中，设置 <code>checked</code> 对象属性以匹配 <code>checked</code> 标签属性）。</p><h4 id="void-formStateRestoreCallback-state-mode"><a href="#void-formStateRestoreCallback-state-mode" class="headerlink" title="void formStateRestoreCallback(state, mode)"></a><code>void formStateRestoreCallback(state, mode)</code></h4><p>在两种情形之一被调用：</p><ul><li><p>当浏览器恢复该元素状态时（例如，一次导航后，或当浏览器重启时），在此情形下 <code>mode</code> 参数是 <code>&quot;restore&quot;</code></p></li><li><p>当浏览器的输入助手特性（诸如表单自动填充）设置一个值时，在此情形下 <code>mode</code> 参数是 <code>&quot;autocomplete&quot;</code></p></li></ul><p>第一个参数的类型则取决于 <code>setFormValue()</code> 方法被怎样调用。详情参见本文「恢复表单状态」一节。</p><h3 id="恢复表单状态"><a href="#恢复表单状态" class="headerlink" title="恢复表单状态"></a>恢复表单状态</h3><p>在某些情形下 —— 如当导航返回一个页面时，或重启浏览器时，浏览器可能尝试恢复该表单到用户保留的状态。</p><p>对于一个表单关联的自定义元素，被恢复的状态来自你传到 <code>setFormValue()</code> 方法的值。就像早前示例中展示的那样，你可以用一个单值参数或两个参数调用该方法：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">this</span><span class="token punctuation">.</span>internals_<span class="token punctuation">.</span><span class="token function">setFormValue</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> state<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>此处的 <code>value</code> 代表该控件的可提交参数。此处的可选 <code>state</code> 参数是一个该控件状态的 <em>内部</em> 表示，可包含不发送到服务器的数据。该 <code>state</code> 参数具有与 <code>value</code> 参数相同的类型 —— 它可以是一个字符串、<code>File</code> 或 <code>FormData</code> 对象。</p><p><code>state</code> 参数在你无法只基于值去恢复一个控件状态时很有用。例如，假设你创建了一个多模的颜色选择器：一个调色板或 RGB 色轮。可提交的 <em>值</em> 会是规范形式的选中颜色，如 <code>&quot;#7fff00&quot;</code>。但恢复该控件到一个特定状态，你也需要知道它之前处在哪种模式，所以 <em>状态</em> 可能形如 <code>&quot;palette/#7fff00&quot;</code>。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">this</span><span class="token punctuation">.</span>internals_<span class="token punctuation">.</span><span class="token function">setFormValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value_<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mode_ <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value_<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>你的代码可能需要基于存储的状态值来恢复自身状态。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">formStateRestoreCallback</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> mode<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>mode <span class="token operator">==</span> <span class="token string">'restore'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 预期一个形如 'controlMode/value' 的状态参数</span>        <span class="token punctuation">[</span>controlMode<span class="token punctuation">,</span> value<span class="token punctuation">]</span><span class="token operator">=</span> state<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>mode_ <span class="token operator">=</span> controlMode<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>value_ <span class="token operator">=</span> value<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// Chrome 目前不处理表单关联自定义元素的自动填充。</span>    <span class="token comment" spellcheck="true">// 在自动填充案例中，你可能需要处理一个原始值。</span><span class="token punctuation">}</span></code></pre><p>在一个更简单的控件案例中（例如一个数字输入框），值可能足够该控件恢复之前的状态。当调用 <code>setFormValue()</code> 时，若你忽略 <code>state</code> ，值会被直接传给 <code>formStateRestoreCallback()</code>。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">formStateRestoreCallback</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> mode<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// Simple case, restore the saved value</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>value_ <span class="token operator">=</span> state<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="一个实际的例子"><a href="#一个实际的例子" class="headerlink" title="一个实际的例子"></a>一个实际的例子</h3><p>以下示例整合了表单关联自定义元素的很多特性。务必在 Chrome 77 或更高版本运行它，以查看 API 的运行情况。</p><iframe    src="https://glitch.com/embed/#!/embed/form-associated-ce?path=README.md&previewSize=0"    title="form-associated-ce on Glitch"    allow="geolocation; microphone; camera; midi; vr; encrypted-media"    style="height: 90vh; width: 100%; border: 0;"></iframe><h2 id="特性检测"><a href="#特性检测" class="headerlink" title="特性检测"></a>特性检测</h2><p>你可以用特性检测去确定 <code>formdata</code> 事件和表单关联的自定义元素是可用的。目前每个特性都没有补丁发布。针对这两种情况，你可以回退到添加一个隐藏的表单元素来把该控件值传给表单。很多更高级的表单关联自定义元素特性将可能很难或无法打补丁。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">'FormDataEvent'</span> <span class="token keyword">in</span> window<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 支持 formdata 事件</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span>  <span class="token string">'ElementInternals'</span> <span class="token keyword">in</span> window <span class="token operator">&amp;&amp;</span>  <span class="token string">'setFormValue'</span> <span class="token keyword">in</span> window<span class="token punctuation">.</span>ElementInternals<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 支持表单关联的自定义元素</span><span class="token punctuation">}</span></code></pre><blockquote><p><strong>译注</strong>：原文发表一季度后，社区开发者发布了一个 <a href="https://github.com/calebdwilliams/element-internals-polyfill" target="_blank" rel="noopener">ElementInternals polyfill</a>，而 Web Components 标准团队官方 polyfill 也在<a href="https://github.com/webcomponents/polyfills#roadmap" target="_blank" rel="noopener">计划实现本文所述特性</a>。</p></blockquote><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p><code>formdata</code> 事件和表单关联自定义元素为创建自定义表单控件提供了新工具。</p><p><code>formdata</code> 事件没有给你任何新能力，但它给你一个接口，让你无须一个隐藏的 <code>&lt;input /&gt;</code> 元素，即可添加表单数据到提交流程。</p><p>Form-associated Custom Elements API 通过一组新能力让自定义表单控件像内置表单控件一样工作。</p><hr><h2 id="译者后记"><a href="#译者后记" class="headerlink" title="译者后记"></a>译者后记</h2><p>Custom Elements v1 标准刚发布时，自定义表单元素的构建可以通过<strong>扩展原生标签</strong>特性来实现：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">contenteditable</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">const</span> <span class="token punctuation">{</span> content <span class="token punctuation">}</span> <span class="token operator">=</span> document<span class="token punctuation">.</span>currentScript<span class="token punctuation">.</span>previousElementSibling<span class="token punctuation">;</span>  <span class="token keyword">class</span> <span class="token class-name">MyInput</span> <span class="token keyword">extends</span> <span class="token class-name">HTMLInputElement</span> <span class="token punctuation">{</span>    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attachShadow</span><span class="token punctuation">(</span><span class="token punctuation">{</span> mode<span class="token punctuation">:</span> <span class="token string">'open'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  customElements<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">'my-input'</span><span class="token punctuation">,</span> MyInput<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token keyword">extends</span><span class="token punctuation">:</span> <span class="token string">'input'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">is</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>my-input<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><p>虽然基于 <strong>ES 6 class 继承</strong>语法可以重写表单元素的各种属性、方法，在外部代码操作 DOM 时执行自定义逻辑，但用户直接与浏览器交互不会调用这些重写的接口。因此我们的自定义元素只能单纯地依赖内置表单元素的能力，而无法介入表单的工作流程。</p><p>于是，浏览器进一步暴露自己的内部机制，便有了 Element Internals API。它除了包含本文所述 Form-associated Custom Element API 的很多接口，还涉及另一项新标准 —— <a href="https://w3c.github.io/aria/#ARIAMixin" target="_blank" rel="noopener">AOM</a>（可访问性/无障碍化对象模型），让开发者更轻松地构造更好用的组件。</p><p><img src="https://web-cell.dev/WebCell-1.fb612fdb.png"></p><p>同时，译者自研的 <a href="https://web-cell.dev/" target="_blank" rel="noopener">Web Components 组件框架 WebCell</a> 在原文的帮助下<a href="https://github.com/calebdwilliams/element-internals-polyfill/network/dependents" target="_blank" rel="noopener">率先支持新标准</a>，使前文那段最长的示例代码变得非常简单：</p><pre class=" language-typescript"><code class="language-typescript"><span class="token keyword">import</span> <span class="token punctuation">{</span> component<span class="token punctuation">,</span> mixinForm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'web-cell'</span><span class="token punctuation">;</span>@<span class="token function">component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  tagName<span class="token punctuation">:</span> <span class="token string">'my-counter'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">MyCounter</span> <span class="token keyword">extends</span> <span class="token class-name">mixinForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><p>最后，欢迎大家持续关注译者对 Web 组件相关标准的后续译文和开源项目更新~</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> standard </tag>
            
            <tag> component </tag>
            
            <tag> form </tag>
            
            <tag> API </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汉服复兴与民族自信</title>
      <link href="/other/hanfu-revival-and-national-confidence/"/>
      <url>/other/hanfu-revival-and-national-confidence/</url>
      
        <content type="html"><![CDATA[<blockquote><p>始作于 2020 年<a href="https://www.google.com/search?q=%E6%B1%89%E6%9C%8D%E5%87%BA%E8%A1%8C%E6%97%A5" target="_blank" rel="noopener">汉服出行日</a>前夕之闪电演讲</p></blockquote><hr><h2 id="汉服复兴-——-近年的现象级文化"><a href="#汉服复兴-——-近年的现象级文化" class="headerlink" title="汉服复兴 —— 近年的现象级文化"></a>汉服复兴 —— 近年的现象级文化</h2><hr><img style="height: 90vh" src="./TongPao.gif" /><hr><img style="height: 90vh" src="https://p1-mp.oeeee.com/202402/04/681x1114_65bf05f297f77.jpg" /><hr><img style="height: 90vh" src="https://p1-mp.oeeee.com/202402/04/681x1082_65bf0a270445a.jpg" /><hr><h3 id="成都-——-汉服之都"><a href="#成都-——-汉服之都" class="headerlink" title="成都 —— 汉服之都"></a>成都 —— 汉服之都</h3><hr><p>2019 年：</p><ul><li>汉服商家数量第一</li><li>汉服产品销量第一</li><li>汉服产业产值第一</li></ul><hr><img style="height: 90vh" src="./rank-city.jpg" /><hr><img style="height: 90vh" src="./rank-brand.jpg" /><hr><img style="height: 90vh" src="./HanFu-ShuJin-0.gif" /><hr><img style="height: 90vh" src="./HanFu-ShuJin-1.jpg" /><hr><img style="height: 90vh" src="./HanFu-ShuJin-2.jpg" /><hr><h4 id="曾经的汉服“殇城”"><a href="#曾经的汉服“殇城”" class="headerlink" title="曾经的汉服“殇城”"></a>曾经的汉服“殇城”</h4><hr><img style="height: 90vh" src="./burn.jpg" /><hr><iframe    style="width: 100%; height: 80vh"    src="https://www.youtube.com/embed/J8IHCGLKFV8"    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><p>（国际互联网视频，需科学上网）</p><hr><h5 id="烧汉服事件始末"><a href="#烧汉服事件始末" class="headerlink" title="烧汉服事件始末"></a>烧汉服事件始末</h5><ul><li><a href="https://zh.wikipedia.org/zh-hans/2010%E5%B9%B4%E6%88%90%E9%83%BD%E6%BC%A2%E6%9C%8D%E4%BA%8B%E4%BB%B6" target="_blank" rel="noopener">维基百科</a></li><li><a href="https://baike.baidu.com/item/%E5%AD%99%E5%A9%B7/10423430" target="_blank" rel="noopener">百度百科</a></li><li><a href="http://www.sjhfj.com/show-11-248-1.html" target="_blank" rel="noopener">西塘汉服节文选</a></li></ul><hr><h2 id="民族服装连连看"><a href="#民族服装连连看" class="headerlink" title="民族服装连连看"></a>民族服装连连看</h2><hr><h3 id="汉代曲裾-vs-日本和服"><a href="#汉代曲裾-vs-日本和服" class="headerlink" title="汉代曲裾 vs 日本和服"></a>汉代曲裾 vs 日本和服</h3><img style="height: 90vh" src="./Han-He.jpg" /><hr><h3 id="唐代齐胸-vs-朝鲜女装"><a href="#唐代齐胸-vs-朝鲜女装" class="headerlink" title="唐代齐胸 vs 朝鲜女装"></a>唐代齐胸 vs 朝鲜女装</h3><img style="height: 90vh" src="./QiXiong.jpg" /><hr><h3 id="明代官服-vs-朝鲜男装"><a href="#明代官服-vs-朝鲜男装" class="headerlink" title="明代官服 vs 朝鲜男装"></a>明代官服 vs 朝鲜男装</h3><img style="height: 90vh" src="./Han-Han.jpg" /><hr><h3 id="汉服小姐姐英语回怼无脑黑（上）"><a href="#汉服小姐姐英语回怼无脑黑（上）" class="headerlink" title="汉服小姐姐英语回怼无脑黑（上）"></a>汉服小姐姐英语回怼无脑黑（上）</h3><iframe    style="width: 100%; height: 70vh"    src="https://www.youtube.com/embed/Wd6Z2ZOzbOY"    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><p>（国际互联网视频，需科学上网）</p><hr><h3 id="汉服小姐姐英语回怼无脑黑（中）"><a href="#汉服小姐姐英语回怼无脑黑（中）" class="headerlink" title="汉服小姐姐英语回怼无脑黑（中）"></a>汉服小姐姐英语回怼无脑黑（中）</h3><iframe    style="width: 100%; height: 70vh"    src="https://www.youtube.com/embed/VdimXc9eX7o"    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><p>（国际互联网视频，需科学上网）</p><hr><h3 id="汉服小姐姐英语回怼无脑黑（下）"><a href="#汉服小姐姐英语回怼无脑黑（下）" class="headerlink" title="汉服小姐姐英语回怼无脑黑（下）"></a>汉服小姐姐英语回怼无脑黑（下）</h3><iframe    style="width: 100%; height: 70vh"    src="https://www.youtube.com/embed/9HvIjVFmPME"    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><p>（国际互联网视频，需科学上网）</p><hr><h3 id="清代服装：旗袍、马褂"><a href="#清代服装：旗袍、马褂" class="headerlink" title="清代服装：旗袍、马褂"></a>清代服装：旗袍、马褂</h3><img style="height: 90vh" src="./QiPao.jpg" /><hr><img style="height: 90vh" src="./MaGua.jpeg" /><hr><h4 id="剃发易服"><a href="#剃发易服" class="headerlink" title="剃发易服"></a>剃发易服</h4><blockquote><p>留头不留发，留发不留头</p></blockquote><hr><h3 id="汉服之定义"><a href="#汉服之定义" class="headerlink" title="汉服之定义"></a>汉服之定义</h3><p>汉民族发展过程中<strong>自然演变</strong>出的传统服装</p><hr><h2 id="汉服复兴运动"><a href="#汉服复兴运动" class="headerlink" title="汉服复兴运动"></a>汉服复兴运动</h2><hr><h3 id="正装·日常"><a href="#正装·日常" class="headerlink" title="正装·日常"></a>正装·日常</h3><hr><a target="_blank" href="https://baike.baidu.com/item/%E7%8E%8B%E4%B9%90%E5%A4%A9/6116738">    <img style="height: 90vh" src="./reappear.png" /></a><hr><p>2003 年 11 月 22 日（明亡后 359 年）</p><p>汉服首次回归日常，并见诸报端</p><hr><h3 id="装束·复原"><a href="#装束·复原" class="headerlink" title="装束·复原"></a>装束·复原</h3><hr><iframe     style="width: 100%; height: 90vh"    scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"    src="//player.bilibili.com/player.html?isOutside=true&aid=82013542&bvid=BV13J4117752&cid=140706663&p=1"></iframe><hr><h3 id="自知·正名"><a href="#自知·正名" class="headerlink" title="自知·正名"></a>自知·正名</h3><hr><p><img    style="height: 70vh"    src="https://imgcdn.yicai.com/uppics/images/2022/07/2076499c4430ac60b11021b80af494d2.jpg"/></p><p>Dior 抄袭马面裙</p><hr><p><img    style="height: 70vh"    src="https://princessdianabookboutique.wordpress.com/wp-content/uploads/2015/02/image626.jpg"/></p><p>1981 年英国王妃戴安娜在订婚宴上穿了马面裙</p><hr><p><img    style="height: 60vh"    src="https://princessdianabookboutique.wordpress.com/wp-content/uploads/2015/02/image627.jpg"/></p><p><a href="https://princessdianabookboutique.wordpress.com/2015/02/23/its-goodbye-to-all-this-diana-on-the-verge-of-engagement-continues/" target="_blank" rel="noopener">英文报道清晰说明了它是“Red silk satin Chinese embroidered skirt with chrysanthemum motif”（菊花图案红色丝缎中式绣裙）</a></p><hr><h3 id="铭记历史，轻装上阵"><a href="#铭记历史，轻装上阵" class="headerlink" title="铭记历史，轻装上阵"></a>铭记历史，轻装上阵</h3><hr><p>汉服，穿，就完了~</p><hr><p>汉服，美，就完了~</p><hr><h3 id="博物馆奇妙日"><a href="#博物馆奇妙日" class="headerlink" title="博物馆奇妙日"></a>博物馆奇妙日</h3><hr><p><video    style="width: 100%; height: 90vh"    controls    src="./YunXiangYiChang.mp4"><br></video></p><hr><img style="height: 90vh" src="./exhibition-0.jpg" /><hr><img style="height: 90vh" src="./exhibition-1.jpg" /><hr><img style="height: 90vh" src="./exhibition-2.jpg" /><hr><img style="height: 90vh" src="./exhibition-3.jpg" /><hr><h2 id="岂曰无衣，与子同袍"><a href="#岂曰无衣，与子同袍" class="headerlink" title="岂曰无衣，与子同袍"></a>岂曰无衣，与子同袍</h2><hr><p><strong>汉服复兴</strong>是一场完全由<strong>华人青年</strong>自发掀起的<strong>社会运动</strong>，</p><p>愉快、阳光又热血。</p><hr><p><strong>青年人</strong>在日常做一些<strong>有趣</strong>、<strong>有意义</strong>的小事，</p><p>就能营造自己生活的<strong>小确幸</strong>，</p><p>和民族、社会的<strong>大复兴</strong>~</p><hr><p><a href="https://open-source-bazaar.github.io/" target="_blank" rel="noopener"><img src="https://github.com/Open-Source-Bazaar.png"></a></p><p>开源市集</p>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> China </tag>
            
            <tag> HanFu </tag>
            
            <tag> dress </tag>
            
            <tag> culture </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>水歌：开源之“道”的三股势力丨COSCon&#39;20 专访</title>
      <link href="/community/open-source-core-community/"/>
      <url>/community/open-source-core-community/</url>
      
        <content type="html"><![CDATA[<blockquote><p>【原文链接】<a href="https://mp.weixin.qq.com/s/JSIGP8ZbJPz1KpiJcEyRuw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/JSIGP8ZbJPz1KpiJcEyRuw</a></p></blockquote><figure>    <img src="https://ows.blob.core.chinacloudapi.cn/files/assets/COS_Con_20_abaa9e2a66.png" /></figure><p>2020 中国开源年会 (COSCon’20) 将于 10 月 24-25 日由开源社举办，SegmentFault 思否社区为本次大会的战略合作媒体，并将进行独家的线上直播。</p><p>本次年会将采取线上线下相结合的形式，<strong>北京、上海、深圳、成都、长沙五城联动</strong>，11 个分会场，线上线下同时进行。</p><hr><p>为了让大家进一步了解开源、了解本次 COSCon’20，SegmentFault 思否特别采访了水歌老师。</p><p>水歌是一位  <strong>Web/JavaScript 全栈开发者</strong>，也是 WebCell 前端开源框架作者，现任 freeCodeCamp 成都社区负责人、开源社执委会成员、微软最有价值专家（开发者技术领域），日常爱好音乐、电影、汉服、滑雪。</p><p>长期活跃于开源社区的他，致力于<strong>在开放生态中为社会创造价值</strong>。在本次的开源年会中，水歌老师将以出品人及主持人的身份掌舵「Web 全栈及其他」分论坛，并出席同期于成都举办的开源线下聚会活动。</p><figure>    <img src="/community/fcc-devtalk-techquery/TechQuery-WebCell-cap.jpg" /></figure><p>以下为 SegmentFault 思否对水歌老师的访谈内容：</p><h2 id="如果需要给“开源”下一个定义，您认为是什么？"><a href="#如果需要给“开源”下一个定义，您认为是什么？" class="headerlink" title="如果需要给“开源”下一个定义，您认为是什么？"></a>如果需要给“开源”下一个定义，您认为是什么？</h2><p>开源一词虽源于“开放源代码”，但公布源码仅为其表面，其核心是一种<strong>开放式社会化协作</strong>，所以<strong>开源硬件</strong>、<strong>开放文档</strong>、基于 Creative Commons 协议的<strong>开放文艺作品</strong>等，乃至公益、慈善机构等<strong>开放社群</strong>，皆为开源。</p><h2 id="您认为开源对于开发者来说，最大的价值和意义是什么？"><a href="#您认为开源对于开发者来说，最大的价值和意义是什么？" class="headerlink" title="您认为开源对于开发者来说，最大的价值和意义是什么？"></a>您认为开源对于开发者来说，最大的价值和意义是什么？</h2><p>对个人开发者是一种<strong>能力的锻炼与证明</strong>，对企业是一种<strong>更高效的创新与营销模式</strong>。</p><h2 id="您认为什么样的开源项目算是优质的开源项目？有没有一些评判标准？"><a href="#您认为什么样的开源项目算是优质的开源项目？有没有一些评判标准？" class="headerlink" title="您认为什么样的开源项目算是优质的开源项目？有没有一些评判标准？"></a>您认为什么样的开源项目算是优质的开源项目？有没有一些评判标准？</h2><p><strong>社群开放、平等、自主</strong>，剩下的<strong>高质量的代码</strong>、<strong>清晰的文档</strong>、<strong>自动化的工作流</strong>等等，便纷至沓来~</p><h2 id="能否分享一下您对国内开源技术和产品的看法？"><a href="#能否分享一下您对国内开源技术和产品的看法？" class="headerlink" title="能否分享一下您对国内开源技术和产品的看法？"></a>能否分享一下您对国内开源技术和产品的看法？</h2><p>国内 IT 业在技术、产品上虽与欧美还有差距，但开源界还是有不少开始显现全球影响力的项目，这些“术”的层面对勤奋钻研的华人而言并非不可逾越的鸿沟。但从“道”的层面看，<strong>完整的开源界由三股势力构成</strong>：</p><ol><li><p> <strong>草根开发者社群</strong>：所谓“市集”，也是自由软件、开源软件的发祥地</p></li><li><p> <strong>公司开源团队</strong>：所谓“大教堂”，一般是<strong>开源商业公司</strong>（RedHat 等）或<strong>开源转型的传统公司</strong>（Microsoft 等）</p></li><li><p> <strong>开源基金会</strong>：依赖开源的公司捐款给基金会，基金会招募草根开发者</p></li></ol><p>反观中国大陆：</p><ol><li><p> 只有大公司以 KPI 的方式做开源比较强，<strong>以开源为核心商业模式的公司</strong>凤毛麟角</p></li><li><p> 纯民间的基金会仍有政策上很大的<strong>免税、公募资格</strong>门槛，现在完全称不上气候</p></li><li><p> 而我国最不缺的人，却几乎没有前文所述“开放、平等、自主”之意识，除了现在人人都使用开源软件，但在<strong>社群影响力</strong>上比十年前并没强多少</p></li></ol><p>因此，我很赞同某同仁的一个观点 ——</p><blockquote><p>若国人只学习洋人的技术，而不学习<strong>诞生创新技术的社会氛围</strong>，那就永远只能做跟随者，今日中国之开源只能是一场“<strong>新洋务运动</strong>”！</p></blockquote><h2 id="您在具体开源的过程中遇到的最大的挑战是什么？"><a href="#您在具体开源的过程中遇到的最大的挑战是什么？" class="headerlink" title="您在具体开源的过程中遇到的最大的挑战是什么？"></a>您在具体开源的过程中遇到的最大的挑战是什么？</h2><ul><li><p>当你有个好想法时，别人说：你先做个样子我看看~</p></li><li><p>当你写了个原型时，别人说：你做稳定了我再试试~</p></li><li><p>当你发了稳定版时，别人说：你生态完善了我就用~</p></li><li><p>当你写完周边库时，别人说：你有大厂项目社区大？</p></li></ul><h2 id="对于开源行业未来的发展，您有什么期待？"><a href="#对于开源行业未来的发展，您有什么期待？" class="headerlink" title="对于开源行业未来的发展，您有什么期待？"></a>对于开源行业未来的发展，您有什么期待？</h2><p>期待中国大陆有更多人参与开源项目、开放社群，而不只是做个<em>成品使用者</em>、_活动围观者_。</p><h2 id="您认为开源的概念和文化，有哪些可以被借鉴到其他领域？其他领域的文化有哪些可以被开源行业所参考？"><a href="#您认为开源的概念和文化，有哪些可以被借鉴到其他领域？其他领域的文化有哪些可以被开源行业所参考？" class="headerlink" title="您认为开源的概念和文化，有哪些可以被借鉴到其他领域？其他领域的文化有哪些可以被开源行业所参考？"></a>您认为开源的概念和文化，有哪些可以被借鉴到其他领域？其他领域的文化有哪些可以被开源行业所参考？</h2><p><strong>开放、平等、自主的社会化协作</strong>是放之四海而皆准的<strong>最佳实践</strong>，是来自开源界的馈赠。</p><p>而在开源人的交流上，我近两年在借鉴境外<strong>技术嘉年华</strong>、境内 ACG 漫展，努力尝试「<strong>开源市集</strong>」这种活动形式，期望技术宅们能多走出来联络，不能只在电脑前面闭门造车：</p><ol><li> <a href="https://web-conf.dev/#2018" target="_blank" rel="noopener">2018 成都 Web 前端大会「开源市集」</a></li><li> <a href="http://coscon.kaiyuanshe.cn/" target="_blank" rel="noopener">2020 中国开源年会·成都分会场「开源市集」</a></li></ol><p>欢迎大家踊跃参与今年 COSCon’20 的开源市集，我也会经常分享我的开源经验，并支持更多有心的小伙伴参与开源~</p><hr><p>10 月 24 ~ 25 日，水歌老师将作为 <strong>「Web 全栈应用」分论坛</strong>的主持人和<strong>成都分会场</strong>的负责人，以下为相关活动日程及嘉宾、展位名单：</p><img src="/community/open-source-core-community/agenda-10-24-0.png" class=""><img src="/community/open-source-core-community/agenda-10-24-1.png" class=""><img src="/community/open-source-core-community/agenda-10-25.png" class=""><img src="/community/open-source-core-community/exhibition.png" class="">]]></content>
      
      
      <categories>
          
          <category> Community </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Open Source </tag>
            
            <tag> COSCon </tag>
            
            <tag> China </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为何新手可用 TypeScript？</title>
      <link href="/development/typescript-for-beginners/"/>
      <url>/development/typescript-for-beginners/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.typescriptlang.org/zh/" target="_blank" rel="noopener">TypeScript 官网</a>开宗明义 ——</p><blockquote><p>TypeScript 是适用于任何规模应用的 JavaScript</p></blockquote><p>其中奥妙，且看我一个边干边学的 JS 码农娓娓道来~</p><h2 id="安装简单"><a href="#安装简单" class="headerlink" title="安装简单"></a>安装简单</h2><p>因为 TypeScript 官方支持 <a href="https://tc39.es/ecma262/" target="_blank" rel="noopener">ECMAScript 最新标准</a>和<a href="https://jscig.github.io/#proposals?stage=3" target="_blank" rel="noopener">进入 Stage 3 的提案</a>，绝大多数项目的代码可以直接编译，polyfill 和运行时工具函数全内置，不像 Babel 那样需要自己找<strong>运行时补丁库</strong>或<strong>提案编译插件</strong>。</p><h3 id="TypeScript"><a href="#TypeScript" class="headerlink" title="TypeScript"></a>TypeScript</h3><pre class=" language-shell"><code class="language-shell">npm install typescript -D</code></pre><h3 id="Babel"><a href="#Babel" class="headerlink" title="Babel"></a>Babel</h3><pre class=" language-shell"><code class="language-shell">npm install @babel/core @babel/preset-env @babel/cli -Dnpm install @babel/polyfill</code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token string">'@babel/polyfill'</span><span class="token punctuation">;</span></code></pre><h2 id="配置方便"><a href="#配置方便" class="headerlink" title="配置方便"></a>配置方便</h2><h3 id="TypeScript-1"><a href="#TypeScript-1" class="headerlink" title="TypeScript"></a>TypeScript</h3><p>TypeScript 默认不需要配置，在写 <code>.ts(x)</code> 文件的过程中，TS 编译器会在缺少配置的地方提示你需要添加什么配置，此时在项目根目录新建一个 <code>tsconfig.json</code> 文件，支持 <strong>TS 语言服务协议</strong>的代码编辑器还能提示配置文件的选项，全程按指导操作即可，官方文档都很少需要看~</p><h3 id="Babel-1"><a href="#Babel-1" class="headerlink" title="Babel"></a>Babel</h3><p>Babel 虽然编译标准语法只需一个 preset 包，但更多的<strong>常用提案语法</strong>、<strong>框架语法糖</strong>就需要一大堆插件了，而且所有配置选项都没有代码提示，必须各种查文档，有时文档也不甚详细，容易踩坑……</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"presets"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"@babel/preset-env"</span><span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><h2 id="类型可选"><a href="#类型可选" class="headerlink" title="类型可选"></a>类型可选</h2><p>TypeScript 的核心卖点是<strong>类型系统</strong>，这让很多从 JavaScript、PHP、Python 等<strong>脚本语言</strong>入门编程的程序员非常畏惧，认为是非常大的<strong>学习成本</strong>。</p><p>但 TS 的类型系统与 C/C++、Java、C# 等传统<strong>强类型语言</strong>从设计理念上非常不同 ——</p><blockquote><p>TS 代码不需要<em>处处声明类型</em>，而只需程序员在编译器推导无效的少许地方<strong>标注类型</strong></p></blockquote><p>而 TS <strong>类型推导</strong>的基础数据则是 JS、DOM、Node.js 等标准/技术中的 <strong>API 类型定义</strong>，编译器循着<strong>语法结构</strong>的上下文，自然能推导出大多数变/常量的类型，以便帮程序员<strong>检查潜在错误</strong>、<strong>显示代码提示</strong>。</p><h2 id="开发轻松"><a href="#开发轻松" class="headerlink" title="开发轻松"></a>开发轻松</h2><h3 id="Node-js-运行时"><a href="#Node-js-运行时" class="headerlink" title="Node.js 运行时"></a>Node.js 运行时</h3><p>虽然 Node.js 创始人又另起炉灶搞了第一个<strong>全功能 TypeScript 运行时环境</strong> <a href="https://www.denojs.cn/" target="_blank" rel="noopener">Deno</a>，但并不意味着 Node.js 不能方便地运行 TS 代码，因为我们有 <a href="https://github.com/TypeStrong/ts-node" target="_blank" rel="noopener"><code>ts-node</code></a> ——</p><pre class=" language-shell"><code class="language-shell">// 全局安装运行时npm install ts-node -g// 执行一个 TS 脚本ts-node index.ts</code></pre><h3 id="Parcel-零配置打包"><a href="#Parcel-零配置打包" class="headerlink" title="Parcel 零配置打包"></a>Parcel 零配置打包</h3><p>如果你用 <a href="https://zh.parceljs.org/" target="_blank" rel="noopener">Parcel</a> 这种<strong>零配置打包器</strong>开发 Web 前端项目，你甚至完全不用安装包括 TypeScript、LESS、SCSS 在内的任何常见<strong>预编译语言</strong>的编译器。在项目首次启动时，Parcel 会自动帮你安装好项目依赖的所有代码文件类型对应的编译器！你只需在启动项目时装好 Parcel，然后就按 <strong>HTML、CSS、JS 原生语法</strong>写逻辑、引用外置资源即可 ——</p><pre class=" language-shell"><code class="language-shell">npm install parcel-bundler -D</code></pre><h2 id="总结：TS，真香！"><a href="#总结：TS，真香！" class="headerlink" title="总结：TS，真香！"></a>总结：TS，真香！</h2><p>我的 JavaScript 生涯从 ES 3 入门，后来用 ES 5 结合 JSDoc 开发小框架，再到 ES 6+ 配合 ESDoc 开发 <a href="https://github.com/EasyWebApp/WebCell/tree/master" target="_blank" rel="noopener">WebCell v1</a>，最终用 TS + TSDoc 重写出 <a href="https://web-cell.dev/" target="_blank" rel="noopener">WebCell v2</a>。在充分利用 <a href="/programming/javascript-in-one-word/">JavaScript 这门“无所不能”的语言</a>强大灵活性的同时，<strong>更简洁的 ECMAScript 新语法</strong>和<strong>更规范的 TypeScript 类型系统</strong>，为开源库和日常项目开发带来突飞猛进的<strong>效率提升</strong> —— TS，真香！</p><p>而对于没有我这样<strong>渐进式平滑学习曲线</strong>的同学，我也有一个形象的比喻来打消你的顾虑 ——</p><blockquote><p>没有类型推导的动态语言写起来好比<em>关灯开夜车</em>，老司机也怕掉沟里，何况新手？<br>TypeScript 这双<em>氙气大灯</em>，你确定不装？</p></blockquote><h2 id="彩蛋"><a href="#彩蛋" class="headerlink" title="彩蛋"></a>彩蛋</h2><p>再分享一个 TypeScript <strong>JSX 类型推导</strong>的新玩法：</p><blockquote><p><a href="https://github.com/TechQuery/CommanderJSX" target="_blank" rel="noopener">CommanderJSX</a> —— 用 JSX 声明<strong>命令行参数</strong>，并支持<strong>回调传参类型推导</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TypeScript </tag>
            
            <tag> ECMAScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>讲烂了的 JavaScript 原型继承</title>
      <link href="/programming/javascript-prototype-inheritance/"/>
      <url>/programming/javascript-prototype-inheritance/</url>
      
        <content type="html"><![CDATA[<h2 id="创建普通对象"><a href="#创建普通对象" class="headerlink" title="创建普通对象"></a>创建普通对象</h2><h3 id="对象字面量"><a href="#对象字面量" class="headerlink" title="对象字面量"></a>对象字面量</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> object <span class="token operator">=</span> <span class="token punctuation">{</span>  public_property<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>  public_method<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>public_property<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h3 id="内置构造函数"><a href="#内置构造函数" class="headerlink" title="内置构造函数"></a>内置构造函数</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> object <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>object<span class="token punctuation">.</span>public_property <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>object<span class="token punctuation">.</span>public_method <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>public_property<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h2 id="创建对象实例"><a href="#创建对象实例" class="headerlink" title="创建对象实例"></a>创建对象实例</h2><h3 id="工厂模式（闭包）"><a href="#工厂模式（闭包）" class="headerlink" title="工厂模式（闭包）"></a>工厂模式（闭包）</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">var</span> private_property <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token keyword">function</span> <span class="token function">private_method</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> private_property<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    public_property<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    public_method<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>public_property<span class="token punctuation">,</span> <span class="token function">private_method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">var</span> object <span class="token operator">=</span> <span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Class</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>public_property <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span>Class<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>public_method <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>public_property<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">var</span> object <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-javascript"><code class="language-javascript">Object<span class="token punctuation">.</span>create <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>prototype<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">function</span> <span class="token function">Temp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>  Temp<span class="token punctuation">.</span>prototype <span class="token operator">=</span> prototype<span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Temp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">var</span> object <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>Class<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="子类继承父类"><a href="#子类继承父类" class="headerlink" title="子类继承父类"></a>子类继承父类</h2><h3 id="父类修饰子类"><a href="#父类修饰子类" class="headerlink" title="父类修饰子类"></a>父类修饰子类</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>public_property <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span>Parent<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>public_method <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>public_property<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">Child</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  Parent<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>public_property <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span>Child<span class="token punctuation">.</span>prototype <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>Parent<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>Child<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> Child<span class="token punctuation">;</span>Child<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>public_method <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> Parent<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>public_method<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">var</span> parent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  child <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Child</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> outer <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">var</span> inner <span class="token operator">=</span> Function<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>outer<span class="token punctuation">,</span> <span class="token string">'return 1;'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">inner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 1</span><span class="token function">outer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// Uncaught TypeError: outer is not a function</span></code></pre><h3 id="子类修饰父类"><a href="#子类修饰父类" class="headerlink" title="子类修饰父类"></a>子类修饰父类</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Child</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">var</span> that <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span>    <span class="token keyword">new</span> <span class="token punctuation">(</span>Parent<span class="token punctuation">.</span>bind<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    Child<span class="token punctuation">.</span>prototype  <span class="token punctuation">)</span><span class="token punctuation">;</span>  that<span class="token punctuation">.</span>public_property <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> that<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Child</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">var</span> that <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Parent</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">)</span><span class="token punctuation">,</span> Child<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>  that<span class="token punctuation">.</span>public_property <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> that<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><iframe    style="width: 100%; height: 85vh"    loading="lazy" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true"    title="Prototype inheritance"    src="https://codepen.io/tech_query/embed/wvMZdoX?height=548&theme-id=dark&default-tab=js,result">  See the Pen  <a href='https://codepen.io/tech_query/pen/wvMZdoX' target="_blank" rel="noopener">Prototype inheritance</a>  by TechQuery  (<a href='https://codepen.io/tech_query' target="_blank" rel="noopener">@tech_query</a>) on  <a href='https://codepen.io' target="_blank" rel="noopener">CodePen</a>.</iframe>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ECMAScript </tag>
            
            <tag> JavaScript </tag>
            
            <tag> OOP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web 前端“像素级还原”的真相</title>
      <link href="/development/truth-of-pixel-level-restoration/"/>
      <url>/development/truth-of-pixel-level-restoration/</url>
      
        <content type="html"><![CDATA[<blockquote><p>freeCodeCamp 中文社区</p><p>首次直播分享会</p></blockquote><hr><h2 id="互联网公司“金句”"><a href="#互联网公司“金句”" class="headerlink" title="互联网公司“金句”"></a>互联网公司“金句”</h2><hr><blockquote><p>这个很简单，技术我不懂，明天我就要！</p><p>—— 产品经理</p></blockquote><hr><blockquote><p>前端应该“像素级还原”设计图！</p><p>—— UI 设计师</p></blockquote><hr><h2 id="Web-前端开发的真相"><a href="#Web-前端开发的真相" class="headerlink" title="Web 前端开发的真相"></a>Web 前端开发的真相</h2><hr><h3 id="几乎不用“像素”这个单位"><a href="#几乎不用“像素”这个单位" class="headerlink" title="几乎不用“像素”这个单位"></a>几乎不用“像素”这个单位</h3><hr><table><thead><tr><th align="center">设计图<br>数据</th><th align="center"></th><th align="center">浏览器<br>默认字号</th><th align="center"></th><th align="center">代码中的数值<br>（两位精度）</th></tr></thead><tbody><tr><td align="center"><code>X</code>px</td><td align="center">÷</td><td align="center"><code>16</code>px</td><td align="center">=</td><td align="center"><code>Y</code>rem</td></tr></tbody></table><hr><p><strong>边框粗细</strong>、<strong>圆角半径</strong>、<strong>阴影范围</strong>、动画中 JS 计算出的<strong>位移量</strong>等除外</p><hr><h3 id="与设计完全不同的布局方式"><a href="#与设计完全不同的布局方式" class="headerlink" title="与设计完全不同的布局方式"></a>与设计完全不同的布局方式</h3><hr><h4 id="设计师的天马行空"><a href="#设计师的天马行空" class="headerlink" title="设计师的天马行空"></a>设计师的天马行空</h4><hr><p>PS、AI 等作图工具用<strong>绝对定位</strong>排布<strong>图层</strong></p><p>类似用 CSS 给 <code>&lt;div /&gt;</code> 设置 <code>position: absolute</code></p><hr><h4 id="工程师的条条框框"><a href="#工程师的条条框框" class="headerlink" title="工程师的条条框框"></a>工程师的条条框框</h4><hr><p>把设计图<strong>从全局到局部</strong></p><p>切成一个个<strong>嵌套的行列框</strong></p><hr><p><img src="https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/91bde744-f286-4f89-b3f7-63d26551a958/mrh-css-grid-fig-03-large-opt.png"></p><hr><h3 id="图是死的，页是活的"><a href="#图是死的，页是活的" class="headerlink" title="图是死的，页是活的"></a>图是死的，页是活的</h3><hr><h4 id="设计效果图"><a href="#设计效果图" class="headerlink" title="设计效果图"></a>设计效果图</h4><p>一般最多两套 —— <strong>桌面端</strong>、<strong>手机端</strong></p><p>桌面端分辨率往往是设计师 iMac 的 1920+</p><hr><h4 id="屏幕适配"><a href="#屏幕适配" class="headerlink" title="屏幕适配"></a>屏幕适配</h4><ul><li><p>设备：手机、平板、笔记本、大屏台式机</p></li><li><p>操作：电脑窗口缩放、移动设备横竖屏</p></li></ul><hr><p>行列框会在多个范围间<strong>自适应缩放</strong></p><iframe    style="width: 100%; height:90vh"    lazyLoad="1"    loading="lazy"    src="https://getbootstrap.com/docs/4.5/layout/grid/"></iframe><hr><h3 id="思维方式的本质差异"><a href="#思维方式的本质差异" class="headerlink" title="思维方式的本质差异"></a>思维方式的本质差异</h3><hr><h4 id="美工好比建筑设计师"><a href="#美工好比建筑设计师" class="headerlink" title="美工好比建筑设计师"></a>美工好比建筑设计师</h4><p>要的就是<strong>惊艳</strong></p><hr><h4 id="码农好比土木工程师"><a href="#码农好比土木工程师" class="headerlink" title="码农好比土木工程师"></a>码农好比土木工程师</h4><p>要的就是<strong>可靠</strong>、<strong>高效</strong></p><hr><p><strong>复用</strong>市场<strong>现有规格的构件</strong></p><p>在<strong>施工安全</strong>的前提下</p><p>尽力贴近<strong>设计效果图</strong></p><hr><h5 id="从零开始开发项目定制组件"><a href="#从零开始开发项目定制组件" class="headerlink" title="从零开始开发项目定制组件"></a>从零开始开发项目定制组件</h5><p><strong>开发工程量</strong>非常大</p><hr><h5 id="魔改现成组件"><a href="#魔改现成组件" class="headerlink" title="魔改现成组件"></a>魔改现成组件</h5><ul><li>自适应、响应式样式</li><li>用户交互逻辑</li></ul><p>小心翼翼不破坏它们，但往往事与愿违……</p><hr><h3 id="行百里者半九十"><a href="#行百里者半九十" class="headerlink" title="行百里者半九十"></a>行百里者半九十</h3><hr><p>开发工时 ≤ “抠细节”工时</p><hr><p>开发往往集中进行，并能复用现有<strong>组件库</strong></p><hr><p>抠 UI 细节往往……</p><hr><ul><li>再深/浅点……</li><li>再大/小点……</li><li>再往这/那来点……</li></ul><hr><p>请先定义“一点”……</p><hr><h2 id="设计规范，了解一下？"><a href="#设计规范，了解一下？" class="headerlink" title="设计规范，了解一下？"></a>设计规范，了解一下？</h2><hr><h3 id="Twitter-BootStrap-组件库"><a href="#Twitter-BootStrap-组件库" class="headerlink" title="Twitter BootStrap 组件库"></a>Twitter BootStrap 组件库</h3><hr><h4 id="字号等级"><a href="#字号等级" class="headerlink" title="字号等级"></a>字号等级</h4><iframe    style="width: 100%; height:90vh"    lazyLoad="1"    loading="lazy"    src="https://getbootstrap.com/docs/4.5/content/typography/#headings"></iframe><hr><h4 id="间距等级"><a href="#间距等级" class="headerlink" title="间距等级"></a>间距等级</h4><iframe    style="width: 100%; height:90vh"    lazyLoad="1"    loading="lazy"    src="https://getbootstrap.com/docs/4.5/utilities/spacing/#notation"></iframe><hr><h4 id="配色主题"><a href="#配色主题" class="headerlink" title="配色主题"></a>配色主题</h4><iframe    style="width: 100%; height:90vh"    lazyLoad="1"    loading="lazy"    src="https://getbootstrap.com/docs/4.5/utilities/colors/#background-color"></iframe><hr><h4 id="最大内容宽度"><a href="#最大内容宽度" class="headerlink" title="最大内容宽度"></a>最大内容宽度</h4><iframe    style="width: 100%; height:90vh"    lazyLoad="1"    loading="lazy"    src="https://getbootstrap.com/docs/4.5/layout/overview/#containers"></iframe><hr><h4 id="一致的样式、交互"><a href="#一致的样式、交互" class="headerlink" title="一致的样式、交互"></a>一致的样式、交互</h4><iframe    style="width: 100%; height:90vh"    lazyLoad="1"    loading="lazy"    src="https://bootstrap.web-cell.dev/"></iframe><hr><h3 id="Google-Material-Design"><a href="#Google-Material-Design" class="headerlink" title="Google Material Design"></a>Google Material Design</h3><iframe    style="width: 100%; height:90vh"    lazyLoad="1"    loading="lazy"    src="https://material.io/"></iframe><hr><h3 id="Microsoft-Fluent-Design"><a href="#Microsoft-Fluent-Design" class="headerlink" title="Microsoft Fluent Design"></a>Microsoft Fluent Design</h3><iframe    style="width: 100%; height:90vh"    lazyLoad="1"    loading="lazy"    src="https://www.microsoft.com/design/fluent/#/"></iframe><hr><h3 id="蚂蚁金服-Ant-Design"><a href="#蚂蚁金服-Ant-Design" class="headerlink" title="蚂蚁金服 Ant Design"></a>蚂蚁金服 Ant Design</h3><iframe    style="width: 100%; height:90vh"    lazyLoad="1"    loading="lazy"    src="https://ant.design/"></iframe><hr><h3 id="饿了么-Element-UI"><a href="#饿了么-Element-UI" class="headerlink" title="饿了么 Element UI"></a>饿了么 Element UI</h3><iframe    style="width: 100%; height:90vh"    lazyLoad="1"    loading="lazy"    src="https://element.eleme.cn/"></iframe><hr><h2 id="学习收获"><a href="#学习收获" class="headerlink" title="学习收获"></a>学习收获</h2><hr><blockquote><p>你按设计图标注来就行~</p><p>—— UI 设计师</p></blockquote><hr><p>行个 🔨！</p><hr><h2 id="讲师带货"><a href="#讲师带货" class="headerlink" title="讲师带货"></a>讲师带货</h2><iframe    style="width: 100%; height:90vh"    lazyLoad="1"    loading="lazy"    src="https://web-cell.dev/"></iframe><hr><iframe    style="width: 100%; height:90vh"    lazyLoad="1"    loading="lazy"    src="https://fcc-cd.dev/"></iframe>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> GUI </tag>
            
            <tag> design </tag>
            
            <tag> front-end </tag>
            
            <tag> CSS </tag>
            
            <tag> layout </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内容型网站后端一把梭</title>
      <link href="/development/headless-cms-strapi/"/>
      <url>/development/headless-cms-strapi/</url>
      
        <content type="html"><![CDATA[<p><strong>Web 全栈工程师</strong>经常遇到一些<strong>内容型网站</strong>的开发需求，比如个人博客、机构官网、新闻门户。这些虽是 Web 1.0、2.0 时代就烂大街的典型 Web-site，但面对不同的甲方，看似雷同的需求往往又有各种细节的定制化。</p><p>虽然 WordPress、Discuz!X 等<strong>建站系统</strong>早已非常成熟，但在人们更看重 UI/UX 设计的今天，它们专用的<strong>模板引擎</strong>反而成了二次开发最大的障碍。只要是近两年做过 <strong>Web 前端开发</strong>的同学就知道，不能利用<strong>基于 Node.js 的现代化工具链</strong>的项目，开发起来有多蛋疼。</p><p><strong>Web 前后端分离</strong>催生了 Web 前端岗位，也让 <a href="https://wordpress.org/" target="_blank" rel="noopener">WordPress</a>、<a href="https://ghost.org/" target="_blank" rel="noopener">Ghost</a> 这些老牌 CMS 系统开放了 <strong>RESTful API</strong>。但有的开源项目做得更加激进 —— <a href="https://github.com/search?q=Headless+CMS&ref=opensearch" target="_blank" rel="noopener">Headless CMS</a>，前台界面都省了，只有<strong>后端 API</strong> 和<strong>后台界面</strong>，普通用户看啥你们自己写~</p><p>这其中最为优秀的便是 <a href="https://strapi.io/" target="_blank" rel="noopener">Strapi</a>，因为它的后台设计不局限于传统的博客、门户，而是：</p><ol><li><strong>数据模型</strong>灵活可配置（可用 Git 管理 JSON 配置文件）</li><li>RESTful API 完全支持 <strong>CRUD</strong>（增删查改）和 <strong>RBAC</strong>（角色权限）</li><li>自身是个标准的 <strong>Node.js 后端项目</strong>，并有留有二次开发接口</li><li>包括 <a href="https://swagger.io/" target="_blank" rel="noopener">Swagger</a> Documentation 在内的插件生态</li></ol><p>这使得它既像 BaaS 中的 <a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a>，又像 Python 开发框架 <a href="https://www.djangoproject.com/" target="_blank" rel="noopener">Django</a>，在<strong>简单易用</strong>的同时，又不束缚专业开发者。</p><img src="/development/headless-cms-strapi/Strapi-admin.png" class=""><h2 id="本地开发"><a href="#本地开发" class="headerlink" title="本地开发"></a>本地开发</h2><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p>以下命令会一键<strong>创建项目骨架</strong>、<strong>安装依赖包</strong>、<strong>启动开发模式</strong>：</p><pre class=" language-shell"><code class="language-shell">npm init strapi-app ~/my-project --quickstart</code></pre><h3 id="开发模式启动"><a href="#开发模式启动" class="headerlink" title="开发模式启动"></a>开发模式启动</h3><p>下次继续开发时，则执行以下命令：</p><pre class=" language-shell"><code class="language-shell">cd ~/my-projectnpm run develop</code></pre><p>如果执行 <code>npm start</code>，启动的后台系统只能添加数据，不能修改数据结构，是<strong>线上生产</strong>模式。</p><h3 id="创建代码库"><a href="#创建代码库" class="headerlink" title="创建代码库"></a>创建代码库</h3><p><a href="https://github.com/new" target="_blank" rel="noopener">在 GitHub 上创建代码库</a>后，把生成的代码传上去：</p><pre class=" language-shell"><code class="language-shell">git initgit remote add origin https://github.com/my-id/my-project.gitgit add .git commit -m "[add] Strapi framework"git push</code></pre><h2 id="服务器部署"><a href="#服务器部署" class="headerlink" title="服务器部署"></a>服务器部署</h2><p>下面以 Linux (Ubuntu 20.04) 为例，简介线上部署。</p><h3 id="安装容器环境"><a href="#安装容器环境" class="headerlink" title="安装容器环境"></a>安装容器环境</h3><pre class=" language-shell"><code class="language-shell"># 更新包管理器数据库apt update# 安装 Python PIPapt install python-pip# 安装 Dockercurl -fsSL https://get.docker.com | sh# 安装 Docker Composepip install docker-compose</code></pre><h3 id="初始化-Git"><a href="#初始化-Git" class="headerlink" title="初始化 Git"></a>初始化 Git</h3><p>为了后面<strong>自动化部署</strong>的方便，需要生成好 <strong>SSH 密钥对</strong>：</p><pre class=" language-shell"><code class="language-shell"># 生成 SSH Keyssh-keygen -t rsa -b 4096 -C "my_email@example.com"# 启动 SSH 后台服务eval `ssh-agent -s`cd ~/.ssh# 添加 SSH Key 私钥ssh-add id_rsa# 信任 SSH Key 公钥cat id_rsa.pub > authorized_keys</code></pre><h3 id="部署配置文件"><a href="#部署配置文件" class="headerlink" title="部署配置文件"></a>部署配置文件</h3><p>将以下两个文件放在代码库相应路径中，并提交：</p><h4 id="Docker-服务编排"><a href="#Docker-服务编排" class="headerlink" title="Docker 服务编排"></a>Docker 服务编排</h4><p><code>~/my-project/docker-compose.yml</code></p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">strapi</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> strapi/strapi    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./<span class="token punctuation">:</span>/srv/app    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">'1337:1337'</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> NODE_ENV=production</code></pre><p>以上配置的是最简单的 <a href="https://www.sqlite.org/" target="_blank" rel="noopener">SQLite</a> 数据库，小型网站完全足够。</p><h4 id="GitHub-Actions-持续部署"><a href="#GitHub-Actions-持续部署" class="headerlink" title="GitHub Actions 持续部署"></a>GitHub Actions 持续部署</h4><p>以下配置让我们无需每次更新 Strapi 配置、代码时，登录服务器手动部署新版本：</p><p><code>~/my-project/.github/workflows/main.yml</code></p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy Server<span class="token key atrule">on</span><span class="token punctuation">:</span>  <span class="token key atrule">push</span><span class="token punctuation">:</span>    <span class="token key atrule">branches</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> master<span class="token key atrule">jobs</span><span class="token punctuation">:</span>  <span class="token key atrule">SSH</span><span class="token punctuation">:</span>    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest    <span class="token key atrule">steps</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@master      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Clean        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          rm -rf .git/ .gitignore .github/ .editorconfig .eslint*</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Transport        <span class="token key atrule">uses</span><span class="token punctuation">:</span> garygrossgarten/github<span class="token punctuation">-</span>action<span class="token punctuation">-</span>scp@release        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">local</span><span class="token punctuation">:</span> ./          <span class="token key atrule">remote</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.PATH <span class="token punctuation">}</span><span class="token punctuation">}</span>          <span class="token key atrule">host</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.HOST <span class="token punctuation">}</span><span class="token punctuation">}</span>          <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.USER <span class="token punctuation">}</span><span class="token punctuation">}</span>          <span class="token key atrule">privateKey</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.SSH_KEY <span class="token punctuation">}</span><span class="token punctuation">}</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy        <span class="token key atrule">uses</span><span class="token punctuation">:</span> garygrossgarten/github<span class="token punctuation">-</span>action<span class="token punctuation">-</span>ssh@release        <span class="token key atrule">with</span><span class="token punctuation">:</span>          <span class="token key atrule">host</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.HOST <span class="token punctuation">}</span><span class="token punctuation">}</span>          <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.USER <span class="token punctuation">}</span><span class="token punctuation">}</span>          <span class="token key atrule">privateKey</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.SSH_KEY <span class="token punctuation">}</span><span class="token punctuation">}</span>          <span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">            cd ${{ secrets.PATH }}            echo BASE_URL=${{ secrets.BASE_URL }} > .env            docker-compose down            docker-compose up -d</span></code></pre><p>【注意】在推送代码前，务必去 <code>https://github.com/my-id/my-project/settings/secrets</code> 页面创建好上述配置中的变量：</p><table><thead><tr><th align="center">名称</th><th align="center">内容</th></tr></thead><tbody><tr><td align="center"><code>PATH</code></td><td align="center">服务器<strong>代码目录</strong></td></tr><tr><td align="center"><code>HOST</code></td><td align="center">服务器 <strong>IP 地址</strong>或<strong>域名</strong></td></tr><tr><td align="center"><code>USER</code></td><td align="center">服务器<strong>用户名</strong></td></tr><tr><td align="center"><code>SSH_KEY</code></td><td align="center"><code>ssh-keygen</code> 命令生成的<strong>私钥</strong>，通常存在 <code>~/.ssh/id_rsa</code></td></tr><tr><td align="center"><code>BASE_URL</code></td><td align="center">服务器 HTTP 访问根地址</td></tr></tbody></table><h3 id="HTTPS-一键搞定"><a href="#HTTPS-一键搞定" class="headerlink" title="HTTPS 一键搞定"></a>HTTPS 一键搞定</h3><p>网站上线时，<strong>服务器配置 HTTPS</strong> 一直是非常难搞的事 ——</p><ul><li><a href="https://www.cloudflare.com/" target="_blank" rel="noopener">CloudFlare</a> 域名服务虽自带<strong>免费 HTTPS 证书</strong>，但<em>墙内速度</em>一直堪忧</li><li>Nginx 虽有 <a href="https://github.com/nginx-proxy/nginx-proxy" target="_blank" rel="noopener">Docker 打包的反向代理方案</a>，但配置还是容易出错</li></ul><p>幸得网友推荐一神器 —— <a href="https://caddyserver.com/" target="_blank" rel="noopener">Caddy</a>，老子又可以<strong>一把梭</strong>了！</p><h4 id="安装-Caddy"><a href="#安装-Caddy" class="headerlink" title="安装 Caddy"></a>安装 Caddy</h4><pre class=" language-shell"><code class="language-shell">echo "deb [trusted=yes] https://apt.fury.io/caddy/ /" \    | sudo tee -a /etc/apt/sources.list.d/caddy-fury.listsudo apt updatesudo apt install caddy</code></pre><h4 id="启用-Caddy"><a href="#启用-Caddy" class="headerlink" title="启用 Caddy"></a>启用 Caddy</h4><p>只要映射好<strong>域名 A 记录</strong>，官网上的一条示例命令就能<strong>自动申请证书并配置好</strong>，<code>80</code>、<code>443</code> 端口即刻可用：</p><pre class=" language-shell"><code class="language-shell">caddy reverse-proxy --from example.com --to localhost:1337</code></pre><p>当然，日常使用肯定得扔后台了：</p><pre class=" language-shell"><code class="language-shell">sudo -inohup caddy reverse-proxy --from example.com --to localhost:1337 > /tmp/caddy.log 2>&1 &</code></pre><h2 id="扩展插件"><a href="#扩展插件" class="headerlink" title="扩展插件"></a>扩展插件</h2><p>推荐一些日常项目中常用的<strong>扩展设置</strong>、<strong>外部插件</strong>，让 Strapi 用起来更爽：</p><ul><li><a href="https://strapi.io/documentation/v3.x/plugins/users-permissions.html#providers" target="_blank" rel="noopener">OAuth 登录</a></li><li>文件上传<ul><li><a href="https://github.com/jakeFeldman/strapi-provider-upload-azure-storage" target="_blank" rel="noopener">微软 Azure Storage</a></li><li><a href="https://github.com/hezzze/strapi-provider-upload-oss" target="_blank" rel="noopener">阿里云 OSS</a></li></ul></li><li><a href="https://github.com/TechQuery/strapi-plugin-ckeditor" target="_blank" rel="noopener">富文本编辑器</a></li><li><a href="https://www.npmjs.com/package/strapi-plugin-documentation" target="_blank" rel="noopener">API 文档生成</a></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>经过前面的一顿折腾，<strong>开发者</strong>只需在本机浏览器中点点鼠标、轻敲键盘，就能实现<strong>网站数据结构</strong>的设计；推送代码到 GitHub，就能实现网站后台的更新。而<strong>运营专员</strong>访问的线上后台锁定了数据结构，他们只能在现有数据表中添加具体数据。这样一来，面对单纯的数据存取，<strong>后端 API</strong> 和<strong>后台 UI</strong> 都不用开发了~</p><p>最后，推荐一些后续学习资料：</p><ul><li><a href="https://strapi.io/blog/release-beta-18-dynamic-zones" target="_blank" rel="noopener">Strapi 后台操作视频</a></li><li><a href="https://github.com/kaiyuanshe/OrgServer" target="_blank" rel="noopener">「组织管理系统」项目脚手架</a></li><li><a href="https://github.com/EasyWebApp/MobX-Strapi" target="_blank" rel="noopener">Strapi 的 MobX SDK</a></li></ul><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ol><li><a href="https://help.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent" target="_blank" rel="noopener">https://help.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent</a></li><li><a href="https://docs.docker.com/engine/install/ubuntu/#install-using-the-convenience-script" target="_blank" rel="noopener">https://docs.docker.com/engine/install/ubuntu/#install-using-the-convenience-script</a></li><li><a href="https://yq.aliyun.com/articles/514624" target="_blank" rel="noopener">https://yq.aliyun.com/articles/514624</a></li><li><a href="https://strapi.io/documentation/v3.x/installation/docker.html" target="_blank" rel="noopener">https://strapi.io/documentation/v3.x/installation/docker.html</a></li><li><a href="https://cgo.gitbook.io/my-it-blog/linux-1/caddy-de-xia-zai-an-zhuang-pei-zhi-qi-dong" target="_blank" rel="noopener">https://cgo.gitbook.io/my-it-blog/linux-1/caddy-de-xia-zai-an-zhuang-pei-zhi-qi-dong</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> API </tag>
            
            <tag> CMS </tag>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安徒生童话：技术人的群聊</title>
      <link href="/community/group-chat-for-techies/"/>
      <url>/community/group-chat-for-techies/</url>
      
        <content type="html"><![CDATA[<p>加过<strong>技术群</strong>的同学想必听过一句话 ——</p><blockquote><p>技术人不谈<strong>政治</strong>~</p></blockquote><p>不少<strong>群公告</strong>还直接明文规定 ——</p><blockquote><p>不要讨论<strong>敏感话题</strong>！</p></blockquote><p>最初我以为，大家真的不喜欢探讨政治，直到最近我所在的 <a href="https://fcc-cd.dev/" target="_blank" rel="noopener">FCC 成都社区</a>遭受一次<strong>网络暴力</strong>……</p><h2 id="事件原文"><a href="#事件原文" class="headerlink" title="事件原文"></a>事件原文</h2><p>前两天<a href="/development/web-text-speech/">我的一篇技术博文</a>被 FCC 成都社区公众号转载，并在多个技术群转发，唯独在一个平时毫无发言的<em>技术活动观众群</em>炸了，然后这篇推文的评论区也炸了 ——</p><img src="/community/group-chat-for-techies/WHFY-bug-0.png" class="" title="公众号文章评论区"><img src="/community/group-chat-for-techies/WHFY-bug-1.png" class="" title="公众号文章恶意评论"><h2 id="焦点浅析"><a href="#焦点浅析" class="headerlink" title="焦点浅析"></a>焦点浅析</h2><p>先简要分析一下疾病命名的几个典型案例 ——</p><table><thead><tr><th align="center">曾用中文名</th><th align="center">现用中文名</th><th align="center">发现年月</th><th align="center">发现地</th></tr></thead><tbody><tr><td align="center"><a href="https://zh.wikipedia.org/wiki/2019%E5%86%A0%E7%8A%B6%E7%97%85%E6%AF%92%E7%97%85%E7%96%AB%E6%83%85" target="_blank" rel="noopener">武汉肺炎</a></td><td align="center">新冠肺炎</td><td align="center">2019 年 12 月</td><td align="center">中国武汉</td></tr><tr><td align="center"><a href="https://zh.wikipedia.org/wiki/%E9%9D%9E%E6%B4%B2%E8%B1%AC%E7%98%9F%E7%97%85%E6%AF%92%E7%A7%91#/%E6%B5%81%E8%A1%8C%E7%97%85%E5%AD%B8" target="_blank" rel="noopener">非洲猪瘟</a></td><td align="center">非洲猪瘟</td><td align="center">1921 年</td><td align="center">肯尼亚</td></tr><tr><td align="center"><a href="https://zh.wikipedia.org/wiki/%E9%98%BF%E8%8C%B2%E6%B5%B7%E9%BB%98%E7%97%87#/%E6%AD%B7%E5%8F%B2" target="_blank" rel="noopener">老年痴呆</a></td><td align="center">阿兹海默症</td><td align="center">1901 年</td><td align="center">德国</td></tr></tbody></table><p>由此看来，“<strong>疾病规范命名</strong>从新发现的开始实施”这一点并不成立。</p><p>再者，若“善良的人”遵照<strong>政治正确</strong>来“消除歧视”、“一视同仁”：</p><ul><li>说武汉肺炎是<em>病毒自然进化</em>的“天灾”，那同为天灾的<a href="https://zh.wikipedia.org/wiki/%E6%B1%B6%E5%B7%9D%E5%A4%A7%E5%9C%B0%E9%9C%87" target="_blank" rel="noopener">汶川大地震</a>也应改为“5·12 大地震”，以免人们一听你是汶川县来的就投来“怜悯”的目光</li><li>说武汉肺炎是<em>美国生物武器投毒</em>的“人祸”，那同为人祸的<a href="https://zh.wikipedia.org/wiki/%E5%8D%97%E4%BA%AC%E5%A4%A7%E5%B1%A0%E6%AE%BA" target="_blank" rel="noopener">南京大屠杀</a>也应改为“日本大屠杀”，以免每每揭开南京人痛苦的伤疤</li></ul><p>因此，个人推测 ——</p><blockquote><p>病名改不改，只取决于<a href="https://zh.wikipedia.org/wiki/%E7%99%BD%E5%B7%A6" target="_blank" rel="noopener">欧洲白左</a>、<strong>亚洲黄左</strong>是否拿它做<strong>政治资本</strong>。</p></blockquote><h2 id="进阶分析"><a href="#进阶分析" class="headerlink" title="进阶分析"></a>进阶分析</h2><p>虽然<em>随大流跟着改</em>可以完全避免此类冲突，但为何我们仍要坚持叫“武汉肺炎”？是因为，<strong>事发地命名法</strong>能让大家<strong>铭记历史</strong>：</p><ul><li>记住南京大屠杀、侵华战争的伤痛本质源于祖国曾经<a href="https://zh.wikipedia.org/wiki/%E4%B8%9C%E4%BA%9A%E7%97%85%E5%A4%AB" target="_blank" rel="noopener">“东亚病夫”</a>的羸弱！</li><li>记住汶川大地震的主要伤亡来自<a href="https://zh.wikipedia.org/wiki/%E8%B1%86%E8%85%90%E6%B8%A3%E5%B7%A5%E7%A8%8B" target="_blank" rel="noopener">豆腐渣工程</a>！</li><li>记住武汉肺炎大量死亡、全球蔓延的根本原因，是<a href="https://zh.wikipedia.org/wiki/2019%E5%86%A0%E7%8B%80%E7%97%85%E6%AF%92%E7%97%85%E4%B8%AD%E5%9C%8B%E5%A4%A7%E9%99%B8%E5%8F%8D%E6%87%89%E8%88%87%E5%BD%B1%E9%9F%BF" target="_blank" rel="noopener">天朝衙门近一个月的隐瞒</a>！</li></ul><p>否则，过不了几年，国人一定会像<a href="https://movie.douban.com/subject/6011805/" target="_blank" rel="noopener">《一九四二》</a>原著作者刘震云的外婆那样 ——</p><blockquote><p>大饥荒？你问的是哪一年？六零年啊还是……？好几次，都记不清了……</p></blockquote><p><strong>把苦难歌颂成美德</strong>，<strong>好了伤疤忘了疼</strong>！这是中国人最大的<strong>民族劣根性</strong>！</p><h2 id="深入剖析"><a href="#深入剖析" class="headerlink" title="深入剖析"></a>深入剖析</h2><p>再仔细看上面那些<strong>恶语相向</strong>的“网友”，是不是像极了<a href="https://www.wikiwand.com/zh-cn/%E6%96%87%E5%8C%96%E5%A4%A7%E9%9D%A9%E5%91%BD" target="_blank" rel="noopener">十年文革</a>中的<a href="https://www.wikiwand.com/zh-cn/%E7%BA%A2%E5%8D%AB%E5%85%B5" target="_blank" rel="noopener">红卫兵</a>？</p><p>我方小编<strong>言语平和</strong>、<strong>论据充分</strong>，对方网民<strong>避重就轻</strong>、<strong>强词夺理</strong>乃至<strong>脏话连篇</strong>，急得跳脚！妥妥的 ——</p><blockquote><p>道理不够，“道德”来凑！</p></blockquote><p>想必 80、90 后家里的长辈都对文革记忆犹新，这些网民的言语是不是与红卫兵在<a href="https://zh.wikipedia.org/wiki/%E6%89%B9%E9%AC%A5" target="_blank" rel="noopener">批斗大会</a>上的嘴脸如出一辙？<strong>历史总是惊人地相似！</strong></p><p>此次<strong>全国封城</strong>、<strong>全球停摆</strong>的大疫，不但没能换来<strong>国人的清醒</strong>，反倒<strong>在互联网时代复辟了文革</strong>！</p><h2 id="陷入沉思"><a href="#陷入沉思" class="headerlink" title="陷入沉思"></a>陷入沉思</h2><p>最后，我们聊回技术群。</p><p>我做 IT 社区这近 15 年，从 QQ 到微信，建了、加了数不过来的技术群。但无论每个群的技术方向是什么，群友画像又如何，有一点出奇的一致 ——</p><blockquote><p>平时问技术、聊技术没多少消息，但凡出现敏感话题，无论支持与反对，立马消息多到爆炸……（这还没完）</p><p>在一通“<strong>你还想不想要这个群啦</strong>”的责备声中，和事老来了一句“换个话题，聊聊某某技术”，然后就</p><p>冷<br>场<br>了<br>……</p></blockquote><p>请问你们到底是真的“<strong>不热衷政治</strong>”？还是真的“<strong>热爱技术</strong>”呢？？既然平时发点技术内容没几个吱声的，干嘛还怕这个群没了？？？</p><p>所以我认为，除了<em>华为</em>这种<a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E6%B0%91%E5%BF%97%E6%84%BF%E5%86%9B" target="_blank" rel="noopener">抗美援朝志愿军</a>式的实质国家队，中国 IT 业<a href="https://zh.wikipedia.org/wiki/%E8%B6%85%E8%8B%B1%E8%B6%95%E7%BE%8E" target="_blank" rel="noopener">赶英超美</a>基本天方夜谭！因为如同体育领域，<a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E4%BD%93%E8%82%B2#/%E7%AE%A1%E7%90%86%E4%BD%93%E5%88%B6" target="_blank" rel="noopener">举国体制</a>只能造就“体育大国”，没有足够的群众基础无以打造“体育强国”，而天朝大多数所谓的<strong>技术社区</strong>、<strong>开源社区</strong>其实是 ——</p><blockquote><p><strong>假的，假的，全是假的！</strong></p><p>—— <cite>武汉大妈</cite></p></blockquote><hr><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">/* * 有脑子的看不见 —— 以上纯属愚人节意淫，如有雷同，纯属巧合~ */</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Community </category>
          
      </categories>
      
      
        <tags>
            
            <tag> politics </tag>
            
            <tag> common-sense </tag>
            
            <tag> COVID-19 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web 文本朗读 60 行代码实现</title>
      <link href="/development/web-text-speech/"/>
      <url>/development/web-text-speech/</url>
      
        <content type="html"><![CDATA[<h2 id="国难当头"><a href="#国难当头" class="headerlink" title="国难当头"></a>国难当头</h2><p>在<a href="https://zh.wikipedia.org/wiki/2019%E5%86%A0%E7%8A%B6%E7%97%85%E6%AF%92%E7%97%85" target="_blank" rel="noopener">武汉肺炎</a>在中国大陆肆虐的两个月，在后方的大家都在家闷得难受。一开始还在网上时刻关注各种疫情新闻，久而久之头昏眼花，十分疲惫。</p><p>当<a href="https://zh.wikipedia.org/wiki/%E8%89%BE%E8%8A%AC" target="_blank" rel="noopener">发哨人艾芬医生</a>的<a href="http://archive.is/OLdHs" target="_blank" rel="noopener">采访稿</a>被封杀后，<strong>墙国网民</strong>再次群情激奋地力挺，把原文用各种文字、编码、平台记录下来，妥妥的“留取丹青照汗青”！</p><p>其中有个网友用一款 Google Chrome <strong>文本朗读</strong> (TTS) 扩展把原文读出来，并把朗读过程录成视频分享出来，让大家闭目养神中就能了解<strong>疫情真相</strong>~</p><h2 id="自力更生"><a href="#自力更生" class="headerlink" title="自力更生"></a>自力更生</h2><p>作为一个 Google 重度用户，针对一个事情可以搜出太多网页可读，眼睛会非常累，一直想找个方便的文本朗读工具。但作为一个 Web 全栈工程师，<strong>跨平台兼容性</strong>又是深入骨髓的自觉，于是翻出前一阵扫过一眼的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Speech_API/Using_the_Web_Speech_API" target="_blank" rel="noopener">Web Speech API</a>，抄起键盘就是一把梭 ——</p><iframe    style="width: 100%; height: 85vh"    scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true"    title="Web Text Speech"    src="https://codepen.io/tech_query/embed/WNvLdvB?height=300&theme-id=31315&default-tab=js,result">    See the Pen    <a href='https://codepen.io/tech_query/pen/WNvLdvB' target="_blank" rel="noopener">Web Text Speech</a>    by TechQuery (<a href='https://codepen.io/tech_query' target="_blank" rel="noopener">@tech_query</a>) on    <a href='https://codepen.io' target="_blank" rel="noopener">CodePen</a>.</iframe><p>上述代码所用的<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/SpeechSynthesis" target="_blank" rel="noopener">语音合成 API</a> <a href="http://caniuse.com/#feat=speech-synthesis" target="_blank" rel="noopener">现代浏览器支持</a>很好，能用它的都支持 ES 6，所以我们只需<a href="https://skalman.github.io/UglifyJS-online/" target="_blank" rel="noopener">压缩代码</a>不需转译，再包上 <code>javascript: (() =&gt; { /* code */ })()</code> 即可直接存在<strong>浏览器收藏栏</strong>，当个扩展按钮使用了 ——</p><blockquote><p>javascript:!((e)=&gt;{const voice=speechSynthesis.getVoices().find(({lang:e})=&gt;e===navigator.language);function speak(e){const t=new SpeechSynthesisUtterance(e);t.voice=voice,speechSynthesis.speak(t)}function*walkRange(e){const t=document.createNodeIterator(e.commonAncestorContainer);for(var n;(n=t.nextNode())&amp;&amp;(e.intersectsNode(n)&amp;&amp;(yield n),n!==e.endContainer););}function getSelectedText(e){const t=self.getSelection().getRangeAt(0);if(t&amp;&amp;t+””&amp;&amp;(!e||e.contains(t.commonAncestorContainer)))return[…walkRange(t)].filter(({nodeType:e,parentNode:t})=&gt;{if(3!==e)return;const{width:n,height:o}=t.getBoundingClientRect();return n&amp;&amp;o}).map(({nodeValue:e},n,{length:o})=&gt;e.slice(0===n?t.startOffset:0,n===o-1?t.endOffset:1/0)).filter(e=&gt;e.trim()).join(“”).trim()}document.addEventListener(“selectionchange”,()=&gt;{const e=getSelectedText();e&amp;&amp;!speechSynthesis.speaking?speak(e):speechSynthesis.cancel()}),self.alert(“Selected Text will be speak out automatically”);})();</p></blockquote><h2 id="技术背景"><a href="#技术背景" class="headerlink" title="技术背景"></a>技术背景</h2><p>若想基于这个新 API 开发应用产品的同学，兼容性大可放心，实在没辙还有 polyfill 顶着：</p><blockquote><p><a href="https://github.com/compulim/web-speech-cognitive-services" target="_blank" rel="noopener">https://github.com/compulim/web-speech-cognitive-services</a></p></blockquote><picture>    <source type="image/webp" srcset="https://caniuse.bitsofco.de/image/speech-synthesis.webp">    <img        src="https://caniuse.bitsofco.de/image/speech-synthesis.png"        alt="Data on support for the speech-synthesis feature across the major browsers from caniuse.com"    ></picture><p>代码中还有几个重要 API，列出来供大家参考 ——</p><ol><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Range" target="_blank" rel="noopener">Selection Range</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Document/selectionchange_event" target="_blank" rel="noopener">Selection change 事件</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/NodeIterator" target="_blank" rel="noopener">NodeIterator</a></li></ol><h2 id="与君共勉"><a href="#与君共勉" class="headerlink" title="与君共勉"></a>与君共勉</h2><img src="/development/web-text-speech/Web-TTS.png" class="" title="操作图示"><p>最后，以艾芬医生的两句话<strong>与君共勉</strong> ——</p><blockquote><p>每个人还是要<strong>坚持自己独立的思想</strong>，因为<strong>要有人站出来说真话</strong>，必须要有人，<strong>这个世界必须要有不同的声音</strong>。</p></blockquote><blockquote><p>早知道有今天，我管他批评不批评，<strong>『老子』到处说！</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> TTS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PWA 即刻上手</title>
      <link href="/development/pwa-quick-start/"/>
      <url>/development/pwa-quick-start/</url>
      
        <content type="html"><![CDATA[<p>近两年国内前端界很流行<em>小程序</em>，但大多数人都不知道小程序很多概念是鹅厂“借鉴”自 Google 主导的 <a href="https://developers.google.cn/web/progressive-web-apps/" target="_blank" rel="noopener">Progressive Web App（渐进式网页应用）标准</a> ——</p><ol><li><strong>“独立”运行</strong>：在“系统正在运行的应用”列表中独立显示</li><li><strong>本地缓存</strong>：页面秒开、离线运行</li><li><strong>安装到主屏幕</strong>：桌面图标、启动首屏、全屏显示等，看起来和原生 App 别无二致</li></ol><p>以上特性已经很香了，更甭说开放的 Web 还有<a href="/development/web-chrome-update-at-google-io-2019/slide.html">更丰富的新标准</a>来拓展 Web App 的疆域了~</p><p>那这么香的新标准怎么上手呢？会像小程序开发环境那样难用吗？我们老规矩 —— <strong>抄起键盘就是一把梭！</strong></p><h2 id="应用元数据"><a href="#应用元数据" class="headerlink" title="应用元数据"></a>应用元数据</h2><p>一个<strong>渐进式 Web 应用</strong>首先要声明一下自己的基本信息：</p><p><code>index.html</code></p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>manifest<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index.webmanifest<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token comment" spellcheck="true">&lt;!-- 老浏览器私有 meta 标签兼容 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/pwacompat@2.0.17/pwacompat.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></code></pre><p><code>index.webmanifest</code></p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"应用全名（启动页）"</span><span class="token punctuation">,</span>  <span class="token property">"short_name"</span><span class="token operator">:</span> <span class="token string">"应用短名（桌面图标）"</span><span class="token punctuation">,</span>  <span class="token property">"start_url"</span><span class="token operator">:</span> <span class="token string">"."</span><span class="token punctuation">,</span>  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"应用简介"</span><span class="token punctuation">,</span>  <span class="token property">"scope"</span><span class="token operator">:</span> <span class="token string">"/"</span><span class="token punctuation">,</span>  <span class="token property">"display"</span><span class="token operator">:</span> <span class="token string">"standalone"</span><span class="token punctuation">,</span>  <span class="token property">"orientation"</span><span class="token operator">:</span> <span class="token string">"any"</span><span class="token punctuation">,</span>  <span class="token property">"lang"</span><span class="token operator">:</span> <span class="token string">"zh-CN"</span><span class="token punctuation">,</span>  <span class="token property">"dir"</span><span class="token operator">:</span> <span class="token string">"ltr"</span><span class="token punctuation">,</span>  <span class="token property">"theme_color"</span><span class="token operator">:</span> <span class="token string">"rgba(0,0,0,0.5)"</span><span class="token punctuation">,</span>  <span class="token property">"background_color"</span><span class="token operator">:</span> <span class="token string">"transparent"</span><span class="token punctuation">,</span>  <span class="token property">"icons"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>      <span class="token property">"src"</span><span class="token operator">:</span> <span class="token string">"logo.png"</span><span class="token punctuation">,</span>      <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"image/png"</span><span class="token punctuation">,</span>      <span class="token property">"sizes"</span><span class="token operator">:</span> <span class="token string">"144x144"</span>    <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><h2 id="后台服务"><a href="#后台服务" class="headerlink" title="后台服务"></a>后台服务</h2><p>一个 PWA 能真正安装到用户系统中，还需要一个 <strong>Service Worker</strong>。但它的工作原理对初学者直接手写有些困难，亲爹 Google 已经做好了开发框架 <a href="https://developers.google.cn/web/tools/workbox" target="_blank" rel="noopener">Workbox</a>，还配了 <a href="https://developers.google.cn/web/tools/workbox/guides/generate-service-worker/cli" target="_blank" rel="noopener">Workbox CLI</a>，几行命令就能生成一个基本的 ServiceWorker，简直不要太贴心：</p><pre class=" language-shell"><code class="language-shell">npm install workbox-cli --globalcd your_project/npm run build  # 先执行你项目的构建脚本，生成生产环境目录workbox wizard</code></pre><p>跟着向导执行完上述命令，会生成一个名为 <code>workbox-config.js</code> 的配置文件，但须稍加修改来适应<em>天朝国情</em>：</p><pre class=" language-javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  globDirectory<span class="token punctuation">:</span> <span class="token string">'dist/'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// webpack 无需此行</span>  globPatterns<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'**/*.{html,css,js,json,ico,gif,jpg,jpeg,png,webp}'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// webpack 无需此行</span>  swDest<span class="token punctuation">:</span> <span class="token string">'dist/sw.js'</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 启用 第三方 CDN</span>  importScripts<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token string">'https://cdn.jsdelivr.net/npm/workbox-sw@6.0.2/build/workbox-sw.min.js'</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 首次打开页面后尽快接管网络请求</span>  clientsClaim<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  cleanupOutdatedCaches<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>然后就可以一键生成 ServiceWorker 了：</p><pre class=" language-json"><code class="language-json">workbox generateSW</code></pre><p>最后在 <code>index.html</code> 里注册一下即可：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>manifest<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index.webmanifest<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token comment" spellcheck="true">&lt;!-- 老浏览器私有 meta 标签兼容 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/pwacompat@2.0.17/pwacompat.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    navigator<span class="token punctuation">.</span>serviceWorker<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">'sw.js'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></code></pre><h2 id="工具链兼容性"><a href="#工具链兼容性" class="headerlink" title="工具链兼容性"></a>工具链兼容性</h2><h3 id="Parcel"><a href="#Parcel" class="headerlink" title="Parcel"></a>Parcel</h3><p><strong>0 配置、一键化</strong>的 <a href="https://parceljs.org/" target="_blank" rel="noopener">Parcel</a> 原生支持 <strong>Web Manifest</strong>，不像 webpack 和 Rollup，还需要配置插件，只需将 <code>package.json</code> 中的构建脚本修改如下：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"start"</span><span class="token operator">:</span> <span class="token string">"parcel source/index.html --open"</span><span class="token punctuation">,</span>    <span class="token property">"pack"</span><span class="token operator">:</span> <span class="token string">"parcel build source/index.html --public-url ."</span><span class="token punctuation">,</span>    <span class="token property">"build"</span><span class="token operator">:</span> <span class="token string">"rm -rf dist/  &amp;&amp;  npm run pack-dist  &amp;&amp;  workbox generateSW"</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>每次构建运行 <code>npm run build</code> 即可生成可缓存整个 Web App 的 Service Worker 代码。</p><h3 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h3><p>因为我不是 _webpack 配置工程师_，所以我查了好多技术博文才总结出一套最简单的 webpack PWA 配置：</p><pre class=" language-shell"><code class="language-shell">npm install webpack-pwa-manifest workbox-webpack-plugin -D</code></pre><p>安装好上述 webpack 插件才能开始配置，而且需要注意的是，<code>webpack-pwa-manifest</code> 这个第三方插件对 <a href="https://developer.mozilla.org/zh-CN/docs/Web/Manifest" target="_blank" rel="noopener">PWA Manifest 字段</a>的支持不完整，如遇报错就删除相应字段。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// webpack.config.js</span><span class="token keyword">const</span> <span class="token punctuation">{</span> resolve <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> PWA_Manifest <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'webpack-pwa-manifest'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  Workbox <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'workbox-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> PWA_manifest <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'./src/manifest.json'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  Workbox_config <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'./workbox.config'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> icon <span class="token keyword">of</span> PWA_manifest<span class="token punctuation">.</span>icons<span class="token punctuation">)</span> icon<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">'src'</span><span class="token punctuation">,</span> icon<span class="token punctuation">.</span>src<span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">PWA_Manifest</span><span class="token punctuation">(</span>PWA_manifest<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">new</span> <span class="token class-name">WorkboxPlugin<span class="token punctuation">.</span>GenerateSW</span><span class="token punctuation">(</span>Workbox_config<span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>对比之后大家会发现，Parcel 这种<strong>面向资源的打包器</strong>自动根据<strong>各种语言的标准资源路径语法</strong>查找依赖项，用应用开发者“想当然”的思路搜集各种资源文件，既不需要遵守尚未成为标准的“约定”，也不需要研究复杂的“配置”，全凭“肌肉记忆”撸代码，轻快舒爽~</p><h2 id="应用更新"><a href="#应用更新" class="headerlink" title="应用更新"></a>应用更新</h2><p>PWA 核心技术 <strong>Service Worker</strong> 的强大之处在于，它<strong>运行在 HTTP 协议与 Web 页面之间</strong>，可<strong>拦截、缓存</strong>它所在 <strong>URL scope 下的所有 HTTP 请求</strong>。但 <strong>Service Worker 只会在它管理的所有页面都关闭后才会更新服务器端的新版本</strong>，若它缓存了 HTML 文件，用户刷新时拿到的依然是缓存的旧版本，HTML 引用的其它所有外置资源的 URL 也不会改变。</p><p>所以，我们需要一个<strong>安全又用户友好的更新逻辑</strong>，遂改 JS 入口模块如下：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> serviceWorkerUpdate <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'web-utility'</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token punctuation">{</span> serviceWorker <span class="token punctuation">}</span> <span class="token operator">=</span> window<span class="token punctuation">.</span>navigator<span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span>NODE_ENV <span class="token operator">!==</span> <span class="token string">'development'</span><span class="token punctuation">)</span>  serviceWorker    <span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">'sw.js'</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>serviceWorkerUpdate<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>worker <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">'检测到新版本，是否立即启用？'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// 触发 Workbox CLI 生成的 Service Worker 中监听的消息回调</span>        worker<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token punctuation">:</span> <span class="token string">'SKIP_WAITING'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>serviceWorker<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'controllerchange'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span>  window<span class="token punctuation">.</span>location<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><p>好了，马上重新部署你的 Web 应用，在 Chrome、Opera、Edge、Firefox 上试试把它<strong>添加到桌面</strong>吧！</p><p><img src="https://www.atyantik.com/wp-content/uploads/2017/10/PWA-States.png"></p><h2 id="范例项目"><a href="#范例项目" class="headerlink" title="范例项目"></a>范例项目</h2><ol><li><a href="https://github.com/EasyWebApp/scaffold" target="_blank" rel="noopener">WebCell 项目脚手架</a></li><li><a href="https://web-cell.dev/" target="_blank" rel="noopener">WebCell 框架官网</a></li><li><a href="https://web-conf.dev/" target="_blank" rel="noopener">成都 Web 开发者大会官网</a></li><li><a href="https://wuhan2020.kaiyuanshe.cn/" target="_blank" rel="noopener">新冠战疫信息平台</a></li><li><a href="https://jscig.github.io/" target="_blank" rel="noopener">JavaScript 中文兴趣组</a></li></ol><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ul><li><a href="https://developers.google.cn/web/tools/workbox/guides/generate-service-worker/cli" target="_blank" rel="noopener">《用 Workbox CLI 生成一个完整的 Service Worker》</a></li><li><a href="https://developers.google.cn/web/fundamentals/primers/service-workers/lifecycle" target="_blank" rel="noopener">《Service Worker 生命周期》</a></li><li><a href="https://juejin.im/post/6844903792522035208" target="_blank" rel="noopener">《谨慎处理 Service Worker 的更新》</a></li><li><a href="https://lavas-project.github.io/pwa-book/chapter04/3-service-worker-dive.html" target="_blank" rel="noopener">《Service Worker 工作原理》</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> PWA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web 组件标准实践</title>
      <link href="/programming/web-components-practise/"/>
      <url>/programming/web-components-practise/</url>
      
        <content type="html"><![CDATA[<blockquote><p>水歌 —— WebCell 引擎作者</p></blockquote><hr><h2 id="水歌其人"><a href="#水歌其人" class="headerlink" title="水歌其人"></a>水歌其人</h2><ul><li>Web/JavaScript 全栈开发者</li><li>WebCell 等多个开源项目的作者</li><li>jQuery、Babel 等多个国际开源项目的贡献者</li><li>freeCodeCamp 成都社区主理人</li><li>开源社理事、项目委员会主席</li><li>微软 MVP</li></ul><hr><h2 id="Web-组件的概念"><a href="#Web-组件的概念" class="headerlink" title="Web 组件的概念"></a>Web 组件的概念</h2><blockquote><p>将网页中某块界面的 <strong>HTML 结构</strong>、<strong>CSS 样式</strong>、<strong>JS 逻辑</strong>，封装成一个<strong>可移植的模块</strong></p></blockquote><hr><h2 id="Web-组件技术简史"><a href="#Web-组件技术简史" class="headerlink" title="Web 组件技术简史"></a>Web 组件技术简史</h2><hr><h3 id="上古时代"><a href="#上古时代" class="headerlink" title="上古时代"></a>上古时代</h3><ul><li><p>W3C: <code>&lt;frameset /&gt;</code>、<code>&lt;iframe /&gt;</code></p></li><li><p>IE: HTML Component (HTC)</p></li></ul><hr><h3 id="中古时代"><a href="#中古时代" class="headerlink" title="中古时代"></a>中古时代</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">MyComponent</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>options <span class="token operator">=</span> options<span class="token punctuation">;</span><span class="token punctuation">}</span>$<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>MyComponent<span class="token punctuation">.</span>prototype<span class="token punctuation">,</span> <span class="token punctuation">{</span>  method<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>$<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>myComponent <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    $<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">'instance'</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">MyComponent</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><hr><h3 id="近代"><a href="#近代" class="headerlink" title="近代"></a>近代</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">MyComponent</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token operator">&lt;</span>h1<span class="token operator">></span>Hello<span class="token punctuation">,</span> World<span class="token operator">!</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><hr><h3 id="历史问题"><a href="#历史问题" class="headerlink" title="历史问题"></a>历史问题</h3><ul><li><p><strong>隔离性</strong>好的，<strong>运行时</strong>过重</p></li><li><p><strong>易用性</strong>好的，<strong>工程化</strong>不佳</p></li><li><p><strong>实用性</strong>强的，<strong>工具链</strong>过重</p></li></ul><hr><h2 id="Web-组件标准"><a href="#Web-组件标准" class="headerlink" title="Web 组件标准"></a>Web 组件标准</h2><p><a href="https://www.webcomponents.org/" target="_blank" rel="noopener">https://www.webcomponents.org/</a></p><hr><h3 id="标准集"><a href="#标准集" class="headerlink" title="标准集"></a>标准集</h3><ul><li>HTML 5.3</li><li>DOM 4.1</li><li>CSS Variables level 1</li><li>ECMAScript 6+</li></ul><hr><h3 id="主要目标"><a href="#主要目标" class="headerlink" title="主要目标"></a>主要目标</h3><ul><li><p>运行时 轻量级 隔离环境</p></li><li><p>框架无关的 DOM 接口</p></li></ul><hr><h3 id="原生写法"><a href="#原生写法" class="headerlink" title="原生写法"></a>原生写法</h3><iframe    height="600" style="width: 100%"    frameborder="no" scrolling="no" allowtransparency="true" allowfullscreen="true"    src="https://codepen.io/tech_query/embed/jONqOzj/?height=600&theme-id=31315&default-tab=html,result"></iframe><hr><h4 id="样式定制"><a href="#样式定制" class="headerlink" title="样式定制"></a>样式定制</h4><pre class=" language-css"><code class="language-css"><span class="token selector">my-component </span><span class="token punctuation">{</span>  <span class="token property">--my-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token pseudo-class">:host</span> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token selector"><span class="token pseudo-class">:host(.class)</span> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token selector"><span class="token pseudo-class">:host-context(.class)</span> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token selector"><span class="token pseudo-element">::slotted</span>(*) </span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--my-color<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><hr><h4 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">MyComponent</span> <span class="token keyword">extends</span> <span class="token class-name">HTMLElement</span> <span class="token punctuation">{</span>  <span class="token keyword">static</span> <span class="token keyword">get</span> <span class="token function">observedAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token function">attributeChangedCallback</span><span class="token punctuation">(</span>attrName<span class="token punctuation">,</span> oldVal<span class="token punctuation">,</span> newVal<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token function">connectedCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token function">disconnectedCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token function">adoptedCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><hr><h4 id="扩展原生"><a href="#扩展原生" class="headerlink" title="扩展原生"></a>扩展原生</h4><pre class=" language-javascript"><code class="language-javascript">customElements<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">'my-button'</span><span class="token punctuation">,</span> <span class="token keyword">class</span> <span class="token class-name">extends</span> HTMLButtonElement <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>  <span class="token keyword">extends</span><span class="token punctuation">:</span> <span class="token string">'button'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">is</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>my-button<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></code></pre><hr><h3 id="规范模式"><a href="#规范模式" class="headerlink" title="规范模式"></a>规范模式</h3><h4 id="不要接管一切"><a href="#不要接管一切" class="headerlink" title="不要接管一切"></a>不要接管一切</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>my-button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">shadowrootmode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>open<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>  按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>my-button</span><span class="token punctuation">></span></span></code></pre><hr><h4 id="渐进增强，优雅降级"><a href="#渐进增强，优雅降级" class="headerlink" title="渐进增强，优雅降级"></a>渐进增强，优雅降级</h4><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 良 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>my-button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">shadowrootmode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>open<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>my-button</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 优 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">is</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>my-button<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">shadowrootmode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>open<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>  按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></code></pre><hr><h3 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h3><h4 id="原生"><a href="#原生" class="headerlink" title="原生"></a>原生</h4><ul><li><p><a href="https://caniuse.com/#feat=custom-elementsv1" target="_blank" rel="noopener">https://caniuse.com/#feat=custom-elementsv1</a></p></li><li><p><a href="https://caniuse.com/#feat=shadowdomv1" target="_blank" rel="noopener">https://caniuse.com/#feat=shadowdomv1</a></p></li><li><p><a href="https://caniuse.com/#feat=css-variables" target="_blank" rel="noopener">https://caniuse.com/#feat=css-variables</a></p></li><li><p><a href="https://caniuse.com/#feat=es6-class" target="_blank" rel="noopener">https://caniuse.com/#feat=es6-class</a></p></li></ul><h4 id="polyfill"><a href="#polyfill" class="headerlink" title="polyfill"></a>polyfill</h4><p>IE 11 +</p><hr><h3 id="工程问题"><a href="#工程问题" class="headerlink" title="工程问题"></a>工程问题</h3><ul><li><p>数据绑定</p></li><li><p>资源打包</p></li><li><p>路由定义</p></li><li><p>状态管理</p></li></ul><hr><h2 id="WebCell"><a href="#WebCell" class="headerlink" title="WebCell"></a>WebCell</h2><blockquote><p>优雅、轻量的 Web 组件引擎</p></blockquote><hr><h3 id="声明式组件"><a href="#声明式组件" class="headerlink" title="声明式组件"></a>声明式组件</h3><iframe    src="https://codesandbox.io/p/devbox/9gyll?embed=1&file=%2Fsrc%2FClock.tsx"    style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;"    title="WebCell scaffold"></iframe><hr><h3 id="官方适配-MobX"><a href="#官方适配-MobX" class="headerlink" title="官方适配 MobX"></a>官方适配 MobX</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> observer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'web-cell'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span> app <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'../model'</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> PageIndex <span class="token operator">=</span> <span class="token function">observer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>  <span class="token operator">&lt;</span>div onClick<span class="token operator">=</span><span class="token punctuation">{</span>app<span class="token punctuation">.</span>increase<span class="token punctuation">}</span><span class="token operator">></span>count<span class="token punctuation">:</span> <span class="token punctuation">{</span>app<span class="token punctuation">.</span>count<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> component<span class="token punctuation">,</span> observer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'web-cell'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span> app <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'../model'</span><span class="token punctuation">;</span>@<span class="token function">component</span><span class="token punctuation">(</span><span class="token punctuation">{</span> tagName<span class="token punctuation">:</span> <span class="token string">'page-index'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>@observer<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">PageIndex</span> <span class="token keyword">extends</span> <span class="token class-name">HTMLElement</span> <span class="token punctuation">{</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token operator">&lt;</span>div onClick<span class="token operator">=</span><span class="token punctuation">{</span>app<span class="token punctuation">.</span>increase<span class="token punctuation">}</span><span class="token operator">></span>count<span class="token punctuation">:</span> <span class="token punctuation">{</span>app<span class="token punctuation">.</span>count<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><hr><h3 id="极简路由-——-Cell-Router"><a href="#极简路由-——-Cell-Router" class="headerlink" title="极简路由 —— Cell Router"></a>极简路由 —— Cell Router</h3><blockquote><p>路径即状态，容器即组件</p></blockquote><hr><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> DOMRenderer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'dom-renderer'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span> FC <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'web-cell'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span> createRouter<span class="token punctuation">,</span> PageProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'cell-router'</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token punctuation">{</span> Route<span class="token punctuation">,</span> Link <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> TestPage<span class="token punctuation">:</span> FC<span class="token operator">&lt;</span>PageProps<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>    className<span class="token punctuation">,</span>    style<span class="token punctuation">,</span>    path<span class="token punctuation">,</span>    history<span class="token punctuation">,</span>    <span class="token operator">...</span>data<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>ul <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">{</span> className<span class="token punctuation">,</span> style <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>Path<span class="token punctuation">:</span> <span class="token punctuation">{</span>path<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>Data<span class="token punctuation">:</span> <span class="token punctuation">{</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">new</span> <span class="token class-name">DOMRenderer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>    <span class="token operator">&lt;</span><span class="token operator">></span>        <span class="token operator">&lt;</span>nav<span class="token operator">></span>            <span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token string">"test?a=1"</span><span class="token operator">></span>Test<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">></span>            <span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token string">"example/2"</span><span class="token operator">></span>Example<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>nav<span class="token operator">></span>        <span class="token operator">&lt;</span>main className<span class="token operator">=</span><span class="token string">"router"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>Route                path<span class="token operator">=</span><span class="token string">""</span>                component<span class="token operator">=</span><span class="token punctuation">{</span>props <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>div <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span><span class="token operator">></span>Home Page<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token punctuation">}</span>            <span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"test"</span> component<span class="token operator">=</span><span class="token punctuation">{</span>TestPage<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"example/:id"</span> component<span class="token operator">=</span><span class="token punctuation">{</span>TestPage<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>main<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><h4 id="异步加载页面"><a href="#异步加载页面" class="headerlink" title="异步加载页面"></a>异步加载页面</h4><p><code>tsconfig.json</code></p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"compilerOptions"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"module"</span><span class="token operator">:</span> <span class="token string">"ESNext"</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><code>source/page/index.ts</code></p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> lazy <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'web-cell'</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">[</span>  <span class="token punctuation">{</span>    path<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    component<span class="token punctuation">:</span> <span class="token function">lazy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'./Home'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>    path<span class="token punctuation">:</span> <span class="token string">'list'</span><span class="token punctuation">,</span>    component<span class="token punctuation">:</span> <span class="token function">lazy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'./List'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre><hr><h3 id="开箱即用"><a href="#开箱即用" class="headerlink" title="开箱即用"></a>开箱即用</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> init -y<span class="token function">npm</span> i dom-renderer web-cell mobx cell-router web-utility boot-cell<span class="token function">npm</span> i parcel -D</code></pre><hr><h3 id="官方组件库-——-BootCell"><a href="#官方组件库-——-BootCell" class="headerlink" title="官方组件库 —— BootCell"></a>官方组件库 —— BootCell</h3><iframe    src="https://bootstrap.web-cell.dev/"    style="width: 100%; height: 35rem"></iframe><hr><h3 id="推荐组件库-——-MDUI"><a href="#推荐组件库-——-MDUI" class="headerlink" title="推荐组件库 —— MDUI"></a>推荐组件库 —— MDUI</h3><iframe    src="https://www.mdui.org/zh-cn/"    style="width: 100%; height: 35rem"></iframe><hr><h3 id="竞争对手"><a href="#竞争对手" class="headerlink" title="竞争对手"></a>竞争对手</h3><ul><li><p>Google Polymer/Lit</p></li><li><p>Ionic Stencil</p></li><li><p>Tencent Omi</p></li></ul><hr><p><img src="/image/WebCell-1.png"></p><p><a href="https://web-cell.dev/" target="_blank" rel="noopener">https://web-cell.dev/</a></p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> component </tag>
            
            <tag> WebCell </tag>
            
            <tag> W3C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>结构化简历数据</title>
      <link href="/development/structured-resume-data/"/>
      <url>/development/structured-resume-data/</url>
      
        <content type="html"><![CDATA[<p>参加工作久了，经历公司多了，每次<strong>换工作写简历</strong>都烦得要死 ——</p><ol><li>常用招聘网站<strong>更新简历</strong>：简历编辑器改版了，操作习惯大变不说，数据格式很多也对不上号</li><li>注册新招聘网站<strong>填简历</strong>：所需内容和之前其它网站差不多，但填法大相径庭</li></ol><p>所以，虽说每次只加一项前任的内容，但却<em>每到一处基本重写</em>…… 虽说简历是自己脑子里的记忆，但每次向不同相关方传递时，都要用不同的话再描述一遍，削足适履…… 这在<strong>信息时代</strong>是一种<em>效率极低的沟通方式</em>！</p><h2 id="大神说：要有简历规格！"><a href="#大神说：要有简历规格！" class="headerlink" title="大神说：要有简历规格！"></a>大神说：要有简历规格！</h2><p>于是，你就能从 GitHub 搜到一个叫 <a href="https://jsonresume.org/" target="_blank" rel="noopener">JSON Resume</a> 的开源项目 —— 除了人人受用的<a href="https://jsonresume.org/themes/" target="_blank" rel="noopener">主题模板</a>和程序员最爱的<a href="https://jsonresume.org/getting-started/" target="_blank" rel="noopener">命令行工具</a>，一个学术范儿的<a href="https://jsonresume.org/schema/" target="_blank" rel="noopener">标准规范</a>也是必须有的~</p><p>了解 Node.JS 的小伙伴马上就能安装 ——</p><pre class=" language-shell"><code class="language-shell">npm install resume-cli -g</code></pre><p>然后，反手就新建一份简历 ——</p><pre class=" language-shell"><code class="language-shell">resume init</code></pre><p>最后，边改边在浏览器里刷新看效果 ——</p><pre class=" language-shell"><code class="language-shell">resume serve</code></pre><h2 id="我说：还可以更简单！"><a href="#我说：还可以更简单！" class="headerlink" title="我说：还可以更简单！"></a>我说：还可以更简单！</h2><p>有经验的开发者用到这儿可能会问：<a href="https://github.com/jsonresume/resume-cli/issues/20" target="_blank" rel="noopener">能支持 YAML 吗？</a></p><p>很遗憾，<strong>开源界大神</strong>往往像上帝一般，干完最重要的几件事儿就歇着去了，谁哪里用着不爽，自己提交补丁~</p><p>但其实也有 <strong>UNIX 哲学式</strong>“各司其职”的折中方案 —— 前置一个 YAML to JSON 转换器（比如 <a href="https://www.npmjs.com/package/yamljs" target="_blank" rel="noopener"><code>yamljs</code></a>），就可以用 YAML 写简历了！</p><h3 id="简历模板生成"><a href="#简历模板生成" class="headerlink" title="简历模板生成"></a>简历模板生成</h3><pre class=" language-shell"><code class="language-shell">resume init# 解析简历模板中最深 4 层 JSON 嵌套json2yaml -d 4 resume.json > resume.yml</code></pre><h3 id="网页版简历导出"><a href="#网页版简历导出" class="headerlink" title="网页版简历导出"></a>网页版简历导出</h3><pre class=" language-shell"><code class="language-shell"># 输出格式化的 JSON，并清除 resume export 不支持的时间格式yaml2json resume.yml -p | sed -r s/T[0-9]+:[0-9]+:[0-9]+\.[0-9]+Z//g > resume.jsonresume export resume.html</code></pre><h3 id="简历即时预览"><a href="#简历即时预览" class="headerlink" title="简历即时预览"></a>简历即时预览</h3><p>先在一个命令行终端启动 <strong>YAML 转换器</strong>监听 ——</p><pre class=" language-shell"><code class="language-shell">yaml2json resume.yml -s -p -w</code></pre><p>再在一个命令行终端启动<strong>简历生成器</strong>监听 ——</p><pre class=" language-shell"><code class="language-shell">resume serve</code></pre><h2 id="一点小坑"><a href="#一点小坑" class="headerlink" title="一点小坑"></a>一点小坑</h2><ol><li>没梯子的同学要在 <code>resume-cli</code> 安装前启用天朝镜像：</li></ol><pre class=" language-shell"><code class="language-shell">npm set puppeteer_download_host https://storage.googleapis.com.cnpmjs.org</code></pre><ol start="2"><li>用非默认主题导出时，要先把<a href="https://www.npmjs.com/search?q=jsonresume-theme-*" target="_blank" rel="noopener">主题模板包</a>安装在 <code>resume-cli</code> 的对应位置（全局 或 项目）</li></ol><h2 id="推荐的云服务"><a href="#推荐的云服务" class="headerlink" title="推荐的云服务"></a>推荐的云服务</h2><p>JSON Resume 官网上推荐了几个支持其数据结构规范的 <strong>SaaS 云服务</strong>，其中免费、易用的当属 <a href="https://gitconnected.com/" target="_blank" rel="noopener">GitConnected</a>。用 GitHub 账号登录后，它会读取你的 GitHub 个人资料、代码库等数据，自动填入简历。</p><figure><img src="/development/structured-resume-data/GitConnected.png" class=""></figure><p>除了<strong>用户友好</strong>，它还提供形如 <code>https://gitconnected.com/v1/portfolio/{github_id}</code> 的 <strong>RESTful API</strong>，比起形形色色的商业平台，也是<strong>代码友好</strong>的。</p><p>最终，以后你只需记住形如 <code>https://gitconnected.com/{github_id}/</code> 的网址，立马即可把简历发给用人方，打印简历也不需要 U 盘拷、微信传了~</p>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> API </tag>
            
            <tag> data </tag>
            
            <tag> model </tag>
            
            <tag> document </tag>
            
            <tag> schema </tag>
            
            <tag> SaaS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>敏捷开发之我见</title>
      <link href="/development/agile-in-my-eyes/"/>
      <url>/development/agile-in-my-eyes/</url>
      
        <content type="html"><![CDATA[<p>入职 ThoughtWorks 后，公司邮箱曾收到一篇内部博客大赛的文章《真正的敏捷工作流 —— GitHub flow》，我心想“我一个 <strong>GitHub 公民</strong>应该会很适应 TW 吧”？</p><p>果然…… 不要立 flag……</p><h2 id="敏捷不是什么"><a href="#敏捷不是什么" class="headerlink" title="敏捷不是什么"></a>敏捷不是什么</h2><p>大多数人对<strong>敏捷开发</strong>的理解主要停留在 ——</p><blockquote><p>敏捷开发周期短<br>瀑布开发周期长</p></blockquote><p>而我觉得，更本质的区别在于 ——</p><blockquote><p>敏捷是<strong>灵活</strong>的，<strong>拥抱变化</strong><br>瀑布是<strong>死板</strong>的，宁可一无所成，也绝不“犯错”</p></blockquote><p>但我在 TW 前两个项目的工作中发现，一些小伙伴把<strong>敏捷实践</strong>奉为金科玉律，不容改变……</p><h2 id="陷入技术争论"><a href="#陷入技术争论" class="headerlink" title="陷入技术争论"></a>陷入技术争论</h2><h3 id="CORS-重不重要？"><a href="#CORS-重不重要？" class="headerlink" title="CORS 重不重要？"></a>CORS 重不重要？</h3><p>来 TW 的第一个项目是个内部中台项目，虽然迭代 1 的需求很简单，但创始人们一开始就志在推广到公司各团队，甚至独立对外出售或开源，<strong>前后端分离</strong>的架构迟早要面对<strong>跨域</strong>问题。后端从一开始就开启 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS" target="_blank" rel="noopener">HTTP CORS</a> 会极大地方便前端开发，各大<strong>后端框架</strong>也早就有成熟的中间件来<strong>一键化</strong>处理，比如 Node.JS 的 <a href="https://koa.bootcss.com/" target="_blank" rel="noopener">Koa</a> 框架 ——</p><ol><li>安装中间件</li></ol><pre class=" language-shell"><code class="language-shell">npm install @koa/cors</code></pre><ol start="2"><li>启用中间件</li></ol><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">import</span> Koa <span class="token keyword">from</span> <span class="token string">'koa'</span><span class="token punctuation">;</span><span class="token keyword">import</span> CORS <span class="token keyword">from</span> <span class="token string">'@koa/cors'</span><span class="token punctuation">;</span><span class="token keyword">new</span> <span class="token class-name">Koa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">CORS</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>一分钟搞定！即便 Java、Spring 写法繁琐一点，一刻钟够不够？</p><p>但我和同为新入职员工的 M 君一同向 Java <strong>后端主程</strong>建议此事，他却以多种理由拒绝 ——</p><ol><li>前端 webpack 自己先代理一下（之前代理出了一些罕见 bug，否则我们不会提出早开跨域）</li><li>CORS 可能引起 CSRF 等安全问题（两者根本风马牛不相及，不懂的自己 Google）</li><li>CORS 优先级不高，应该先抓紧做功能</li><li>敏捷提倡<strong>代码集体所有制</strong>，若这个点对你真的很重要，我们没时间但你有时间，你可以直接去改（若本项目是 Node.JS 后端，我一人 <strong>JavaScript 前后端一把梭</strong>，还真不用麻烦你）</li></ol><p>结果就这么简单一事儿，用各种理由和我俩争执一上午，代码都没写就吃午饭了…… 说好的“着急做卡”呢？</p><p>【八卦】第二天 M 君就以“个人身体原因”为由退出项目组，直到他离职前才私下告诉我“CORS 这么常识的事儿都如此争执，后面坑少不了”……</p><h3 id="原生标准好不好？"><a href="#原生标准好不好？" class="headerlink" title="原生标准好不好？"></a>原生标准好不好？</h3><p>随后，令我和 M 君更加意外的是，一起加入第一个正式项目后，遇到了更多没必要的争执……</p><table><thead><tr><th align="center">需求</th><th align="center">我们的方案</th><th align="center">领导的要求</th><th align="center">领导的评价</th><th align="center">我们的看法</th></tr></thead><tbody><tr><td align="center">全局异常捕获（后置拦截）</td><td align="center"><a href="https://github.com/rtsao/browser-unhandled-rejection#readme" target="_blank" rel="noopener"><code>unhandledreject</code> 事件</a>（后置拦截）</td><td align="center"><a href="https://github.com/axios/axios#interceptors" target="_blank" rel="noopener">Axios 拦截器</a>（前置拦截）</td><td align="center">“你们怎么把代码改成这个鬼样子”</td><td align="center">对合适但不常见的用法有偏见</td></tr><tr><td align="center">分行列展示几项数据</td><td align="center"><code>&lt;table /&gt;</code>（符合<strong>语义化规范</strong>，每列自动对齐）</td><td align="center"><code>&lt;div /&gt;</code> + flex 模拟表格列对齐</td><td align="center">“table 太老了，我们的用户也没有盲人”</td><td align="center">看重“时髦”甚于<a href="https://developer.mozilla.org/zh-CN/docs/Web/Accessibility" target="_blank" rel="noopener">无障碍规范</a></td></tr><tr><td align="center">文字罗列多个名词</td><td align="center"><a href="/development/web-chrome-update-at-google-io-2019/#%E7%9F%AD%E8%AF%AD%E5%88%97%E8%A1%A8"><code>Intl.ListFormat</code></a> 依数量自适应中文标点、连词</td><td align="center"><code>array.join(&#39;、&#39;)</code></td><td align="center">“你这个我看不懂，我们没那么先进”</td><td align="center">对<strong>书面文书写规范</strong>不重视</td></tr><tr><td align="center">处理 HTTP 请求</td><td align="center"><code>async</code> + <code>await</code> 解决冗长的“回调地狱”</td><td align="center">Redux Saga 生成器 + 自定义回调</td><td align="center">“Saga 唯一的缺点就是‘样板代码’多”</td><td align="center">“重复代码多”违背<strong>编程消除重复</strong>的本质</td></tr></tbody></table><p>一个 Web 国际标准通常历经三步走才发布 ——</p><ol><li><strong>一线开发者</strong>多年实践总结出<strong>标准提案</strong></li><li>各大<strong>浏览器厂商</strong>尝试实现，提出<strong>改进意见</strong></li><li><strong>W3C 标准委员会</strong>综合全球其它会员厂商意见</li></ol><p>上述业界领袖们多年争执后推出的正式标准，没有理由再在团队内部争执“该不该用”。我写这块代码我先用了新标准，你写那块暂时没用，都无可厚非，不影响大局。</p><blockquote><p>Code review 本是<strong>交流技术</strong>的契机，不是用来争执“看不看得顺眼”的。</p></blockquote><h2 id="开卡、关卡必须-BA、QA、UX、Dev-全到齐"><a href="#开卡、关卡必须-BA、QA、UX、Dev-全到齐" class="headerlink" title="开卡、关卡必须 BA、QA、UX、Dev 全到齐"></a>开卡、关卡必须 BA、QA、UX、Dev 全到齐</h2><p>多数<strong>故事卡</strong>的 UI 设计并无不清楚的细节，项目设计师又经常没时间，如不灵活变通，卡一直开不了或关不上，让 Dev 一直被阻塞，拖累了项目进度。</p><p>而当 Dev 想先尝试写一下新卡的代码，却被告知“必须先开卡，否则做了后面 BA 改需求就要返工”，但敏捷实践不就要求“较大需求变更本迭代不做，要放到下个迭代的新卡”吗？若真到开卡时大量返工，那是 BA 的错误，与 Dev 无关。</p><p>长此以往，对于 Dev 个人</p><blockquote><p>主观上不能<strong>尽其所能地写代码</strong>，消磨<strong>工作积极性</strong>；客观上白白增加了其做卡的时长，对其本人评价不利。</p></blockquote><h2 id="技术会议一言堂"><a href="#技术会议一言堂" class="headerlink" title="技术会议一言堂"></a>技术会议一言堂</h2><p>M 君离职前提议项目组前端要<strong>统一设计规范</strong>，后端主程便召集大家开会讨论，他提议全面封装出一套项目乃至公司的组件库，如 ——</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tw-button</span><span class="token punctuation">></span></span>  # shadow-root  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vant-button</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tw-button</span><span class="token punctuation">></span></span></code></pre><p>我则补充道：</p><blockquote><p>过于简单的组件不需再封装一层，直接用现有组件库的即可，否则对开发、运行都增加负担。</p></blockquote><p>但双方争执不下，于是<strong>民主投票</strong>，其他人都赞同后端主程。</p><p>几日后正式开发，</p><blockquote><p>S 君突然说：“我们还是每个组件都再封装一层吗？”<br>一个附和道：“没必要了吧？”<br>另一个也点头默许……</p></blockquote><p>对于前文中项目伊始我和 M 君提出的“Saga 样板代码多”问题，S 君后来接触那一块代码时也私下向领导提出同样的疑问。</p><p>如此看来，我和 M 君有时并不是看起来“不好合作”，只是</p><blockquote><p>多数人在众人和领导面前 —— <strong>不敢讲真话</strong>！</p></blockquote><h2 id="Code-review-Code-rejected"><a href="#Code-review-Code-rejected" class="headerlink" title="Code review? Code rejected!"></a>Code review? Code rejected!</h2><p>每天下午的<strong>代码回顾会</strong>的一般步骤是</p><ol><li>该项目的前后端各自预定地点，集体开会</li><li>每人照着 <strong>Git 变更记录</strong>，轮流讲解自己一天所写代码的来龙去脉</li><li>其他人可随时提出意见，经探讨达成一致修改方案后记录在案</li><li>检查前一天的修改方案是否实施</li></ol><p>但这个民主的议程，实际运行得似乎并不太民主 ——</p><ul><li>组长的代码 组员有异议的，若组长不赞同，有时就一笔带过、不予记录</li><li>组员的代码 组长有异议的，即使组长没能<strong>有理有据</strong>地说服组员，组长也会记录在案</li><li>组长对组员一些变量/函数命名等有异议，组员问组长和大家，无人说得出更好的建议，但组长依然要求该组员修改</li><li>对于上述争议问题，组员事后没有修改，便被定性为“不重视 code review”</li></ul><p>可话说回来，既然敏捷开发是代码集体所有制，相持不下之际，谁有异议谁去改就好了，追着组员去改一点都不敏捷……</p><h2 id="沟多通少"><a href="#沟多通少" class="headerlink" title="沟多通少"></a>沟多通少</h2><p>敏捷重视<strong>沟通与反馈</strong>，但实践起来也有不尽如人意的地方 ——</p><table><thead><tr><th align="center">问题</th><th align="center">建议</th></tr></thead><tbody><tr><td align="center">凡事都要开会商量</td><td align="center">能用<strong>简洁代码</strong>、<strong>国际标准</strong>解决的就不开会</td></tr><tr><td align="center">多人多次反复拉通上下文</td><td align="center"><strong>简洁文档</strong>、<strong>自动化办公工具</strong></td></tr><tr><td align="center">大小会议经常严重超时</td><td align="center">有人开始注意力不集中了说明要精简了</td></tr></tbody></table><p>在入职不久后的“反馈文化”培训会上，一位人事小姐姐说：“看似很大的沟通成本，TW 认为这种民主的过程是值得的。”</p><p>但社会上大有人在的“保守派”就是一直揪着<strong>民主的效率</strong>问题为独裁统治辩护、站台的！民主人士必须用<strong>更好的方法论</strong>、<strong>更新的技术手段</strong>去解决 ——</p><blockquote><p>太长不看，太久不听，太繁不做……</p></blockquote><p>但凡有人对上述<strong>繁琐、低效的沟通</strong>表现出一丝不悦，可能就会被同僚视为 —— 态度不好，难以融入团队！</p><p>其实不限于交朋友、谈恋爱，人与人的沟通都可在短短几句话中判断“能否懂得起”。虽说所有问题在充足的时间内都可解决，但与其“你说东，我说西”迟迟不能共识，不如</p><blockquote><p>先尝试做起来，<strong>用事实说话</strong>会更清楚、更高效~</p></blockquote><p>用 Linux 和 Git 之父 Linus Torvalds 的名言就是 ——</p><blockquote><p>Talk is cheap, show me the code!</p></blockquote><p>俗话也说得好 ——</p><blockquote><p>懂得起的人不用解释，懂不起的不必解释~</p></blockquote><h2 id="不敏捷的感受"><a href="#不敏捷的感受" class="headerlink" title="不敏捷的感受"></a>不敏捷的感受</h2><p>如果每个员工都以“按点上下班，卖身领工资”的心态去工作，只要不加班，敏不敏捷、高不高效“与我何干”？才不着急上火呢！悠哉悠哉不好吗？</p><p>但凡希望在日复一日的“搬砖”之余做些<strong>更有意义的事</strong>的人，多半焦躁不堪、疲惫不已。写过代码的都知道，状态差时就是在“写 bug”……</p><p>于是，在第一个正式项目的迭代 1 结束时，M 君再次主动离开，并且是彻底的 —— 离职……</p><p>他走前的一句话我一时不解其意 ——</p><blockquote><p>我之前创业时虽然练就了善于沟通的能力，但我现在很讨厌沟通……</p></blockquote><p>那时前文所述的种种才经历了不到一半，当全部经历后，我才明白 ——</p><blockquote><p>讨厌的不是沟通，而是不必要的低效沟通</p></blockquote><p>在 M 君离职的同时，我和上司有次长谈，其间我提了个问题 ——</p><blockquote><p>ThoughtWorks 有没有可能至少在某个局部，存在一定程度的<strong>表面和谐</strong>？</p></blockquote><p>她坚定地给了我否定的答案……</p>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Agile </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web 与 Chrome 最新进展 @Google I/O 2019</title>
      <link href="/development/web-chrome-update-at-google-io-2019/"/>
      <url>/development/web-chrome-update-at-google-io-2019/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Google I/O 2019 extend 成都站</p></blockquote><hr><h2 id="DOM-与-BOM"><a href="#DOM-与-BOM" class="headerlink" title="DOM 与 BOM"></a>DOM 与 BOM</h2><hr><h3 id="延迟加载"><a href="#延迟加载" class="headerlink" title="延迟加载"></a>延迟加载</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>path/to/image<span class="token punctuation">"</span></span> <span class="token attr-name">loading</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lazy<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>path/to/page<span class="token punctuation">"</span></span> <span class="token attr-name">loading</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lazy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span></code></pre><hr><p><code>loading</code> 属性值</p><ul><li><code>lazy</code> 延迟加载</li><li><code>eager</code> 立即加载</li><li><code>auto</code> 浏览器自主判断加载策略（默认值）</li></ul><hr><ul><li><code>loading</code> 属性是早期提案 <code>lazyload</code> 属性的代替</li><li>将在 Chrome 76 发布</li></ul><hr><h3 id="门户框架"><a href="#门户框架" class="headerlink" title="门户框架"></a>门户框架</h3><h4 id="主页面"><a href="#主页面" class="headerlink" title="主页面"></a>主页面</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>portal</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>path/to/page<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>portal</span><span class="token punctuation">></span></span></code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> portal <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'portal'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>portal  <span class="token punctuation">.</span><span class="token function">activate</span><span class="token punctuation">(</span><span class="token punctuation">{</span> data<span class="token punctuation">:</span> <span class="token punctuation">{</span> key<span class="token punctuation">:</span> <span class="token string">'value'</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> portal<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span> hello<span class="token punctuation">:</span> <span class="token string">'portal'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><h4 id="子页面"><a href="#子页面" class="headerlink" title="子页面"></a>子页面</h4><pre class=" language-javascript"><code class="language-javascript">window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'portalactivate'</span><span class="token punctuation">,</span> event <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// {key: 'value'}</span>  <span class="token keyword">const</span> portal <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">adoptPredecessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 主页面</span>  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>portal<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'message'</span><span class="token punctuation">,</span> event <span class="token operator">=</span><span class="token operator">></span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>    event<span class="token punctuation">.</span>data<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// {hello: 'portal'}</span>    window<span class="token punctuation">.</span>portalHost <span class="token comment" spellcheck="true">// 主页面 window 对象</span>  <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><p><img src="https://web.dev/hands-on-portals/glitch.gif" alt="Portal demo"></p><hr><h3 id="分享网页"><a href="#分享网页" class="headerlink" title="分享网页"></a>分享网页</h3><pre class=" language-javascript"><code class="language-javascript">document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button.share'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">'Hello'</span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> <span class="token string">'World'</span><span class="token punctuation">,</span> url<span class="token punctuation">:</span> <span class="token string">'https://web.dev/'</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>navigator<span class="token punctuation">.</span><span class="token function">canShare</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token keyword">await</span> navigator<span class="token punctuation">.</span><span class="token function">share</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Done!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ul><li>网页由 HTTPS 打开</li><li>Android Chrome 61+</li><li>分享调用在<strong>用户操作回调栈</strong>中发起</li><li><a href="https://github.com/on2-dev/share-api-polyfill" target="_blank" rel="noopener">polyfill</a></li></ul><hr><p>在 PWA 的 <code>manifest.json</code> 中多加一段</p><p>即可成为<strong>分享目标</strong>（Chrome 71+）</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"share_target"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"action"</span><span class="token operator">:</span> <span class="token string">"/path/to/share-target/"</span><span class="token punctuation">,</span>    <span class="token property">"method"</span><span class="token operator">:</span> <span class="token string">"GET"</span><span class="token punctuation">,</span>    <span class="token property">"enctype"</span><span class="token operator">:</span> <span class="token string">"application/x-www-form-urlencoded"</span><span class="token punctuation">,</span>    <span class="token property">"params"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"your_title_key"</span><span class="token punctuation">,</span>      <span class="token property">"text"</span><span class="token operator">:</span> <span class="token string">"your_text_key"</span><span class="token punctuation">,</span>      <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"you_url_key"</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><hr><p><a href="https://web-share.glitch.me/" target="_blank" rel="noopener"><img src="https://developers.google.com/web/updates/images/2018/12/wst-send.png" alt="Share to PWA"></a></p><hr><h3 id="形状检测"><a href="#形状检测" class="headerlink" title="形状检测"></a>形状检测</h3><h4 id="文字"><a href="#文字" class="headerlink" title="文字"></a>文字</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> textDetector <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextDetector</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> texts <span class="token operator">=</span> <span class="token keyword">await</span> textDetector<span class="token punctuation">.</span><span class="token function">detect</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">;</span>texts<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>text <span class="token operator">=</span><span class="token operator">></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><h4 id="条码"><a href="#条码" class="headerlink" title="条码"></a>条码</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> barcodeDetector <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BarcodeDetector</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  formats<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token string">'aztec'</span><span class="token punctuation">,</span>    <span class="token string">'code_128'</span><span class="token punctuation">,</span>    <span class="token string">'code_39'</span><span class="token punctuation">,</span>    <span class="token string">'code_93'</span><span class="token punctuation">,</span>    <span class="token string">'codabar'</span><span class="token punctuation">,</span>    <span class="token string">'data_matrix'</span><span class="token punctuation">,</span>    <span class="token string">'ean_13'</span><span class="token punctuation">,</span>    <span class="token string">'ean_8'</span><span class="token punctuation">,</span>    <span class="token string">'itf'</span><span class="token punctuation">,</span>    <span class="token string">'pdf417'</span><span class="token punctuation">,</span>    <span class="token string">'qr_code'</span><span class="token punctuation">,</span>    <span class="token string">'upc_a'</span><span class="token punctuation">,</span>    <span class="token string">'upc_e'</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> barcodes <span class="token operator">=</span> <span class="token keyword">await</span> barcodeDetector<span class="token punctuation">.</span><span class="token function">detect</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">;</span>barcodes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>barcode <span class="token operator">=</span><span class="token operator">></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>barcode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><h4 id="人脸"><a href="#人脸" class="headerlink" title="人脸"></a>人脸</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> faceDetector <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FaceDetector</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  maxDetectedFaces<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>  fastMode<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> faces <span class="token operator">=</span> <span class="token keyword">await</span> faceDetector<span class="token punctuation">.</span><span class="token function">detect</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">;</span>faces<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>face <span class="token operator">=</span><span class="token operator">></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>face<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><ul><li>Chrome 74+（开启<em>实验性 Web 平台特性</em>标记）</li><li>支持 Web worker</li><li><a href="https://github.com/WICG/shape-detection-api#overview" target="_blank" rel="noopener">各大平台支持</a></li><li><a href="https://perceptiontoolkit.dev/getting-started/" target="_blank" rel="noopener">Web 感知工具包</a></li></ul><hr><h3 id="更多草案-API"><a href="#更多草案-API" class="headerlink" title="更多草案 API"></a>更多草案 API</h3><ul><li><a href="https://github.com/WICG/native-file-system" target="_blank" rel="noopener">文件系统</a></li><li><a href="https://github.com/sso-google/sms-otp-retrieval" target="_blank" rel="noopener">短信验证</a></li></ul><hr><h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><hr><h3 id="同站-Cookie"><a href="#同站-Cookie" class="headerlink" title="同站 Cookie"></a>同站 Cookie</h3><pre><code># 站内跳转带 cookieSet-Cookie: a=1; SameSite=Strict# 跳转到本站带 cookieSet-Cookie: b=2; SameSite=Lax# 不限制 cookieSet-Cookie: c=3; SameSite=None</code></pre><p><a href="https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site-00" target="_blank" rel="noopener">RFC 6265 bis</a></p><hr><p><a href="https://web.dev/samesite-cookies-explained/" target="_blank" rel="noopener"><img src="https://web.dev/samesite-cookies-explained/samesite-none-lax-strict.png"></a></p><hr><h3 id="Web-包协议"><a href="#Web-包协议" class="headerlink" title="Web 包协议"></a>Web 包协议</h3><p><img src="https://lh6.googleusercontent.com/n6lWJFxp7RqGt2HalG6-pHCDlGSUso1EHRGzpWP8CZRQ9jmfn18XwbxtUcaFvA5AwcyygTzp_sUu-UTgukCd8C-BTjpyytfyIpiAWuVD7sSuIlbQjeVqNH4ZbqWaqObfpr6cHw_S"></p><hr><div style="background: white">  <img src="https://developers.google.com/web/updates/images/2018/11/signed-exchanges.svg"></div><hr><h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><hr><h3 id="V8-提速、降费"><a href="#V8-提速、降费" class="headerlink" title="V8 提速、降费"></a>V8 提速、降费</h3><p><img src="https://oscimg.oschina.net/oscnet/20823b97896a3ff102da2e47223b4659e7a.jpg"></p><hr><p><img src="https://oscimg.oschina.net/oscnet/935cbd4dc8bff380d632898aef0d2e22068.jpg"></p><hr><p><img src="https://oscimg.oschina.net/oscnet/1d86e81a249205922d7881a8356a04f0a1f.jpg"></p><hr><h3 id="原生类型增强"><a href="#原生类型增强" class="headerlink" title="原生类型增强"></a>原生类型增强</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> integer <span class="token operator">=</span> 14_0000_0000<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 1400000000</span><span class="token keyword">const</span> bigInt <span class="token operator">=</span> <span class="token function">BigInt</span><span class="token punctuation">(</span>Number<span class="token punctuation">.</span>MAX_SAFE_INTEGER<span class="token punctuation">)</span> <span class="token operator">+</span> 1n<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 9007199254740992n</span><span class="token punctuation">[</span>  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// [1, 2, 3, 4]</span>Object<span class="token punctuation">.</span><span class="token function">fromEntries</span><span class="token punctuation">(</span><span class="token punctuation">[</span>  <span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">[</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// {a: 1, b: 2}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token string">'FCC成都社区,FCC中文社区'</span><span class="token punctuation">.</span><span class="token function">matchAll</span><span class="token punctuation">(</span><span class="token regex">/\w+([^,]+)/g</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//  ['FCC成都社区', '成都社区']  ['FCC中文社区', '中文社区']</span></code></pre><hr><h3 id="统一全局对象"><a href="#统一全局对象" class="headerlink" title="统一全局对象"></a>统一全局对象</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> globalThis <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 浏览器主线程</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> window <span class="token operator">!==</span> <span class="token string">'undefined'</span><span class="token punctuation">)</span> <span class="token keyword">return</span> window<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// Web worker 线程</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> self <span class="token operator">!==</span> <span class="token string">'undefined'</span><span class="token punctuation">)</span> <span class="token keyword">return</span> self<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// Node.JS</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> global <span class="token operator">!==</span> <span class="token string">'undefined'</span><span class="token punctuation">)</span> <span class="token keyword">return</span> global<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 其它运行时的非严格模式</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">this</span> <span class="token operator">!==</span> <span class="token string">'undefined'</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ul><li>Stage-3</li><li>Chrome 71、Firefox 65、Safari 12.1</li></ul><hr><h3 id="国际化-API"><a href="#国际化-API" class="headerlink" title="国际化 API"></a>国际化 API</h3><h4 id="相对时间"><a href="#相对时间" class="headerlink" title="相对时间"></a>相对时间</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> formatter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intl<span class="token punctuation">.</span>RelativeTimeFormat</span><span class="token punctuation">(</span><span class="token string">'zh-CN'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>formatter<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'day'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 1天前</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>formatter<span class="token punctuation">.</span><span class="token function">formatToParts</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'day'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*[    {        "type": "integer",        "value": "1",        "unit": "day"    },    {        "type": "literal",        "value": "天前"    }]*/</span></code></pre><ul><li>Stage-3</li><li>Chrome 71、Firefox 65</li></ul><hr><h4 id="短语列表"><a href="#短语列表" class="headerlink" title="短语列表"></a>短语列表</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> and <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intl<span class="token punctuation">.</span>ListFormat</span><span class="token punctuation">(</span><span class="token string">'zh-CN'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> type<span class="token punctuation">:</span> <span class="token string">'conjunction'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  or <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intl<span class="token punctuation">.</span>ListFormat</span><span class="token punctuation">(</span><span class="token string">'zh-CN'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> type<span class="token punctuation">:</span> <span class="token string">'disjunction'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'GDG'</span><span class="token punctuation">,</span> <span class="token string">'FCC'</span><span class="token punctuation">,</span> <span class="token string">'ThoughtWorks'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>  and<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 'GDG、FCC和ThoughtWorks'</span>  or<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 'GDG、FCC或ThoughtWorks'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ul><li>Stage-3</li><li>Chrome 72、Opera 60</li></ul><hr><h3 id="Promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h3><h4 id="allSettled"><a href="#allSettled" class="headerlink" title=".allSettled()"></a>.allSettled()</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">allSettled</span><span class="token punctuation">(</span><span class="token punctuation">[</span>  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://fcc-cd.dev/'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://google.com/'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 没有科学上网</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'所有请求已响应，部分可能失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="any"><a href="#any" class="headerlink" title=".any()"></a>.any()</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> fastest <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">[</span>  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://cdn.jsdelivr.net/npm/web-cell/dist/web-cell.min.js'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://unpkg.com/web-cell/dist/web-cell.min.js'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fastest<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><h3 id="类实例成员"><a href="#类实例成员" class="headerlink" title="类实例成员"></a>类实例成员</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">Example</span> <span class="token punctuation">{</span>  publicField <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  #privateField <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>  publicMethod <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>publicField<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 1</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>#privateField <span class="token comment" spellcheck="true">// 2</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><ul><li>Stage-3</li><li>Babel 7</li><li>Node 12</li><li>Chrome 72 / V8 7.2（公开成员）</li><li>Chrome 74 / V8 7.4（私有成员）</li></ul><hr><h3 id="垃圾回收-API"><a href="#垃圾回收-API" class="headerlink" title="垃圾回收 API"></a>垃圾回收 API</h3><h4 id="提案来源"><a href="#提案来源" class="headerlink" title="提案来源"></a>提案来源</h4><ul><li>Python 2.1+ 标准库 weakref 模块<ul><li><a href="https://www.atjiang.com/Python2Lib-ds-weakref/" target="_blank" rel="noopener">https://www.atjiang.com/Python2Lib-ds-weakref/</a></li><li><a href="https://learnku.com/docs/pymotw/weakref-a-weak-reference-to-an-object/3372" target="_blank" rel="noopener">https://learnku.com/docs/pymotw/weakref-a-weak-reference-to-an-object/3372</a></li></ul></li><li><a href="https://blogs.oracle.com/sundararajan/weak-references-in-javascript" target="_blank" rel="noopener">JS Rhino 引擎可借用 Java WeakReference 类</a></li><li><a href="https://zhuanlan.kanxue.com/article-4277.htm" target="_blank" rel="noopener">动态检测工具 Frida 的 JS API</a></li></ul><hr><h4 id="WeakRef"><a href="#WeakRef" class="headerlink" title="WeakRef"></a>WeakRef</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> URI <span class="token operator">=</span> <span class="token string">'path/to/file'</span><span class="token punctuation">;</span><span class="token keyword">const</span> file <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>URI<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">blob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> ref <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakRef</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">,</span>  cache <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>cache<span class="token punctuation">[</span>URI<span class="token punctuation">]</span> <span class="token operator">=</span> ref<span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ref<span class="token punctuation">.</span><span class="token function">deref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// Blob {}</span></code></pre><h4 id="FinalizationGroup"><a href="#FinalizationGroup" class="headerlink" title="FinalizationGroup"></a>FinalizationGroup</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> cleaner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FinalizationGroup</span><span class="token punctuation">(</span>iterator <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> URI <span class="token keyword">of</span> iterator<span class="token punctuation">)</span> <span class="token keyword">delete</span> cache<span class="token punctuation">[</span>URI<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cleaner<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> URI<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><h2 id="Google"><a href="#Google" class="headerlink" title="Google"></a>Google</h2><hr><h3 id="Search-How-to"><a href="#Search-How-to" class="headerlink" title="Search How to"></a>Search How to</h3><p><img src="https://developers.google.com/search/docs/data-types/images/howto-example2.png"></p><hr><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"@context"</span><span class="token operator">:</span> <span class="token string">"http://schema.org"</span><span class="token punctuation">,</span>  <span class="token property">"@type"</span><span class="token operator">:</span> <span class="token string">"HowTo"</span><span class="token punctuation">,</span>  <span class="token property">"image"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"@type"</span><span class="token operator">:</span> <span class="token string">"ImageObject"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://example.com/1x1/photo.jpg"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"How to tie a tie"</span><span class="token punctuation">,</span>  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"..."</span><span class="token punctuation">,</span>  <span class="token property">"totalTime"</span><span class="token operator">:</span> <span class="token string">"PT2M"</span><span class="token punctuation">,</span>  <span class="token property">"video"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"@type"</span><span class="token operator">:</span> <span class="token string">"VideoObject"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Tie a Tie"</span><span class="token punctuation">,</span>    <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"..."</span><span class="token punctuation">,</span>    <span class="token property">"thumbnailUrl"</span><span class="token operator">:</span> <span class="token string">"https://example.com/photos/photo.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"contentUrl"</span><span class="token operator">:</span> <span class="token string">"http://www.example.com/videos/123_600x400.mp4"</span><span class="token punctuation">,</span>    <span class="token property">"embedUrl"</span><span class="token operator">:</span> <span class="token string">"http://www.example.com/videoplayer?id=123"</span><span class="token punctuation">,</span>    <span class="token property">"uploadDate"</span><span class="token operator">:</span> <span class="token string">"2019-01-05T08:00:00+08:00"</span><span class="token punctuation">,</span>    <span class="token property">"duration"</span><span class="token operator">:</span> <span class="token string">"P1MT10S"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"supply"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>      <span class="token property">"@type"</span><span class="token operator">:</span> <span class="token string">"HowToSupply"</span><span class="token punctuation">,</span>      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"A tie"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      <span class="token property">"@type"</span><span class="token operator">:</span> <span class="token string">"HowToSupply"</span><span class="token punctuation">,</span>      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"A collared shirt"</span>    <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"tool"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>      <span class="token property">"@type"</span><span class="token operator">:</span> <span class="token string">"HowToTool"</span><span class="token punctuation">,</span>      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"A mirror"</span>    <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"step"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>      <span class="token property">"@type"</span><span class="token operator">:</span> <span class="token string">"HowToStep"</span><span class="token punctuation">,</span>      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Preparations"</span><span class="token punctuation">,</span>      <span class="token property">"text"</span><span class="token operator">:</span> <span class="token string">"..."</span><span class="token punctuation">,</span>      <span class="token property">"image"</span><span class="token operator">:</span> <span class="token string">"https://example.com/1x1/step1.jpg"</span><span class="token punctuation">,</span>      <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://example.com/tie#step1"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      <span class="token property">"@type"</span><span class="token operator">:</span> <span class="token string">"HowToStep"</span><span class="token punctuation">,</span>      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Crossing once"</span><span class="token punctuation">,</span>      <span class="token property">"text"</span><span class="token operator">:</span> <span class="token string">"..."</span><span class="token punctuation">,</span>      <span class="token property">"image"</span><span class="token operator">:</span> <span class="token string">"https://example.com/1x1/step2.jpg"</span><span class="token punctuation">,</span>      <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://example.com/tie#step2"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      <span class="token property">"@type"</span><span class="token operator">:</span> <span class="token string">"HowToStep"</span><span class="token punctuation">,</span>      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Second crossing"</span><span class="token punctuation">,</span>      <span class="token property">"text"</span><span class="token operator">:</span> <span class="token string">"..."</span><span class="token punctuation">,</span>      <span class="token property">"image"</span><span class="token operator">:</span> <span class="token string">"https://example.com/1x1/step3.jpg"</span><span class="token punctuation">,</span>      <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://example.com/tie#step3"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      <span class="token property">"@type"</span><span class="token operator">:</span> <span class="token string">"HowToStep"</span><span class="token punctuation">,</span>      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Loop in"</span><span class="token punctuation">,</span>      <span class="token property">"text"</span><span class="token operator">:</span> <span class="token string">"..."</span><span class="token punctuation">,</span>      <span class="token property">"image"</span><span class="token operator">:</span> <span class="token string">"https://example.com/1x1/step4.jpg"</span><span class="token punctuation">,</span>      <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://example.com/tie#step4"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      <span class="token property">"@type"</span><span class="token operator">:</span> <span class="token string">"HowToStep"</span><span class="token punctuation">,</span>      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Pull and tighten"</span><span class="token punctuation">,</span>      <span class="token property">"text"</span><span class="token operator">:</span> <span class="token string">"..."</span><span class="token punctuation">,</span>      <span class="token property">"image"</span><span class="token operator">:</span> <span class="token string">"https://example.com/1x1/step5.jpg"</span><span class="token punctuation">,</span>      <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://example.com/tie#step5"</span>    <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><hr><h4 id="结构化元数据"><a href="#结构化元数据" class="headerlink" title="结构化元数据"></a>结构化元数据</h4><ul><li><a href="https://schema.org/" target="_blank" rel="noopener">Schema.org</a></li><li><a href="https://developers.google.com/search/docs/guides/search-gallery" target="_blank" rel="noopener">Google 搜索优化应用</a></li></ul><hr><h3 id="Material-Design-夜间模式"><a href="#Material-Design-夜间模式" class="headerlink" title="Material Design 夜间模式"></a>Material Design 夜间模式</h3><p><a href="https://material.io/design/color/dark-theme.html" target="_blank" rel="noopener"><img src="https://storage.googleapis.com/spec-host-backup/mio-design%2Fassets%2F1Eb0bcqf3yyrabY8JLOrfC9zq_nN8wCu9%2Fdarktheme-overview.png"></a></p><hr><h2 id="性感谷歌，在线教学"><a href="#性感谷歌，在线教学" class="headerlink" title="性感谷歌，在线教学"></a>性感谷歌，在线教学</h2><p><a href="https://web.dev/" target="_blank" rel="noopener">https://web.dev/</a></p><p><a href="https://developers.google.cn/web/" target="_blank" rel="noopener">https://developers.google.cn/web/</a></p><p><a href="https://events.google.com/io/codelabs/" target="_blank" rel="noopener">https://events.google.com/io/codelabs/</a></p><p><a href="https://codelabs.developers.google.com/?cat=Web" target="_blank" rel="noopener">https://codelabs.developers.google.com/?cat=Web</a></p><hr><h2 id="关注-freeCodeCamp-成都社区"><a href="#关注-freeCodeCamp-成都社区" class="headerlink" title="关注 freeCodeCamp 成都社区"></a>关注 freeCodeCamp 成都社区</h2><p><a href="https://fcc-cd.dev/" target="_blank" rel="noopener">https://fcc-cd.dev/</a></p><p><img src="/image/FCC-CDC-QRC.png"></p>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> Chrome </tag>
            
            <tag> Google </tag>
            
            <tag> lecture </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FCC DevTalk - 水歌</title>
      <link href="/community/fcc-devtalk-techquery/"/>
      <url>/community/fcc-devtalk-techquery/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://www.freecodecamp.one/" target="_blank" rel="noopener">freeCodeCamp 中文社区</a>创始人 Miya 对我的采访</p></blockquote><img src="/community/fcc-devtalk-techquery/TechQuery-WebCell-cap.jpg" class=""><h2 id="1-简要介绍一下自己吧。"><a href="#1-简要介绍一下自己吧。" class="headerlink" title="1. 简要介绍一下自己吧。"></a>1. 简要介绍一下自己吧。</h2><p>艺名<strong>水歌</strong>、网名 TechQuery，<strong>Web/JavaScript 全栈开发者</strong>，是多个国内外开源软件项目的作者、贡献者。现为 <a href="https://fcc-cd.dev/" target="_blank" rel="noopener">freeCodeCamp 成都社区</a>第四任负责人，也在<a href="http://www.kaiyuanshe.cn/" target="_blank" rel="noopener">开源社</a>基础设施组和 <a href="https://www.thoughtworks.com/cn/" target="_blank" rel="noopener">ThoughtWorks</a> 公司工作。2018 年也终于成为小时候仰视的<a href="https://mvp.microsoft.com/" target="_blank" rel="noopener">微软最有价值专家</a>（开发者技术类）。</p><h2 id="2-你是什么时候开始接触电脑，什么时候开始写代码的？"><a href="#2-你是什么时候开始接触电脑，什么时候开始写代码的？" class="headerlink" title="2. 你是什么时候开始接触电脑，什么时候开始写代码的？"></a>2. 你是什么时候开始接触电脑，什么时候开始写代码的？</h2><p>小学二年级暑假，老爸给我报了个电脑学习班，从 MS-DOS、Windows 95 开始学，就打开了新世界的大门。正巧学习班租用的是本地新华书店的写字楼，从那时起就养成了课后找书看着学的习惯。</p><p>至于写代码，虽然小学三年级开始的计算机课有教 Logo 语言（小图龟），初一每周的兴趣课也有 VB 6 编程，但在当时惧怕数学、英语的我看来，都是抱着书催眠的东西…… 直到大一上 C 语言专业课也没自己写过实用程序。最早上手编程还是因为在大学 IT 社团为同学、老师修电脑太多，发现命令行脚本可以大大提高机械重复工作的效率。</p><h2 id="3-水歌这个称呼是怎么来的？"><a href="#3-水歌这个称呼是怎么来的？" class="headerlink" title="3. 水歌这个称呼是怎么来的？"></a>3. 水歌这个称呼是怎么来的？</h2><p>因为在大学社团里一遇到技术、公益活动的话题就滔滔不绝，那时流行“论坛灌水”的说法，学长就叫我“水哥”…… 我一开始是拒绝的，听起来很“水”，可叫多了就“真香”了，后来又被“伪文艺”的我改成“水歌”~</p><h2 id="4、你在大学阶段最难忘的经历是什么？"><a href="#4、你在大学阶段最难忘的经历是什么？" class="headerlink" title="4、你在大学阶段最难忘的经历是什么？"></a>4、你在大学阶段最难忘的经历是什么？</h2><blockquote><p>我的大学 ≈ 图书馆看书写代码 + 做公益 IT 社团</p></blockquote><p>（这两点是我今天对 IT、编程、开源、社区有所思考、有所建树的基石）</p><p>虽然高中合伙建过社团，但因为校史上从未有过 IT 社团，基本是自己摸索着做，换届半年后还让学弟给解散了，自觉很不成功…… 当来到川大，遇见<strong>飞扬俱乐部</strong>这个白手起家、日臻完善的<strong>公益 IT 社团</strong>，便毫不犹豫地投身进去。</p><p>虽然我加入时飞扬已 5 岁，但却正处在从第一次危机中爬出来的过程 —— 技术员水平青黄不接，我们上一届卸任前还出了<strong>大型电脑维修活动</strong>现场丢了一台联想奥运纪念版笔记本的重大事故。但也是从那时起，我提出的“现场桌椅围合式布局”、设计的《电脑维修服务记录单》和起草的《电脑维修技术员考核大纲》成了飞扬至今的标配。</p><p>本届团队上任前的<strong>改革研讨会</strong>上，我提出的“软件、网络两部合并为研发部”方案被采纳，并成为创始团队成员，开始跟着代码大神学艺。但前期还主要在带其他维修师傅带不过来的“可怜”徒弟，在实践中审校《电脑维修技术员培训教材》、开发<strong>软件维修工具</strong>，在研发部只担纲“产品经理”和官网副站长，并无独立编码能力，直到大三大四筹划创业也打算做个懂技术的产品经理。</p><p>而随着<a href="https://www.fyscu.com/" target="_blank" rel="noopener">飞扬官网</a>建设的深入，我自己也发起了<a href="https://wiki.fyscu.com/" target="_blank" rel="noopener">【川大百科】</a>和<a href="https://mag.fyscu.com/" target="_blank" rel="noopener">《i 飞扬》杂志在线版</a>，本想<strong>给学弟学妹锻炼代码能力</strong>的工作长期无人问津，一气之下就现学现卖，开始成为<strong>真正的程序员</strong>了。其后 Windows 注册表分析器、校园宽带路由拨号器、百科数据迁移工具、在线杂志框架等作品相继出炉，它们也成为我后来霸面多家公司拿到多个前端 offer 的敲门砖。</p><h2 id="5-大学毕业后，你的第一份工作是采购业务专员？"><a href="#5-大学毕业后，你的第一份工作是采购业务专员？" class="headerlink" title="5. 大学毕业后，你的第一份工作是采购业务专员？"></a>5. 大学毕业后，你的第一份工作是采购业务专员？</h2><p>家庭原因让我对书店有种特殊的情感，<strong>台湾诚品</strong>、<strong>贵阳西西弗</strong>等<strong>民营独立书店</strong>兴起后令我眼前一亮，对比国营古板的新华书店，觉得这才是“一个城市的精神家园”该有的样子！看了<a href="https://book.douban.com/subject/6429287/" target="_blank" rel="noopener">《独立书店，你好！》</a>之后，还曾走街串巷寻访成都的独立书店，所以当初就抱着“每天上班沐浴在油墨清香中”的想法去了一家成都本土的连锁书店。</p><p>但近一年的工作让我发现，中国的图书发行行业无论是否国营，状态都相差不大，对绝大多数从业者而言只是生意，我用一张公式不多 Excel 自动表格和一个按键脚本把每天 3 小时的人工压缩成半小时程序运行，已经是大家眼中的“大神”了……</p><img src="/community/fcc-devtalk-techquery/TechQuery-Coffee.jpg" class=""><h2 id="6-你是-JavaScript-全栈开发者，为什么选择这门语言？对于想学编程或者初入门编程的小伙伴，你有什么建议呢？"><a href="#6-你是-JavaScript-全栈开发者，为什么选择这门语言？对于想学编程或者初入门编程的小伙伴，你有什么建议呢？" class="headerlink" title="6. 你是 JavaScript 全栈开发者，为什么选择这门语言？对于想学编程或者初入门编程的小伙伴，你有什么建议呢？"></a>6. 你是 JavaScript 全栈开发者，为什么选择这门语言？对于想学编程或者初入门编程的小伙伴，你有什么建议呢？</h2><p>我与 JavaScript 结缘也是好事多磨。</p><p>高中从电脑杂志上知道 JS 时 jQuery 刚刚发布，那时的主流舆论还是鄙视它的，把各种历史遗留问题和非语言标准的 IE bug 放大来写文章，把它渲染成一个充满 bug 的语言…… 那时，我还是看到文字多的 IT 书籍就退避三舍，没有任何实践，也就没有任何求证，就“人云亦云”了…… 现在真想对当年那些文章作者说：“报道出了偏差，你们可是要负责的！”</p><p>后来在大学社团开发<strong>电脑装机自动化脚本</strong>，因为 Windows 的 DOS 批处理功能羸弱，微软常用的 VBS 语法太丑，新系统力推的 .Net PowerShell 性能、兼容性差，曾仰慕的新手神器 Python 也发展得很庞杂了，微软系统自带的 JS 方言 JScript 就成了首选。毕竟我们这一代大学生都是<a href="https://book.douban.com/subject/1679623/" target="_blank" rel="noopener">谭浩强“绿宝书”</a>养大的，“弱类型的类 C 脚本”写起来很舒服~</p><p>但我从“懂你”这个层面真正爱上 JS，还是 2015 年劳动节在家仿写 jQuery 开始的，后来这个项目也成为我第一个成熟的开源项目 <a href="https://tech-query.me/iQuery.js/">iQuery.js</a>。</p><blockquote><p>JavaScript (ECMAScript 5) 是一门原生支持<strong>函数式编程范式</strong>的、基于<strong>原型</strong>的面向对象语言。</p></blockquote><p>在深入的实践中理解了一门语言的精髓，便会发出由衷的感叹 ——</p><blockquote><p>一个函数、一个对象就能千变万化，简洁得恰到好处、强大到无以复加！</p></blockquote><p>所以总的来说 ——</p><blockquote><p><strong>实践求真</strong>、<strong>学以致用</strong>是学好编程的要诀之一</p></blockquote><img src="/community/fcc-devtalk-techquery/TechQuery-Code4City.jpg" class=""><h2 id="7-你参与了很多开源项目，其中哪些经历让你觉得特别有成就感？"><a href="#7-你参与了很多开源项目，其中哪些经历让你觉得特别有成就感？" class="headerlink" title="7. 你参与了很多开源项目，其中哪些经历让你觉得特别有成就感？"></a>7. 你参与了很多开源项目，其中哪些经历让你觉得特别有成就感？</h2><p>高一从堂哥那儿知道了 Ubuntu，为我开启了<strong>开源世界</strong>的大门。早期只是国内外 Linux 发行版的小白用户，平时的技术钻研还主要是 Ghost XP。但也正是对当年四大系统论坛之一的 Deepin 技术理念的认同与关注，让我在它转型 Linux 的伊始就有所参与。至今还记得 <a href="https://www.deepin.org/" target="_blank" rel="noopener">Deepin Linux</a> 第一版发布后连夜安装体验，激动地给联合创始人 hiweed（冷罡华）写建议邮件。在之后的几个版本也给当时的核心开发之一写过 bug、改进汇总文章。如今，Deepin 不但成为<strong>最好的中文 Linux 发行版</strong>，而且也在国际上名列前茅！</p><p>只提提改进建议总觉得自己还没真正参与进去，把自己积累的零散代码放在 GitHub 上也只是自娱自乐。终于在写开源代码 2 年后，2016 年从圣诞节前到来年春节后的两个月，我对 <code>jQuery.prototype.contents()</code> 方法支持 HTML 5 <code>&lt;template /&gt;</code> 标签的补丁，在外国前辈耐心指导下历经 8 次修改终于发布在 <a href="https://github.com/jquery/jquery/commit/74faa95835a917028a5063786833cb6a4ec83b02" target="_blank" rel="noopener">jQuery 3.2.0</a>！第一次在亿万人每天使用的国际开源项目中留下自己的名字，别提多美了，哈哈！</p><p>当然，最让我有成就感的肯定是，有朝一日我自己开发的 <strong>Web Components 框架</strong> <a href="https://web-cell.dev/" target="_blank" rel="noopener">WebCell</a> 能步 Vue.js 之父尤雨溪的后尘，走出成都、走向世界啦！</p><img src="/community/fcc-devtalk-techquery/TechQuery-WebCell-show.jpg" class=""><h2 id="8-你觉得国内有哪些不错的开源项目？"><a href="#8-你觉得国内有哪些不错的开源项目？" class="headerlink" title="8. 你觉得国内有哪些不错的开源项目？"></a>8. 你觉得国内有哪些不错的开源项目？</h2><p>与开源结缘的 14 年，我见过、用过太多国人开发的优秀开源软件，在此只列举还在活跃开发、受众甚广的各领域典型代表 ——</p><ul><li>硬件级：Grub4DOS，系统启动神器</li><li>系统级：Deepin，最好的中文 Linux 桌面系统</li><li>软件引擎：NW.js、Electron，国人创始、全球社区</li><li>应用软件：Notepad++，Windows 上最强大的文本编辑器，台湾同胞力作</li><li>Web 引擎：Vue.js，个人品牌经营最成功的国人开源项目</li><li>Web 应用：Hexo，生态完善的静态内容网站生成器，台湾同胞力作</li></ul><h2 id="9-你在高中阶段就创建社团，大学期间是川大技术社团的骨干之一，如今是-freeCodeCamp-成都社区的第四任-leader，同时你还在其他技术社区中承担角色，你觉得应该如何运营一个技术社区呢？"><a href="#9-你在高中阶段就创建社团，大学期间是川大技术社团的骨干之一，如今是-freeCodeCamp-成都社区的第四任-leader，同时你还在其他技术社区中承担角色，你觉得应该如何运营一个技术社区呢？" class="headerlink" title="9. 你在高中阶段就创建社团，大学期间是川大技术社团的骨干之一，如今是 freeCodeCamp 成都社区的第四任 leader，同时你还在其他技术社区中承担角色，你觉得应该如何运营一个技术社区呢？"></a>9. 你在高中阶段就创建社团，大学期间是川大技术社团的骨干之一，如今是 freeCodeCamp 成都社区的第四任 leader，同时你还在其他技术社区中承担角色，你觉得应该如何运营一个技术社区呢？</h2><p>大二刚做维修技术师傅时，还像大一新生那样冲在干活儿的第一线，忙得顾不来自己的徒弟，一个徒弟就向社长反映，社长和我说了句 —— <strong>社团每项工作不是让 100% 胜任它的人去做得完美，而应该让还不够格、但可以努力一下做到的人去锻炼</strong>。从此我开始转变为<strong>导师</strong>的角色，<strong>事先规划</strong>、<strong>过程指导</strong>、<strong>事后复盘</strong>，4 年下来荣获“最受欢迎技术师傅”荣誉，但<strong>三个和尚</strong>问题还是屡见不鲜。</p><p>离开大学校园来到 FCC 成都社区，第二任 leader 姜姜也刚上任，虽然她上学时没有社团经验，但兼职打工时<strong>敢闯敢干的拼劲儿</strong>让她能把我提议“半月一次小活动”的方案贯彻执行，<strong>女生天生的亲和力</strong>也让她能不断认识、邀请各路大神来做讲师。也正是因为成都社区的人脉扩大，让我们遇见了后来的第三任 leader 青松。</p><p>青松与姜姜一见面就说“我想个人出资办个成都前端大会”，与我和姜姜在那一年前的打算不谋而合！而且他不但有想法，也已经做了一些功课，再加上<strong>超强的执行力</strong>，竟带领大家一个月就办成了首届<a href="https://web-conf.dev/" target="_blank" rel="noopener">成都 Web 前端大会</a>！从此大家对他十分佩服，也在换届时众望所归地高票接过姜姜的重担。刚上任就把原定中型活动的 React 技术交流会做成爆款大会，开创了<strong>技术大会整合技术招聘</strong>的新模式。接下来又多次与美团合办中型技术活动，也把我之前<strong>走进名企</strong>的想法做成系列活动，最后在第二届成都前端大会上支持我把<a href="https://web-conf.dev/#2018/" target="_blank" rel="noopener">开源市集</a>实验落地。</p><p>姜姜为成都社区招募了不止青松一员大将，还有主办 <a href="https://git-dev.tk/" target="_blank" rel="noopener">Code for City 黑客松</a>的 AK、带 FCC 进校园的书香、技术才女 Helen、设计小生波波、设计才女佳琦、文采飞扬的民成、社工经验丰富的小山、创立技术周刊的倩玉和小白、摄影大牛南宾…… FCC 成都社区在两年内一跃成为<strong>成都著名、辐射西南、全国知名的城市技术社区</strong>，离不开这些<strong>被发掘出的人才各显神通</strong>！</p><p>加上在 FCC 的两年半，我也做了十多年<strong>公益技术社团</strong>，自认为还没达到心中的“成功”，因为比起领工资的商业公司，公益组织要面临更严峻的<strong>人的积极性</strong>和<strong>工作传承性</strong>问题，对此我一直想不出一个满意的答案。</p><p>但在 2019 年春节前后用 <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a> 给开源社和 FCC 成都社区做新官网时，摸索出一套基于 <strong>GitHub 工作流</strong>的<a href="https://fcc-cd.dev/profile/guide/slide.html" target="_blank" rel="noopener">技术社区运营法</a>，把一个技术社区转化为一个<strong>开源文档项目</strong>，现正在 FCC 成都社区实验。</p><img src="/community/fcc-devtalk-techquery/NGO-activity.png" class=""><h2 id="10、你今年有哪些计划呢？"><a href="#10、你今年有哪些计划呢？" class="headerlink" title="10、你今年有哪些计划呢？"></a>10、你今年有哪些计划呢？</h2><p>今年有幸加入 ThoughtWorks，希望能在“敏捷软件运动”发祥地之一的公司学习、锻炼团队工作能力，也向公司中的技术社区同仁取经，给我自己的开源项目和技术社区的运营带来一些启发与助益。</p><p>同时，也期待我新创的“开源办社区”模式在我和 FCC 成都社区的小伙伴共同努力下，能有效地运作起来，造福更多人！</p><p>至于自己的业余生活嘛，希望去年给自己挖的文体爱好大坑可以填上一些，哈哈~</p><h2 id="11、对于最近在-GitHub-上关注度蛮高的-996-ICU，你怎么看？"><a href="#11、对于最近在-GitHub-上关注度蛮高的-996-ICU，你怎么看？" class="headerlink" title="11、对于最近在 GitHub 上关注度蛮高的 996.ICU，你怎么看？"></a>11、对于最近在 GitHub 上关注度蛮高的 996.ICU，你怎么看？</h2><p>改革开放 40 年来，年轻人终于学会了<strong>理性的抗争</strong>。感谢<strong>互联网</strong>！感谢<strong>万维网</strong>！！感谢<strong>开源运动</strong>！！！</p><h2 id="12-你最喜欢哪部电影？"><a href="#12-你最喜欢哪部电影？" class="headerlink" title="12. 你最喜欢哪部电影？"></a>12. 你最喜欢哪部电影？</h2><p>作为一个“伪文艺”，我最不会回答“哪部作品最好”一类的问题了…… 问我“世界上最好的编程语言”我倒是能斩钉截铁 —— JavaScript！哈哈~</p><p>其实即使我是“真文艺”也难以回答，不同类型片的镜头语言相差很大，就像各地美食一样，各有各的美味，还是看<a href="https://movie.douban.com/people/TechQuery/" target="_blank" rel="noopener">水歌版【豆瓣年度电影榜单】</a>吧，哈哈~</p>]]></content>
      
      
      <categories>
          
          <category> Community </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FCC </tag>
            
            <tag> interview </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>田窗里面开道场</title>
      <link href="/development/docker-in-windows/"/>
      <url>/development/docker-in-windows/</url>
      
        <content type="html"><![CDATA[<p>每次大家一谈起 Docker，Windows 总能成为“黑点”，也不知道那些“果珍”哪来的自信……</p><p>别跟我说“不好装”！老子抄起 PowerShell 就是一把梭！<strong>Docker 核心、命令行、Compose、kubectl、图形界面客户端</strong>一条命令搞定！</p><pre class=" language-powershell"><code class="language-powershell">choco install docker<span class="token operator">-</span>desktop docker<span class="token operator">-</span>kitematic</code></pre><p>上述不适用于 Win 10 家庭版、Win 7/8 又怎么了？官方也支持老系统啊~</p><pre class=" language-powershell"><code class="language-powershell">choco install docker<span class="token operator">-</span>toolbox <span class="token operator">-</span>ia \    <span class="token operator">/</span>COMPONENTS=<span class="token string">"kitematic,virtualbox,dockercompose"</span> \    <span class="token operator">/</span>TASKS=<span class="token string">"desktopicon,modifypath,upgradevm"</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Chocolatey </tag>
            
            <tag> one-key </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 驱动的百科网站</title>
      <link href="/development/wiki-on-git/"/>
      <url>/development/wiki-on-git/</url>
      
        <content type="html"><![CDATA[<h2 id="NPM-一把梭"><a href="#NPM-一把梭" class="headerlink" title="NPM 一把梭"></a>NPM 一把梭</h2><p>经过<a href="https://git-pager.leanapp.cn/development/hello-hexo-travis/" target="_blank" rel="noopener">《Hello Hexo &amp; Travis !》</a>的折腾，觉得 Hexo + GitHub Pages + Travis 整下来还是不够<a href="https://git-pager.leanapp.cn/tags/one-key/" target="_blank" rel="noopener">一键化</a>，于是基于 <a href="https://www.npmjs.com/package/create-web-cell" target="_blank" rel="noopener">WebCell 项目生成器</a>的成功经验又开发了一个 <strong>Hexo Wiki 网站生成器</strong> ——</p><blockquote><p><a href="https://tech-query.me/create-hexo-wiki/">https://tech-query.me/create-hexo-wiki/</a></p></blockquote><p>除了一些必要的云服务配置，本机<strong>安装命令</strong>就一条 ——</p><pre class=" language-shell"><code class="language-shell">npm init hexo-wiki repo_name \    --theme name \    --plugins one,two \    --remote https://github.com/your_id/repo_name.git</code></pre><p>（若电脑访问国外网站比较慢，你可以先去喝个咖啡、吃个甜点）</p><h2 id="以维基的名义"><a href="#以维基的名义" class="headerlink" title="以维基的名义"></a>以维基的名义</h2><p>Hexo 作为通用的<strong>内容型网站</strong>生成器，可广泛用于博客、新闻、维基等类型的网站，为何我要把这个生成器以 Wiki 命名呢？</p><p>因为信仰 ——</p><table><thead><tr><th align="center">类型</th><th align="center">时代</th><th align="center">内容</th><th align="center">交互形式</th></tr></thead><tbody><tr><td align="center">新闻门户</td><td align="center">Web 1.0</td><td align="center">政客、商人喉舌，缺乏知识</td><td align="center">他发，你看，评论严重受限</td></tr><tr><td align="center">个人博客</td><td align="center">Web 2.0</td><td align="center">个人心得、情绪，知识性弱</td><td align="center">他发，你看，评论相对自由</td></tr><tr><td align="center">维基百科</td><td align="center">Web 3.0</td><td align="center">公共知识、历史，链接丰富</td><td align="center">民写，民读，评论完全自由</td></tr></tbody></table><p>时代越发展，Web 就越接近 <a href="https://zh.wikipedia.org/wiki/%E4%B8%87%E7%BB%B4%E7%BD%91" target="_blank" rel="noopener">Tim Lee 大神</a>发明 <a href="https://web.archive.org/web/20150307081711/http://wiki.fyscu.com:80/Wiki/%E9%A6%96%E9%A1%B5" target="_blank" rel="noopener">WWW（万维网）</a>的初衷 ——</p><blockquote><p>数据<strong>互联</strong>，人人<strong>平等</strong></p></blockquote><p>只有<strong>承载知识的文档</strong>之间建立更多的链接，知识才更成体系；只有人人拥有<strong>发表见解的平等权利</strong>，才能基于<strong>知识体系</strong>激发人类无穷的<strong>创造力</strong>！</p><p>归根到底，还是那个老大难问题 ——</p><blockquote><p><strong>德先生</strong>（民主）与<strong>赛先生</strong>（科学）</p></blockquote><p>以 Wiki 为名，就是希望中小站长们在自己网站上的创作，能向<strong>维基百科</strong>看齐 ——</p><ol><li><p> 形式上添加更多有价值的链接</p></li><li><p> 内容上更客观、民主</p></li></ol><p>若有心，建设更多不同行业、地区的百科网站自是极好的~</p><h2 id="Git-助力-Wiki"><a href="#Git-助力-Wiki" class="headerlink" title="Git 助力 Wiki"></a>Git 助力 Wiki</h2><p>我与 Wiki 结缘也快十年了，不但把维基百科作为获取知识的得力助手，还带头创建过<a href="https://www.mediawiki.org/" target="_blank" rel="noopener">【川大百科】</a>。</p><p>但私以为，目前各种百科系统有一些普遍的问题 ——</p><ol><li><p> 虽有专用的 <strong>Wiki 代码</strong>，但没有<strong>统一规范</strong>，以 [MediaWiki][8] 为首各自实现上手有难度的<strong>扩展插件</strong></p></li><li><p> 大多数系统都采用 PHP/JSP + SQL 数据库一类的<strong>传统网站架构</strong>，集存储、渲染、版本控制、数据 API 等功能于一身，复杂度高、性能较弱、扩展性差</p></li></ol><p>而在 GitHub 引领的<strong>大开源时代</strong>，有更灵活的<strong>分层解决方案</strong> ——</p><table><thead><tr><th align="center">技术</th><th align="center">类型</th><th align="center">特点</th></tr></thead><tbody><tr><td align="center">MarkDown</td><td align="center">文本格式</td><td align="center">有基本规范，高级语法多样、开源扩展丰富</td></tr><tr><td align="center">Git</td><td align="center">版本控制</td><td align="center">基于文件系统、文本比较的分布式系统，强大、可靠</td></tr><tr><td align="center">GitHub</td><td align="center">协作平台</td><td align="center">Fork -&gt; Pull request -&gt; Merge 工作流十分清晰</td></tr><tr><td align="center">Hexo</td><td align="center">网站生成器</td><td align="center">插件式架构灵活、易用，插件、主题丰富，社区活跃</td></tr><tr><td align="center">GitHub Pages</td><td align="center">网页服务器</td><td align="center">免费绑定自有域名的静态网站托管，与 Git 仓库完美结合</td></tr><tr><td align="center">Travis CI</td><td align="center">自动化服务</td><td align="center">与 GitHub 集成的构建、部署、自动任务云服务</td></tr><tr><td align="center">LeanCloud</td><td align="center">后端云服务</td><td align="center">基于容器的多语言服务器环境，并集成用户、搜索、消息等子系统，易学易用</td></tr></tbody></table><p>每一层都各司其职、相互配合，也可以用同类技术替换，搭建、迁移都比较容易。</p>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> one-key </tag>
            
            <tag> git </tag>
            
            <tag> wiki </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>“开源运动”一句话说清</title>
      <link href="/community/open-source-in-one-word/"/>
      <url>/community/open-source-in-one-word/</url>
      
        <content type="html"><![CDATA[<blockquote><p>【开源】是一种基于<strong>国际互联网</strong>的全球性<strong>社会化协作</strong>模式，是在创造性工作中探索、实践民主的运动。</p></blockquote><blockquote><p><strong>开源运动</strong>虽源自计算机软硬件工程行业，但却像学术界在核心期刊上发表论文一样，程序员乐于分享<strong>基础技术的研发成果</strong>，让大家能基于此做更复杂的创造。</p></blockquote><blockquote><p>开源项目的<strong>软件代码</strong>、<strong>硬件设计图</strong>、<strong>文档文献</strong>在互联网上被全球专业人士盯着，<strong>恶意、缺陷无处遁形，创意、优化也不被埋没</strong>。</p></blockquote><h2 id="典型案例"><a href="#典型案例" class="headerlink" title="典型案例"></a>典型案例</h2><p>现代人每天的生活都离不开这些<strong>开放社会化协作</strong>的成果，它们不一定都是你目之所及、零距离接触的具体产品、服务，还可能是内部的<strong>关键部件</strong>，又可能是生产过程必备的<strong>生产力工具</strong>。以下是其中各类典型代表：</p><table><thead><tr><th align="center">名称</th><th align="center">类别</th><th align="center">生年</th><th align="center">简介</th></tr></thead><tbody><tr><td align="center">Linux</td><td align="center">操作系统内核</td><td align="center">1991</td><td align="center">Android 和大多数网站服务器、物联网设备的内核</td></tr><tr><td align="center">Git</td><td align="center">文件版本管理</td><td align="center">2005</td><td align="center">绝大多数程序员时刻在用的开发工具、GitHub 的基础</td></tr><tr><td align="center">Java</td><td align="center">高级编程语言</td><td align="center">1995</td><td align="center">大多数商业系统、绝大多数 Android 应用的编程语言</td></tr><tr><td align="center">Chromium</td><td align="center">网页浏览器</td><td align="center">2008</td><td align="center">Google Chrome 及大多数浏览器、跨系统应用的基础</td></tr><tr><td align="center">树莓派</td><td align="center">硬件开发板</td><td align="center">2012</td><td align="center">多数较大型智能硬件的原型开发板</td></tr><tr><td align="center">W3C 标准</td><td align="center">技术标准规范</td><td align="center">1994</td><td align="center">HTML、CSS 等支撑全球网站的基础技术标准</td></tr><tr><td align="center">维基百科</td><td align="center">百科网站</td><td align="center">2001</td><td align="center">全球最大的多语种通用知识库，完全由网民自主编辑</td></tr><tr><td align="center">freeCodeCamp</td><td align="center">技术公益组织</td><td align="center">2014</td><td align="center">全球最大的公益编程学习平台，学员来自 160 多个国家</td></tr><tr><td align="center">零时政府</td><td align="center">技术公益组织</td><td align="center">2012</td><td align="center">台湾 IT 从业者开发各种应用软件促进政府工作透明</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Community </category>
          
      </categories>
      
      
        <tags>
            
            <tag> open-source </tag>
            
            <tag> one-word </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云计算时代的免费建站</title>
      <link href="/development/free-web-site/"/>
      <url>/development/free-web-site/</url>
      
        <content type="html"><![CDATA[<p><strong>云计算</strong>看起来更高大上，所以在这个时代<strong>网站建设</strong>更难了吗？</p><p>不！越分工应该越简单！</p><p>回望“免费空间”的时代，建站不过是“FTP 上传”，而今 HTTPS 证书、SSH 密钥、NGINX 配置、域名备案等等又繁琐又费钱的步骤，真让人掉发！</p><p>有没有办法更简单？有，但需要一番主动的探索……</p><h2 id="静态网页"><a href="#静态网页" class="headerlink" title="静态网页"></a>静态网页</h2><p>静态网页托管认准 <a href="https://pages.github.com/" target="_blank" rel="noopener">GitHub Pages</a>，需要 <strong>MarkDown 转 HTML</strong> 的推荐 <a href="/development/hello-hexo-travis/">Hexo</a>。</p><h2 id="顶级域名"><a href="#顶级域名" class="headerlink" title="顶级域名"></a>顶级域名</h2><p><a href="https://www.freenom.com/" target="_blank" rel="noopener">Freenom</a> 托管的顶级域名后缀简短、申请方便，Google 账号一键登录后即可搜索可用域名。一次最多<strong>免费租用 12 个月</strong>，到期前有电邮提醒续期，可<strong>免费续租 12 个月</strong>。若忘了续租，系统就认为是有价值的域名，就只能美刀去买了。</p><h2 id="HTTPS-证书"><a href="#HTTPS-证书" class="headerlink" title="HTTPS 证书"></a>HTTPS 证书</h2><p><a href="https://www.cloudflare.com/?r=1" target="_blank" rel="noopener">CloudFlare</a> 是全球著名的域名、CDN 服务提供商，<strong>Web 前端界</strong>国外使用最多、国内借鉴最多的 <a href="https://cdnjs.com/" target="_blank" rel="noopener">CDNJS</a> 便是它赞助的。用了它，<strong>免费 HTTPS 证书</strong>、<strong>DNS 管理</strong>、<strong>静态资源 CDN</strong> 一次性搞定！以后还可以用它的收费 <strong>DDoS 攻击防御</strong>，久经骇客攻击考验~</p><p>注册账号并登录后，即可一键导入<strong>域名基本配置</strong>，再去 Freenom 后台把 Name server 重定向过来，就可以用 CloudFlare 更先进的域名管理后台了。至于 HTTPS 配置，直接参考<a href="https://blog.cloudflare.com/secure-and-fast-github-pages-with-cloudflare/#step2settingupourdns" target="_blank" rel="noopener">官方博文</a>，配好后要等一会儿才能让国内 DNS 查到。</p><h2 id="CDN-加速"><a href="#CDN-加速" class="headerlink" title="CDN 加速"></a>CDN 加速</h2><p>既然用了 CF，为何还要自己做 CDN？因为 CF 在中国大陆与<em>百毒熊厂</em>合作业务，我是极端恶心<em>李厂长夫妇</em>的尿性的，只用 <strong>CloudFlare 海外版</strong>，有受众在天朝就得另辟蹊径。</p><p>我最终选用国内 <strong>BaaS 云服务</strong>龙头 <a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a>：</p><ol><li><p> LeanCloud 云服务在天朝 <strong>Ping 延时</strong> &lt; 100ms，并能在<strong>应用管理后台</strong>看到流量响应统计</p></li><li><p> <strong>应用二级域名</strong>是免费、无需备案的，在每个 HTML 文件 <code>&lt;head /&gt;</code> 标签最前面加个 <code>&lt;base href=&quot;https://my-app.leanapp.cn/&quot;&gt;</code>，<strong>用顶级域名打开页面、用二级域名加载外置资源</strong>二者各司其职</p></li><li><p> 每个<strong>云应用</strong>都能启动一个<strong>免费容器实例</strong>，虽然每天强制休眠 6 小时，但对绝大多数小网站够用，实在不够也可开个<strong>￥ 1/日的生产实例</strong></p></li><li><p> 底层基于 <a href="https://www.docker.com/" target="_blank" rel="noopener">Docker</a> 支持标准的 Node.JS、Python、Java、PHP、C# 项目，<strong>纯 Web 前端项目</strong>只需用 NPM 装个<a href="https://tech-query.me/KoApache/">命令行版 Web 服务器包</a>即可架站</p></li><li><p> <strong>应用代码</strong>还能直接用 <a href="https://developer.github.com/webhooks/" target="_blank" rel="noopener">Web hook</a> 从一个 <strong>Git URL</strong> 拉取并自动部署</p></li><li><p> 官方封装的<strong>数据存储</strong>、<strong>手机短信</strong>、<strong>即时通讯</strong>、<strong>消息推送</strong>、<strong>游戏客户端引擎</strong>等云服务也有方便的 API、SDK，为今后更多需求的开发提供保障</p></li></ol><h2 id="文件存储"><a href="#文件存储" class="headerlink" title="文件存储"></a>文件存储</h2><p>虽说很多人推荐七牛云的免费 10 GB 对象存储，但它必须备案域名才能下载，随机测试域名只能用 30 天……</p><p>心灰意冷之际却搜到来抢市场的<strong>腾讯云</strong> —— <a href="https://cloud.tencent.com/document/product/436/6240" target="_blank" rel="noopener">免费 50 GB</a> <strong>对象存储</strong>，支持不限期<a href="https://cloud.tencent.com/document/product/436/6224" target="_blank" rel="noopener">固定子域名</a>！</p><hr><p>【整套方案的样板项目】<a href="https://github.com/FreeCodeCamp-Chengdu/WFE-Conf" target="_blank" rel="noopener">https://github.com/FreeCodeCamp-Chengdu/WFE-Conf</a></p>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> cloud </tag>
            
            <tag> free </tag>
            
            <tag> BaaS </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>滑雪与武术</title>
      <link href="/other/skiing-kongfu/"/>
      <url>/other/skiing-kongfu/</url>
      
        <content type="html"><![CDATA[<p>一匹来自北方的狼，在西南腹地的雪山上学会了滑雪…… 😂</p><h2 id="笨手笨脚"><a href="#笨手笨脚" class="headerlink" title="笨手笨脚"></a>笨手笨脚</h2><p>看着别人半蹲着顺着坡度轻松滑直线，我同样的姿势，脚下的滑雪板却随着前人滑过的轨迹乱抖，很快就歪到一边，不是摔倒就是 180° 转向，倒着滑下去比正着溜…… 还不如同行的小个子女生有天赋……</p><p>向雪场的当地大叔请教动作要领，只得一句：“没啥要领，滑就是了，自己领悟！”</p><p>于是，人仰马翻、出糗不断的第一个小时过去了，有心无力的感觉逐渐显现。</p><h2 id="异曲同工"><a href="#异曲同工" class="headerlink" title="异曲同工"></a>异曲同工</h2><p>苦思冥想之际，发现滑雪“双脚相对于滑雪板静止”和武术“扎马步如脚下有根”是类似的，都需要一个稳定的姿势，也就是师傅说的“稳定的身体架构”。看专业滑雪运动员的半蹲姿势，很像<a href="https://www.wingchun-kuen.com/theory_2ma.htm" target="_blank" rel="noopener">咏春拳的【二字钳羊马】</a>，便决心一试 ——</p><blockquote><p>双脚站立式自然分开，<strong>双膝并拢</strong>便自然半蹲，滑下过程中无论滑雪板如何抖动，都坚持这一姿势</p></blockquote><p>果然是<strong>见证奇迹的时刻</strong>！！！不但有惊无险、异常稳定，而且还不自觉地想主动撑起滑雪杆加速！！！</p><p>不但屡试不爽，而且那个有天赋的女生试了试也说比之前更稳！</p><p>于是，我一个连初级道都没一次正常滑完的大菜鸡，因为这一个领悟的开窍，直接挑战雪场最高滑道，竟然完美滑下，还以一个小漂移侧滑刹车！</p><p>这基本功没白练，徒弟谢过师傅！！！🙏</p><h2 id="再接再厉"><a href="#再接再厉" class="headerlink" title="再接再厉"></a>再接再厉</h2><p>虽然入门了滑直线，但不会拐弯、急刹还是很危险的，不是大家都防护到位，两次追尾撞人家个满怀肯定要出事……</p><blockquote><p>既然我们双膝并拢，让<strong>膝盖上方的内侧肌肉</strong>成为双脚外的着力点，那应该可以此为支点，左右倾斜身体来配合滑雪杆的用力方向去转向</p></blockquote><p>这个留待下次滑雪去验证~</p>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> one-word </tag>
            
            <tag> 滑雪 </tag>
            
            <tag> 武术 </tag>
            
            <tag> 咏春 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript 一句话总结</title>
      <link href="/programming/javascript-in-one-word/"/>
      <url>/programming/javascript-in-one-word/</url>
      
        <content type="html"><![CDATA[<blockquote><p>JavaScript 是一门原生支持<strong>函数式编程</strong>范式的、基于原型的<strong>面向对象</strong>语言，也是一门<strong>弱类型</strong>动态脚本语言</p></blockquote><h2 id="What’s-this"><a href="#What’s-this" class="headerlink" title="What’s this ?"></a>What’s this ?</h2><blockquote><p>JavaScript 函数的 <code>this</code> 是由<strong>函数调用者</strong>在调用前确定的 —— 继承自 LISP 语言</p></blockquote><p>用 ECMAScript 6 解释如下：</p><table><thead><tr><th align="center">调用方式</th><th align="center">调用者</th><th align="center">等效代码</th></tr></thead><tbody><tr><td align="center"><code>func(...params)</code></td><td align="center">JS 引擎</td><td align="center"><code>func.apply(null, params)</code></td></tr><tr><td align="center"><code>obj.func(...params)</code></td><td align="center">一个对象</td><td align="center"><code>func.apply(obj, params)</code></td></tr><tr><td align="center"><code>new func(...params)</code></td><td align="center"><code>new</code> 运算符</td><td align="center"><code>func.apply(Object.setPrototypeOf({ }, func.prototype), params)</code></td></tr><tr><td align="center"><code>element.onclick = func</code></td><td align="center">DOM 事件回调</td><td align="center"><code>func.call(element, event)</code></td></tr></tbody></table><p>上述最后一种其实是<strong>运行时 API</strong> 级别的，与语言本身无关，用 JS 写的公共库需要<strong>回调函数</strong>时，也是库内部调用时如上手动指定的。</p><h2 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h2><p>通俗解释：</p><blockquote><p>孩子靠着自创资产和自己可掌控的父母遗产，继续活下去</p></blockquote><p>技术解释：</p><blockquote><p><strong>局部作用域</strong>中创建的函数，若引用了其上级作用域中的变（常）量，又在上级作用域外有引用，上级作用域执行结束被销毁时，此<strong>函数及其引用的数据</strong>形成一个不被销毁的<strong>闭包</strong>。</p><p>—— 继承自 LISP 语言</p></blockquote><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> privateData <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    <span class="token keyword">set</span><span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>      privateData<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token keyword">get</span><span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> privateData<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">var</span> closure <span class="token operator">=</span> <span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>closure<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">'A'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>closure<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'A'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//  1</span></code></pre><p>闭包在 ECMAScript 5 及更早的时代，常用于模拟<strong>块级作用域</strong>、<strong>模块作用域</strong>，在 ECMAScript 6 引入这两种新<strong>局部作用域</strong>后，它们又成了形成闭包的上级作用域之一。</p><h2 id="原型"><a href="#原型" class="headerlink" title="原型"></a>原型</h2><blockquote><p><strong>基于原型的面向对象语言</strong> 可看作把 <strong>基于类的面向对象语言</strong>的<strong>运行时内部构造</strong> 开放了出来</p></blockquote><table><thead><tr><th align="center"></th><th align="center">类</th><th align="center">原型</th></tr></thead><tbody><tr><td align="center">对象的创建</td><td align="center">由 <code>class</code> 的构造函数修饰 <code>this</code></td><td align="center">直接 <code>new</code> 一个函数作为构造函数</td></tr><tr><td align="center">对象的继承</td><td align="center">只知其然，不知所以然</td><td align="center">对象内部引用<strong>构造函数的原型对象</strong>，在引用对象未定义成员时，在原型上找同名成员</td></tr><tr><td align="center">类的继承</td><td align="center">只知其然，不知所以然</td><td align="center"><code>Child.prototype = new Parent()</code></td></tr><tr><td align="center">私有成员</td><td align="center">只知其然，不知所以然</td><td align="center">用<strong>局部作用域</strong>“对外不可访问性”保存的私有 <code>Symbol</code>（运行时唯一值）命名对象成员</td></tr></tbody></table><h2 id="异步"><a href="#异步" class="headerlink" title="异步"></a>异步</h2><blockquote><p><strong>异步函数</strong>先记下要做什么（传入的参数、回调函数）并交给 JS 引擎所在<strong>运行时平台</strong>的其它线程，然后立马返回，让 JS 自身线程继续执行完后面的<strong>同步代码</strong>，再按异步任务完成的顺序，一一用相应结果数据调用<strong>回调函数</strong>。</p></blockquote><p>所有的异步任务内部都基于回调函数实现：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">asyncFunc</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">setTimeout</span><span class="token punctuation">(</span>callback<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">asyncFunc</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'See you later'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>但需要回调函数的不一定是异步任务：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">syncFunc</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'See you '</span> <span class="token operator">+</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">syncFunc</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token string">'now'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> one-word </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>装机必备软件一键安装</title>
      <link href="/maintenance/one-key-software-installation/"/>
      <url>/maintenance/one-key-software-installation/</url>
      
        <content type="html"><![CDATA[<h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><p>接着<a href="/development/coder-start-kit/">《编程入门之开发工具一键安装》</a>的思路，<strong>电脑维修一键装机</strong>也可用 <a href="https://chocolatey.org/" target="_blank" rel="noopener">Chocolatey</a> 实现！</p><p>回想我 2008<del>10 年在<a href="https://www.fyscu.com/" target="_blank" rel="noopener">川大飞扬</a>做骨干技术员时还没这么好的东西呢，<strong>PowerShell</strong> 也还没普及，要用 CMD、WSH/JS 绞尽脑汁地封装各种<strong>维修工具</strong>…… 今天算是给学弟学妹补上这个遗憾</del></p><h2 id="一键脚本"><a href="#一键脚本" class="headerlink" title="一键脚本"></a>一键脚本</h2><p>Talk is cheap, show me the code!</p><pre class=" language-powershell"><code class="language-powershell"><span class="token keyword">function</span> getChoco<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">Set</span><span class="token operator">-</span>ExecutionPolicy Bypass <span class="token operator">-</span>Scope <span class="token keyword">Process</span> <span class="token operator">-</span>Force<span class="token punctuation">;</span>    <span class="token function">Invoke-Expression</span> <span class="token punctuation">(</span>        <span class="token punctuation">(</span><span class="token function">New-Object</span> System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>WebClient<span class="token punctuation">)</span><span class="token punctuation">.</span>DownloadString<span class="token punctuation">(</span><span class="token string">'https://chocolatey.org/install.ps1'</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>choco <span class="token operator">-</span>v<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> $?<span class="token punctuation">)</span> <span class="token punctuation">{</span>  getChoco  <span class="token punctuation">}</span>choco install <span class="token operator">-</span>y \    boxstarter<span class="token punctuation">.</span>winconfig ChocolateyGUI \    everything notepad3 7zip 360ts \    firefox tim wps<span class="token operator">-</span>office<span class="token operator">-</span>free<span class="token function">Import-Module</span> Boxstarter<span class="token punctuation">.</span>Chocolatey<span class="token function">Set</span><span class="token operator">-</span>WindowsExplorerOptions <span class="token operator">-</span>EnableShowHiddenFilesFoldersDrives <span class="token operator">-</span>EnableShowFileExtensionsInstall<span class="token operator">-</span>WindowsUpdate <span class="token operator">-</span>AcceptEula</code></pre><p>懂点计算机的都能大概看明白上面的<strong>脚本程序</strong>在干啥，不懂的只要有<em>高考英语水平</em>，用“看日文中的汉字”的笨办法也能了解一二，我就不解释了~</p><h2 id="软件管家？"><a href="#软件管家？" class="headerlink" title="软件管家？"></a>软件管家？</h2><p>上述脚本只装了普通中国大陆人最通用的几个软件，但针对大学不同专业的学生、社会上不同职业的员工，他们常用的专业<strong>软件集合</strong>又各不相同，即便计算机、软件专业，不同技术架构的程序员也需要<a href="/development/coder-start-kit/#%E6%96%B0%E7%94%B5%E8%84%91%E7%9A%84%E5%88%9B%E4%B8%96%E7%BA%AA">不同的开发环境</a>……</p><p>大神说：“要有个<a href="http://soft.360.cn/" target="_blank" rel="noopener">软件管家</a>！”</p><blockquote><p><a href="https://boxstarter.org/" target="_blank" rel="noopener">https://boxstarter.org</a></p></blockquote><p>Chocolatey 官方团队早给各位“伸手党”准备好了，但他们设计的巧妙之处在于 ——</p><blockquote><p>软件集 即是 软件包</p></blockquote><p>可能借鉴了 <strong>UNIX 一切皆文件</strong>的思想，这样只需给<a href="https://boxstarter.org/Learn/SimplePackage" target="_blank" rel="noopener">软件集发布者</a>封装一些方便的工具、服务，而用户还是在 <a href="https://chocolatey.org/packages" target="_blank" rel="noopener">Chocolatey 官方软件仓库</a>中搜索、安装，让大家都简单~</p><h2 id="Awesome"><a href="#Awesome" class="headerlink" title="Awesome"></a>Awesome</h2><p>按着官方文档很快就把上述<strong>软件集脚本</strong>发布成一个包 <code>China-mainland-suite</code>：</p><ul><li><p><a href="https://chocolatey.org/packages/China-mainland-suite/" target="_blank" rel="noopener">软件包主页</a></p></li><li><p><a href="https://boxstarter.org/package/China-mainland-suite/" target="_blank" rel="noopener">一键安装</a></p></li></ul><p>依 <strong>GitHub 社群的 awesome（真香）传统</strong>，我来填补一下 Chocolatey 的 awesome 空白 ——</p><blockquote><p><a href="https://github.com/TechQuery/Chocolatey-awesome" target="_blank" rel="noopener">https://github.com/TechQuery/Chocolatey-awesome</a></p></blockquote><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><p> <a href="https://www.pstips.net/powershell-online-tutorials" target="_blank" rel="noopener">https://www.pstips.net/powershell-online-tutorials</a></p></li><li><p> <a href="https://blog.csdn.net/kk185800961/article/details/49026637" target="_blank" rel="noopener">https://blog.csdn.net/kk185800961/article/details/49026637</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Maintenance </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chocolatey </tag>
            
            <tag> one-key </tag>
            
            <tag> Windows </tag>
            
            <tag> software </tag>
            
            <tag> install </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello Hexo &amp; Travis !</title>
      <link href="/development/hello-hexo-travis/"/>
      <url>/development/hello-hexo-travis/</url>
      
        <content type="html"><![CDATA[<h2 id="静态网站生成器"><a href="#静态网站生成器" class="headerlink" title="静态网站生成器"></a>静态网站生成器</h2><p><a href="https://github.com/topics/static-site-generator?l=javascript&o=desc&s=stars" target="_blank" rel="noopener">GitHub <code>static-site-generator</code> 主题下 Node.JS 架构</a> star 前三的项目中，<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a> 生态最完善：</p><ol><li><p> 包括<strong>中文</strong>在内的<strong>多语言官网</strong></p></li><li><p> 使用文档不但每页开篇有<strong>视频讲解</strong>，简体中文视频直接托管在 Bilibili</p></li><li><p> 插件、主题的<strong>搜索引擎</strong>更是方便，接地气的<strong>国人作品</strong>也很多</p></li></ol><p>官网一番学习之后，发现起步比较简单：</p><pre class=" language-shell"><code class="language-shell">npm install hexo --globalhexo init my_pagesgit initgit checkout --orphan hexo</code></pre><p>随后又在官网搜了一个简洁、美观、强大、易用的主题模板 <a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md" target="_blank" rel="noopener">Matery</a>。</p><h2 id="持续集成、持续部署"><a href="#持续集成、持续部署" class="headerlink" title="持续集成、持续部署"></a>持续集成、持续部署</h2><p>最后一顿 Google，入门了近几年开源界最流行的 <a href="https://travis-ci.com/" target="_blank" rel="noopener">Travis CI</a>，它的配置文件 <code>.travis.yml</code> 看起来像 <code>Dockerfile</code>，但更自然：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">branches</span><span class="token punctuation">:</span>  <span class="token key atrule">only</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> hexo<span class="token key atrule">language</span><span class="token punctuation">:</span> node_js<span class="token key atrule">node_js</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> lts/*<span class="token key atrule">cache</span><span class="token punctuation">:</span>  <span class="token key atrule">directories</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> node_modules<span class="token key atrule">before_install</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> export TZ=$<span class="token punctuation">{</span>TIME_ZONE<span class="token punctuation">}</span><span class="token key atrule">install</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> npm install<span class="token key atrule">script</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> npm run $<span class="token punctuation">{</span>SCRIPT<span class="token punctuation">}</span><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token key atrule">provider</span><span class="token punctuation">:</span> pages  <span class="token key atrule">on</span><span class="token punctuation">:</span>    <span class="token key atrule">branch</span><span class="token punctuation">:</span> hexo  <span class="token key atrule">skip_cleanup</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">local_dir</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>FOLDER<span class="token punctuation">}</span>  <span class="token key atrule">fqdn</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>DOMAIN<span class="token punctuation">}</span>  <span class="token key atrule">token</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>TOKEN<span class="token punctuation">}</span>  <span class="token key atrule">target_branch</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>BRANCH<span class="token punctuation">}</span></code></pre><p>上述命令行脚本中的<strong>环境变量</strong>可在 Travis CI 项目配置页设置，示例如下：</p><table><thead><tr><th align="center">变量名</th><th align="center">示例值</th><th align="center">释义</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">TIME_ZONE</td><td align="center">Asia/Chongqing</td><td align="center">系统时区</td><td align="center"></td></tr><tr><td align="center">SCRIPT</td><td align="center">build</td><td align="center">构建脚本名</td><td align="center"></td></tr><tr><td align="center">FOLDER</td><td align="center">public</td><td align="center">网页生成器的输出目录</td><td align="center"></td></tr><tr><td align="center">DOMAIN</td><td align="center">example.com</td><td align="center">自定义域名</td><td align="center"></td></tr><tr><td align="center">TOKEN</td><td align="center"></td><td align="center">Git 平台个人访问令牌</td><td align="center"><a href="https://github.com/settings/tokens/new" target="_blank" rel="noopener">https://github.com/settings/tokens/new</a></td></tr><tr><td align="center">BRANCH</td><td align="center">master</td><td align="center">GitHub Pages 目标分支</td><td align="center"></td></tr></tbody></table><p>新版个人网站初步落成！~</p><h2 id="开源项目-API-文档生成"><a href="#开源项目-API-文档生成" class="headerlink" title="开源项目 API 文档生成"></a>开源项目 API 文档生成</h2><p>既然 Travis CI 配置脚本可以用环境变量变得灵活，那基于 JSDoc、ESDoc 之类的开源项目生成 <strong>API 文档站</strong>也可照搬以上方法了：</p><ul><li><p>再也不用在本地 Git <code>precommit</code> 钩子上执行<strong>文档生成脚本</strong>了，加快提交速度</p></li><li><p>把生成的文档放在独立的 <code>gh-pages</code> 分支，让 <code>master</code> 分支只放源码，<strong>提交记录</strong>更清爽</p></li><li><p>用 <code>git push --force</code> 也让<strong>文档站分支</strong>不保留不必要的提交记录，<strong>仓库体积</strong>最小化</p></li></ul><p>但是，Travis 的 Windows 环境尚处测试阶段，我实测时出现“失败但无报错详情”的 bug，只好让 <a href="https://tech-query.me/Puppeteer-IE/">Puppeteer-IE</a> 改用 <a href="https://azure.microsoft.com/zh-cn/services/devops/pipelines/" target="_blank" rel="noopener">Azure Pipeline</a>：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">trigger</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> master<span class="token key atrule">pool</span><span class="token punctuation">:</span>  <span class="token key atrule">vmImage</span><span class="token punctuation">:</span> <span class="token string">'vs2017-win2016'</span><span class="token key atrule">steps</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">task</span><span class="token punctuation">:</span> NodeTool@0    <span class="token key atrule">inputs</span><span class="token punctuation">:</span>      <span class="token key atrule">versionSpec</span><span class="token punctuation">:</span> <span class="token string">'8.x'</span>    <span class="token key atrule">displayName</span><span class="token punctuation">:</span> <span class="token string">'Install Node.js'</span>  <span class="token punctuation">-</span> <span class="token key atrule">bash</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">      npm install      npm run build      cd ${DOC_FOLDER}      git init      git config user.name ${GIT_USER}      git config user.email ${GIT_EMAIL}      git add .      git commit -m "${GIT_MESSAGE}"      git push --force --quiet https://${GIT_TOKEN}@${GIT_URI}.git master:${GIT_BRANCH}</span>    <span class="token key atrule">displayName</span><span class="token punctuation">:</span> <span class="token string">'npm install &amp; build Document'</span></code></pre><p>再次领略 微软文档的一大特点 —— 要么一笔带过、不知所云，要么又臭又长、不明重点…… 好歹有个<strong>项目配置模板</strong>，连蒙带猜改一改，竟然能用…… 也算是不枉费我<a href="https://www.microsoft.com/china/techsummit/2018/" target="_blank" rel="noopener">秋天跑一趟上海</a>~</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><p> <a href="https://segmentfault.com/a/1190000013058880" target="_blank" rel="noopener">https://segmentfault.com/a/1190000013058880</a></p></li><li><p> <a href="https://ssk7833.github.io/blog/2016/01/21/using-TravisCI-to-deploy-on-GitHub-pages/" target="_blank" rel="noopener">https://ssk7833.github.io/blog/2016/01/21/using-TravisCI-to-deploy-on-GitHub-pages/</a></p></li><li><p> <a href="https://easyhexo.github.io/Easy-Hexo/" target="_blank" rel="noopener">https://easyhexo.github.io/Easy-Hexo/</a></p></li><li><p> <a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=vsts&amp;tabs=example#bash" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=vsts&amp;tabs=example#bash</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Travis </tag>
            
            <tag> Azure </tag>
            
            <tag> DevOps </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编程入门之开发工具一键安装</title>
      <link href="/development/coder-start-kit/"/>
      <url>/development/coder-start-kit/</url>
      
        <content type="html"><![CDATA[<h2 id="编程开头难"><a href="#编程开头难" class="headerlink" title="编程开头难"></a>编程开头难</h2><p><strong><em>难倒编程小白的第一件事</em></strong> 恐怕是“安装开发工具”，即便是很多 <strong><em>程序猿老司机</em></strong>，也最怕“换电脑、配环境”……</p><p>这时可能有人会喷：“肯定用的 Windows！Mac、Linux 这些类 UNIX 系统各种开发工具都自带，装其它的也很方便~”</p><p>作为开源老司机的我，Linux 的<strong>开发者友好性</strong>自不必说，但 Mac 除了移植了整套 UNIX 工具链，<strong>接口兼容性</strong>、<strong>系统扩展性</strong>、<strong>企业级支持</strong>等等还真不如浸淫企业级市场二三十年的 Windows。现在连开发者友好性也不知不觉地落后了，且看我下文分解……</p><h2 id="程序猿的“应用商店”"><a href="#程序猿的“应用商店”" class="headerlink" title="程序猿的“应用商店”"></a>程序猿的“应用商店”</h2><p>之所以我们现在可以让小白、老司机都能一键安装开发工具，得益于每个流行系统、语言必备的<strong>包管理器</strong> —— 相当于图形界面软件的插件/扩展管理器、Windows 常用的 360 软件管家、Android 的 Google Play、iOS 的 App Store。</p><p>基本的使用逻辑都一样 ——</p><blockquote><p>搜索 → 安装 → 启动 → 更新 或 卸载</p></blockquote><p>只不过应用商店是在图形界面上<em>点点点</em>，而包管理器是在命令行终端里<em>敲敲敲</em>~</p><p>不要看到“敲命令”就眉头紧锁，如果要敲一大堆，怎能叫“一键安装”呢？废话不多，且看代码……</p><h2 id="大神说：要有“包管理器”！"><a href="#大神说：要有“包管理器”！" class="headerlink" title="大神说：要有“包管理器”！"></a>大神说：要有“包管理器”！</h2><h3 id="Windows-的“巧克力”"><a href="#Windows-的“巧克力”" class="headerlink" title="Windows 的“巧克力”"></a>Windows 的“巧克力”</h3><p>Windows 自打有 .Net Framework 后，也推出了 NuGet 包管理器，不过因为最早源自 Visual Studio 扩展，在 VS 之外并不太好用。但开发者社区基于它推出了更强大的包管理器，其中最方便的莫过 <a href="https://chocolatey.org/" target="_blank" rel="noopener" title="Chocolatey 官网">Chocolatey</a>，一键安装、开箱即用!</p><h4 id="安装包管理器"><a href="#安装包管理器" class="headerlink" title="安装包管理器"></a>安装包管理器</h4><pre class=" language-powershell"><code class="language-powershell"><span class="token function">Set</span><span class="token operator">-</span>ExecutionPolicy Bypass <span class="token operator">-</span>Scope <span class="token keyword">Process</span> <span class="token operator">-</span>Force<span class="token punctuation">;</span> <span class="token function">iex</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">New-Object</span> System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>WebClient<span class="token punctuation">)</span><span class="token punctuation">.</span>DownloadString<span class="token punctuation">(</span><span class="token string">'https://chocolatey.org/install.ps1'</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>（以上命令在【开始菜单】里搜索 PowerShell，再在其图标上点右键，选“以管理员身份运行”后，输入在打开的命令行窗口中回车执行）</p><p><img src="PowerShell-0.png"></p><p><img src="https://oscimg.oschina.net/oscnet/9a098d1d1d95b3c0b84f7bde1d8046222c4.jpg"></p><h4 id="安装软件包"><a href="#安装软件包" class="headerlink" title="安装软件包"></a>安装软件包</h4><p>安装成功后，你就能在 CMD、PowerShell、Git Bash、WSL 等任何 Windows 支持的<strong>命令行终端</strong>里一键安装 <strong>命令行工具</strong>、<strong>软件基础库</strong> 和 <strong>图形界面软件</strong>了 ——</p><pre class=" language-shell"><code class="language-shell">choco install directxchoco install nodejschoco install googlechrome</code></pre><h4 id="搜索软件包"><a href="#搜索软件包" class="headerlink" title="搜索软件包"></a>搜索软件包</h4><p>你可以敲命令 ——</p><pre class=" language-shell"><code class="language-shell">choco search nodejs  |  more</code></pre><p>（按【空格】键显示更多）</p><p>你也可以直接访问 <a href="https://chocolatey.org/packages" target="_blank" rel="noopener">https://chocolatey.org/packages</a> ——</p><p><img src="https://oscimg.oschina.net/oscnet/1702d854f851d268a31a1a682a1458c9a37.jpg"></p><p>Google Chrome 用户第二次访问可以 <strong><em>地址栏一把梭</em></strong> ——</p><p><img src="https://oscimg.oschina.net/oscnet/499179d93a7541b09be01dc03011377ed63.jpg"></p><p><img src="https://oscimg.oschina.net/oscnet/3bc98c8d151517a955f88174d1d61210934.jpg"></p><p>传统<strong>命令行终端</strong>按 <code>Tab</code> 键<strong>提示可用命令</strong>、<strong>补全文件路径</strong>司空见惯，你见过能<strong>提示命令行参数</strong>、直接<strong>搜索软件包</strong>的吗？</p><p><img src="https://raw.githubusercontent.com/wiki/chocolatey/choco/images/gifs/choco_install.gif" alt="choco install"></p><h3 id="Mac-的“私酿”"><a href="#Mac-的“私酿”" class="headerlink" title="Mac 的“私酿”"></a>Mac 的“私酿”</h3><p>令人费解的总是 <strong><em>乔帮主的套路</em></strong>，一直吹嘘类 UNIX 体系“性能、安全”的 Mac，却不学同门师兄 Linux 的“为自己带包”，包管理器全是第三方开发的，而且还没 Windows 的好用……（果然是“私酿”？呵呵~）</p><p>以目前最常用的 <a href="https://brew.sh/" target="_blank" rel="noopener" title="Homebrew 官网">Homebrew</a> 为例，安装两个命令行工具才顶 Chocolatey 一个命令的功能 ——</p><pre class=" language-shell"><code class="language-shell"># 主命令只能安装“命令行工具”/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"# 子命令 cask 用于“图形界面软件”安装brew install cask</code></pre><pre class=" language-shell"><code class="language-shell">brew install nodejsbrew cask install google-chrome</code></pre><p>（以上命令若提示“无权限”，须加 <code>sudo</code> 前缀）</p><p>再看看它的<a href="https://formulae.brew.sh/formula/" target="_blank" rel="noopener" title="Homebrew 软件包官方目录">软件包网页目录</a>，只能【Command + F】整页查找，还没收录 cask 子命令的软件……</p><h2 id="新电脑的创世纪"><a href="#新电脑的创世纪" class="headerlink" title="新电脑的创世纪"></a>新电脑的创世纪</h2><p>每当我们拿到一台新电脑，在装好包管理器后，开发环境配置就能一把梭了。</p><h3 id="Web-前端-JavaScript-全栈工程师"><a href="#Web-前端-JavaScript-全栈工程师" class="headerlink" title="Web 前端 / JavaScript 全栈工程师"></a>Web 前端 / JavaScript 全栈工程师</h3><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><pre class=" language-shell"><code class="language-shell">choco install -y googlechrome firefox git tortoisegit vscode nodejs-lts nvm.portable</code></pre><h4 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h4><pre class=" language-shell"><code class="language-shell">brew install git nodejs nvm caskbrew cask install google-chrome firefox sourcetree visual-studio-code</code></pre><h3 id="Python-黑客"><a href="#Python-黑客" class="headerlink" title="Python 黑客"></a>Python 黑客</h3><h4 id="Windows-1"><a href="#Windows-1" class="headerlink" title="Windows"></a>Windows</h4><pre class=" language-shell"><code class="language-shell">choco install -y git tortoisegit vscode pythonrefreshenvpython -m pip install --upgrade pip# 中国教育网用户切换镜像# pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simplepip install pipenv</code></pre><h4 id="Mac-1"><a href="#Mac-1" class="headerlink" title="Mac"></a>Mac</h4><pre class=" language-shell"><code class="language-shell">brew install git python caskbrew cask install sourcetree visual-studio-codepython -m pip install --upgrade pip# 中国教育网用户切换镜像# pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simplebrew install pipenv</code></pre>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chocolatey </tag>
            
            <tag> HomeBrew </tag>
            
            <tag> PowerShell </tag>
            
            <tag> one-key </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Deepin 15.5 使用体验</title>
      <link href="/maintenance/deepin-15.5/"/>
      <url>/maintenance/deepin-15.5/</url>
      
        <content type="html"><![CDATA[<h2 id="硬盘真机安装"><a href="#硬盘真机安装" class="headerlink" title="硬盘真机安装"></a>硬盘真机安装</h2><ul><li><a href="http://reboot.pro/topic/19464-booting-linux-distros-iso-with-grub4dos/" target="_blank" rel="noopener">http://reboot.pro/topic/19464-booting-linux-distros-iso-with-grub4dos/</a></li><li><a href="https://sourceforge.net/p/clonezilla/discussion/Clonezilla_live/thread/35ef89a5/" target="_blank" rel="noopener">https://sourceforge.net/p/clonezilla/discussion/Clonezilla_live/thread/35ef89a5/</a></li></ul><h2 id="虚拟硬盘安装"><a href="#虚拟硬盘安装" class="headerlink" title="虚拟硬盘安装"></a>虚拟硬盘安装</h2><p>因一时没配置好 Deepin Live ISO 的 GRUB4DOS 引导脚本，就暂时用了 WUBI（Windows 体验式安装）。但意外的是，公司 Intel Core i7-7700K 4.2GHz、32GB 内存的台式机，安装后半段进度条几度便秘……</p><h2 id="坑爹的-N-卡开源驱动"><a href="#坑爹的-N-卡开源驱动" class="headerlink" title="坑爹的 N 卡开源驱动"></a>坑爹的 N 卡开源驱动</h2><p>安装后首次进桌面，感觉鼠标指针、dock、侧边栏都有卡顿，心中不妙…… 再点 launcher，逐行扫描过程清晰可见，快赶上当年装 WINE-QQ 调不起显卡、全靠 CPU 绘图一样…… 再加上“检查系统更新”菊花转半天，“失望”情绪油然而生……</p><p>放弃之前，还是点开“驱动管理器”碰碰运气，还好检测到了 N 卡私有驱动，等了一阵子装好了，似乎仍不见起色…… 重启？就好了……（为啥不弹框引导用户一下呢？）</p><h2 id="漫长的首次装机"><a href="#漫长的首次装机" class="headerlink" title="漫长的首次装机"></a>漫长的首次装机</h2><p>虽然“同步阻塞”是大多数<strong>操作系统内置包管理器</strong>的基本设计原则，但 Linux 大多数软件包最方便的安装方式就是包管理器，不像 Windows、Mac OS X 很多常用软件都可以从官网下载编译好的二进制包，所以系统升级、软件安装都要占用包管理器，系统安装到配齐环境往往要等很久……</p><h2 id="版本之痛"><a href="#版本之痛" class="headerlink" title="版本之痛"></a>版本之痛</h2><p>Web 前端、JavaScript 全栈开发现在都依赖 NodeJS，它不像 Python 被大多数 Linux 软件包依赖，基本只用在 Web 应用开发，而且又因社区活跃而迭代很快，在不少 Linux 软件源中的版本都比较旧，只能手动安装新版。</p><p>可谁承想，<a href="https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions" target="_blank" rel="noopener">官方安装脚本</a>却把 Deepin 的系统信息识别为 <code>unstable</code> 版本…… 只能又求助于 NVM —— <a href="https://github.com/creationix/nvm#install-script" target="_blank" rel="noopener">https://github.com/creationix/nvm#install-script</a> ，终于装上了……</p>]]></content>
      
      
      <categories>
          
          <category> Maintenance </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Deepin </tag>
            
            <tag> system </tag>
            
            <tag> software </tag>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《红海行动》红动我心</title>
      <link href="/other/operation-red-sea/"/>
      <url>/other/operation-red-sea/</url>
      
        <content type="html"><![CDATA[<p>戊戌狗年前，卧床刷豆瓣。若不是“林超贤”这个名字，《红海行动》无论从题目、海报、主演上，都很容易从我的指尖划过。点进影片详情页，“《湄公河行动》升级版”、“比《战狼２》还过瘾”、“真实事件改编”一下子吊起了我的胃口 —— 从未如此期待“大年初一”～</p><p>公映当天，虽然一开始《红海行动》这种军事片的拍片量 远不及贺岁档其它几部奇装异服、妖魔鬼怪的爆米花大片，但上座率还是满满的，全城几家大影城的早场票早抢光了，只好顶着北国冬夜的寒风开车进城看晚一点的了……</p><p>豆瓣上看过点映的网友说“两个半小时，从头打到尾”果不其然，片名还没出就来了个精简版的《菲利普船长》，把大中华海军<strong>索马里护航编队</strong>表扬一番！不过狙击手罗星那颗发令枪般的子弹，3D 特效着实浮夸，后面戈壁反击战的狙击弹、村庄巷战的坦克炮弹也如法炮制，十分出戏……（过年返城在星美二刷 IMAX 3D 才明白，除了片头、片名、字幕，只有这几处子弹是 3D 的…… 林导拍的这么好看，当然是原谅他啦……）</p><p>擒拿海盗后，顺着罗星中弹的线索开始铺陈文戏。虽然张译、张涵予和几个新演员在真诚地展现军人间“话不多，真性情”的情感，但始终感觉国产片在处理“大背景中的小人物”这方面不够细腻，相比最近正在播映的同类美剧《海豹突击队》，人物塑造得还是不太贴近生活中人的自然状态。比如小动作、口头禅、口音等等，国内只有冯小刚、姜文、管虎、宁浩等个性十足的大牌导演才把这些看似不修边幅、实则韵味十足的细节拿捏到位，而且这样的片子基本都是当年佳话。因为这才是每个普通人的日常，有代入感才能打动人~</p><p>“枪战导演”把握不好的文戏一笔带过之后，红海某国政变，撤侨！妥妥的“也门内战”撤侨行动改编，《战狼２》生硬、尴尬的撤侨文戏在前，真为林导捏了把汗…… 还好这次是张涵予、张译这些中青年实力派担纲，中国大使也没硬插个投资方老板客串。特别是当年执行撤侨任务的两艘军舰之一临沂舰本尊出镜，全体指战员演自己乃是轻车熟路，我想海外华人群演那一声“我们的军舰来啦！”的欢呼，绝对是发自内心的呐喊！（我写到这儿，双眼久旱逢甘霖……）</p><p>紧接着，大使馆车队遇袭。舰长台词交代的起因是“某国总统遇袭，中国同意其政治避难”，叛军意图“大使换总统”。但我国其实一直奉行“和(huo)平(xi)共(ni)处”的外交原则，当年也门内战正反方与中国的关系都还行，与《战狼２》的“五星红旗一路绿灯”还真差不多。但为了引出本文题图帅炸的“蛟龙出海”，使馆武警们就一脸懵逼地和恐怖分子干上了…… 谁叫这片子是海政策划的呢，中国反恐实战经验最丰富的武警特战队，也只能沦为有勇无谋的脆皮 NPC，死等中国海军陆战队来“验明身份”、“接你们回家”……</p><p>回到某国政府军、平民死伤惨重的巷战，不禁令人想起我国边疆前些年的公交车炸弹袭击、打砸抢烧，若不是奋战在反恐一线的公安干警、武警战士，也许这一幕幕血肉横飞就不是在摩洛哥首都繁华街道“重演”了……</p><p>镜头一转，前半段的支线剧情开始并入主线。海清一出场的英文对白就让我惊艳了一下，想必背后一定是苦练。即便带着明显的汉语口音，但场景中的对话还是连贯、自然，比我们这些在国内的口语渣好太多了。看到这儿，有些人还可能惯性地以为“国民媳妇”可能只是个客串角色，但后面接踵而至的潜入敌营、解救人质（未遂）、请缨上阵、深入虎穴、坦克女兵，她还是将一个战地华裔女记者悲天悯人、有勇有谋的干练形象漂亮地塑造了出来。从当年《王贵与安娜》泼辣又善良的媳妇，到如今戈壁滩上摸爬滚打的记者，海清饱满而富有张力的演技从未让我们失望。而且包括她和女二蒋璐霞在内的所有战场演员，每个人在切换场景后都没像很多国产片一样“刷新妆容”，而是灰头土脸直至任务结束，好像这是部战地纪录片，演员一直融在画面中，观众也身临其境、从不“出戏”。</p><p>从蛟龙一队与夏楠汇合开始，全片开始进入“困难模式”，不但军舰没法直接支援，而且还时不时与军舰失去联系。不少国人会以为中国特种兵的“耍酷”环节要到了，没想到竟然是《拯救大兵瑞恩》和《黑鹰坠落》般艰苦卓绝的战斗。从好巧不巧的“扎车胎”开始，原本以为“政治正确”的女兵佟莉，反倒让我极为惊艳 —— 从下车的刹那果断开火，到迅速用身体掩护人质转移，并把自己的防弹衣托给人质，再到端着机枪奋勇射击，直到弹夹打孔，抽出匕首准备肉搏…… 这过程中的每一声嘶吼、每一次躲闪、每一喘粗气，都让我感同身受，相信她就是真的特种兵，在无比真实的反恐战斗中，压力巨大，但又无比坚韧！</p><p>果不其然，默契配合后逃出人质营才只是个开始，令人痛心的 flag 终于还是被击倒了 —— 倒在车上挣扎的机枪手石头面部血肉模糊，惊慌开车的佟莉估计也和我一样没看清发生了什么，只想着快点找个安全屋先躲起来！进了屋也一刻不能喘息，给石头一针吗啡后，医疗兵立马要给人质救治，石头忍着左脸打烂的剧痛依旧神勇地还击…… 但我们的英雄依然是肉体凡胎，回扔手雷会炸没双手，躲闪不及也会击穿喉咙…… 而女兵佟莉再一次展现出她的无比坚强，拼了命地还击，拼了命地捂住石头的动脉，又拼了命地用沾满鲜血的手指拨糖给石头 —— 吃糖不疼，我们回家！</p><p>泪目之余，旁边的观众着急地嘟囔：“狙击手打完了怎么还不过去救佟莉他们！”谁承想我们的通信兵在后方竟意外地与另一波敌人遭遇，没开几枪就要拼死肉搏，憋着最后一口气去挂上基站的电池！村外广阔的沙漠上，牛逼如苏式坦克，干练如蛟龙队长，猛虎斗群狼之下，最后也让指导员和记者打得手脚不能动弹。</p><p>自己人的死伤就这么一个接一个，赤裸裸、血淋淋地发生在我们眼前，“犯我中华者，虽远必诛”这种毛式豪言壮语，恐怕在很多人心中要打上一个大大的问号了。</p><p>我看了看时间，想着一般进度条到这儿，可能要神秘武器开挂才能搞个大新闻了。没想到蛟龙一队在仅剩４人的情况下，依然忍着巨大的悲痛，分工有序地再赴沙场！我们的战士身着飞行衣翱翔天空，配着铿锵有力的鼓点，我胸中燃起的豪情丝毫不逊与《战狼２》中那些豪言壮语！还有佟莉拼死裸绞壮汉后，控制运输机驾驶舱时那句流利的英语：“Claim down! I’m chinese military, start the engine, now!”让我再次涌出喜悦的泪水 —— 中国军队更现代化了，祖国更强大了！不是来自特效，也不是出于意淫，而是这近两个半小时实实在在的一招一式、一言一行！</p><p>最后，再次感谢海政、林导和全体演职人员历尽艰苦，为国人带来了一部极为写实的反恐反战大片，拔高国产电影水准之余，也充分展现了中国海军陆战队的团队英姿！</p>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> military </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>22 行 JS 写个图片格式转换器</title>
      <link href="/programming/image-format-converter/"/>
      <url>/programming/image-format-converter/</url>
      
        <content type="html"><![CDATA[<p>【原文链接】<a href="https://my.oschina.net/TechQuery/blog/1630721" target="_blank" rel="noopener">https://my.oschina.net/TechQuery/blog/1630721</a></p><p>虽然国内大厂（豆瓣、微信公众平台 等）已支持 Google 推出的 <strong>WebP 图片格式</strong>来进一步优化性能，但其它多数软件平台还是只支持 BMP、GIF、JPEG、PNG 等经典格式，有时临时找个支持 WebP 的<strong>图片格式转换器</strong>也挺麻烦的，不如抄起键盘就是一把梭~</p><hr><h2 id="通用源码"><a href="#通用源码" class="headerlink" title="通用源码"></a>通用源码</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> context2D <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  self<span class="token punctuation">.</span>convertImage <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>image<span class="token punctuation">,</span> format<span class="token punctuation">)</span> <span class="token punctuation">{</span>    context2D<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>    canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> image<span class="token punctuation">.</span>naturalWidth<span class="token punctuation">;</span>    canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> image<span class="token punctuation">.</span>naturalHeight<span class="token punctuation">;</span>    image<span class="token punctuation">.</span>crossOrigin <span class="token operator">=</span> <span class="token string">'Anonymous'</span><span class="token punctuation">;</span>    context2D<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">'image/'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>format <span class="token operator">||</span> <span class="token string">'png'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><p>直接用 <a href="https://www.google.cn/chrome/" target="_blank" rel="noopener">Google Chrome™</a> 调试器的 Source Snippets（源码片段）功能运行 ——</p><p><img src="https://static.oschina.net/uploads/img/201803/07210728_7XZk.png" alt="代码用法"></p><p>若有<a href="https://segmentfault.com/q/1010000002459456" target="_blank" rel="noopener">跨域相关报错</a>，可自行访问该图片的服务器首页，用自创的 <code>&lt;img src=&quot;path/to/image&quot; /&gt;</code> 加载待转换图片 ——</p><p><img src="https://static.oschina.net/uploads/img/201803/07004925_icAE.png" alt="跨域技巧"></p><pre class=" language-javascript"><code class="language-javascript">my_img<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token function">convertImage</span><span class="token punctuation">(</span>my_img<span class="token punctuation">,</span> <span class="token string">'jpeg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>上述代码运行完毕后，网页右键菜单中的<strong>图片另存为</strong>功能保存的就是 JPEG 格式的图片。</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> image </tag>
            
            <tag> format </tag>
            
            <tag> converter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>北欧、日式混搭风 —— 森岩居</title>
      <link href="/other/nordic-japanese-style-home/"/>
      <url>/other/nordic-japanese-style-home/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th align="center">房</th><th align="center">地</th><th align="center">墙</th><th align="center">门</th><th align="center">柜</th><th align="center">灯</th></tr></thead><tbody><tr><td align="center">厨</td><td align="center">磨砂砖、灰</td><td align="center">磨砂砖、浅灰</td><td align="center">全透玻璃木框</td><td align="center">原木</td><td align="center"></td></tr><tr><td align="center">卫</td><td align="center">磨砂砖、灰</td><td align="center">磨砂砖、浅灰</td><td align="center">磨砂玻璃木框</td><td align="center">原木</td><td align="center"></td></tr><tr><td align="center">阳</td><td align="center">磨砂砖、灰</td><td align="center">磨砂砖、浅灰</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">卧</td><td align="center">浅原木地板</td><td align="center">暖灰</td><td align="center">浅原木</td><td align="center">原木</td><td align="center">柔光、吸顶</td></tr><tr><td align="center">厅</td><td align="center">浅原木地板</td><td align="center">暖灰</td><td align="center">浅原木</td><td align="center">原木</td><td align="center">柔光、吸顶 / 吊顶</td></tr></tbody></table><p>【参考方案】</p><ol><li> <a href="https://www.kujiale.com/design/3FO4K7NG8GGK" target="_blank" rel="noopener">https://www.kujiale.com/design/3FO4K7NG8GGK</a></li><li> <a href="https://www.kujiale.com/design/3FO4K7MMU7AI" target="_blank" rel="noopener">https://www.kujiale.com/design/3FO4K7MMU7AI</a></li><li> <a href="https://www.kujiale.com/design/3FO4K7OELTL0" target="_blank" rel="noopener">https://www.kujiale.com/design/3FO4K7OELTL0</a></li><li> <a href="https://www.kujiale.com/design/3FO4K7OEBP5Y" target="_blank" rel="noopener">https://www.kujiale.com/design/3FO4K7OEBP5Y</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> design </tag>
            
            <tag> home </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【体验】室内设计 Web 编辑器</title>
      <link href="/other/interior-design-web-editor/"/>
      <url>/other/interior-design-web-editor/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th align="center">品牌</th><th align="center">账号体系</th><th align="center">前端技术</th><th align="center">特色功能</th></tr></thead><tbody><tr><td align="center"><a href="https://www.kujiale.com/" target="_blank" rel="noopener">酷家乐</a></td><td align="center">电邮 / 手机号 + QQ / 微信 / 微博</td><td align="center">WebGL (THREE.js)</td><td align="center">报价清单</td></tr><tr><td align="center"><a href="http://www.fuwo.com/" target="_blank" rel="noopener">爱福窝</a></td><td align="center">电邮 / 手机号 + QQ / 微信 / 微博 / 淘宝</td><td align="center">Flash (Stage3D)</td><td align="center"></td></tr><tr><td align="center"><a href="http://www.shejijia.com/" target="_blank" rel="noopener">居然设计家</a></td><td align="center">电邮 / 手机号</td><td align="center">SVG、WebGL (THREE.js)</td><td align="center"></td></tr><tr><td align="center"><a href="https://zh.floorplanner.com/" target="_blank" rel="noopener">Floorplanner</a></td><td align="center">电邮 + Google</td><td align="center">Canvas / WebGL (Pixi.JS)</td><td align="center"></td></tr><tr><td align="center"><a href="https://planoplan.com/cn/" target="_blank" rel="noopener">Planoplan</a></td><td align="center">电邮</td><td align="center">Canvas、ASM.JS</td><td align="center"></td></tr><tr><td align="center"><a href="http://yun.gstarcad.com/" target="_blank" rel="noopener">浩辰云图</a></td><td align="center">电邮 / 手机号 + QQ / 微信 / 微博</td><td align="center">Flash</td><td align="center">网页 CAD</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> cloud </tag>
            
            <tag> design </tag>
            
            <tag> SaaS </tag>
            
            <tag> editor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【入门】ZeroNet —— 更接近 互联网的本质</title>
      <link href="/community/connect-zero-net/"/>
      <url>/community/connect-zero-net/</url>
      
        <content type="html"><![CDATA[<h2 id="一键安装"><a href="#一键安装" class="headerlink" title="一键安装"></a>一键安装</h2><p><a href="https://zeronet.io/" target="_blank" rel="noopener">https://zeronet.io/</a></p><h2 id="入门文章"><a href="#入门文章" class="headerlink" title="入门文章"></a>入门文章</h2><ul><li>官方文档中文翻译 —— <a href="http://127.0.0.1:43110/docs.ysc3839.bit/" target="_blank" rel="noopener">http://127.0.0.1:43110/docs.ysc3839.bit/</a></li><li>《零网教学》Wiki —— <a href="http://127.0.0.1:43110/1NCezLP8aXjABVreBB1CKGPub2tKTtyhWU/" target="_blank" rel="noopener">http://127.0.0.1:43110/1NCezLP8aXjABVreBB1CKGPub2tKTtyhWU/</a></li><li>ZN 站文件上传方案 —— <a href="http://127.0.0.1:43110/typeblog.bit/?Post:8:ZeroBlog+%E6%89%A9%E5%B1%95:+%E6%9B%B4%E6%96%B9%E4%BE%BF%E7%9A%84%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0" target="_blank" rel="noopener">http://127.0.0.1:43110/typeblog.bit/?Post:8:ZeroBlog+%E6%89%A9%E5%B1%95:+%E6%9B%B4%E6%96%B9%E4%BE%BF%E7%9A%84%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0</a></li><li>传统网站、ZeroNet 整合方案 —— <a href="http://127.0.0.1:43110/1LcQTyUYkq3n458rkHVQxhHyvUdmSYFURd/?Post:14:ZeroNet%E7%BB%93%E6%9E%84%E8%A7%A3%E6%9E%90/%E5%85%A8%E5%8A%A8%E6%80%81%E7%BD%91%E7%AB%99/%E6%97%A0%E9%99%90%E5%88%B6%E7%BD%91%E7%AB%99" target="_blank" rel="noopener">http://127.0.0.1:43110/1LcQTyUYkq3n458rkHVQxhHyvUdmSYFURd/?Post:14:ZeroNet%E7%BB%93%E6%9E%84%E8%A7%A3%E6%9E%90/%E5%85%A8%E5%8A%A8%E6%80%81%E7%BD%91%E7%AB%99/%E6%97%A0%E9%99%90%E5%88%B6%E7%BD%91%E7%AB%99</a></li><li>在树莓派中运行 ZeroNet —— <a href="http://127.0.0.1:43110/dreamcreator108.bit/?Post:1:%E5%9C%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%AD%E8%BF%90%E8%A1%8CZeroNet" target="_blank" rel="noopener">http://127.0.0.1:43110/dreamcreator108.bit/?Post:1:%E5%9C%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%AD%E8%BF%90%E8%A1%8CZeroNet</a></li></ul><h2 id="精品网站"><a href="#精品网站" class="headerlink" title="精品网站"></a>精品网站</h2><ul><li>ZeroNet 搜索引擎列表 —— <a href="http://127.0.0.1:43110/zerofind.bit/" target="_blank" rel="noopener">http://127.0.0.1:43110/zerofind.bit/</a></li><li>新 GFW 论坛 —— <a href="http://127.0.0.1:43110/NewGFWTalk.bit/" target="_blank" rel="noopener">http://127.0.0.1:43110/NewGFWTalk.bit/</a></li><li>公共政策参与 &amp; 公民权利 —— <a href="http://127.0.0.1:43110/1F1MV279QLu3mLWpD4KMBy7dNvZGss6YiJ/" target="_blank" rel="noopener">http://127.0.0.1:43110/1F1MV279QLu3mLWpD4KMBy7dNvZGss6YiJ/</a></li><li>BT 中文资源论坛 —— <a href="http://127.0.0.1:43110/btsynchina.bit/" target="_blank" rel="noopener">http://127.0.0.1:43110/btsynchina.bit/</a></li><li>编程狗的博客 —— <a href="http://127.0.0.1:43110/1Ld63vNnfm5SEUTbsYxB7XGo7kHQVUGghU/" target="_blank" rel="noopener">http://127.0.0.1:43110/1Ld63vNnfm5SEUTbsYxB7XGo7kHQVUGghU/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Community </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Internet </tag>
            
            <tag> ZeroNet </tag>
            
            <tag> P2P </tag>
            
            <tag> Web </tag>
            
            <tag> GFW </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ReadMe</title>
      <link href="/readme/"/>
      <url>/readme/</url>
      
        <content type="html"><![CDATA[<h1 id="南漂一卒"><a href="#南漂一卒" class="headerlink" title="南漂一卒"></a>南漂一卒</h1><pre><code>余生于“己巳民运”翌年阳春，长于稷下学宫光辉照耀之地，而今偏安蜀国蓉城一隅。纵享天府之安逸乎？概效同乡武侯，牧益州而心怀天下也！</code></pre><h2 id="自画像"><a href="#自画像" class="headerlink" title="自画像"></a>自画像</h2><ul><li><p><strong>软粉</strong>：历经 DOS、Win 95、Win 98、Office 97、Win 2000、Office 2000、Win XP、Office 2003、Win 7、Win 8.1、Win 10，追随二十载，终成 MVP</p></li><li><p><strong>小黑粉</strong>：ThinkPad R40、T420i、T440s、25 AE —— 曾经沧海难为水，除却巫山不是云</p></li><li><p><strong>谷粉</strong>：2001 年从用 Google 开始知道“搜索引擎”，09 年后用过腾讯搜搜、搜狗、必应，而后曲线救国终回谷歌怀抱</p></li><li><p><strong>米粉</strong>：没有比 MIUI 更适合天朝的移动端操作系统</p></li><li><p><strong>李纳丝儿</strong>：2005 年从申请邮寄 10 CD 的 Ubuntu 首版 4.10 开始接触开源软件，历经 Fedora、共创、CentOS、Debian、Linux Mint、Slax、Puppy、雨林木风，最终在 Deepin 转战 Linux 社区时上船</p></li><li><p><strong>大不了三丝儿</strong>：HTML/DOM、CSS、JS 原生标准支持者，致力于 <strong>Web 应用开发</strong></p></li><li><p><strong>NG 欧巴</strong>：高中建过社团，大学建过社团部门，现打杂于多个<strong>公益技术社区</strong></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Profile </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Intel XDK 跨平台 App 开发初体验</title>
      <link href="/development/intel-xdk-preview/"/>
      <url>/development/intel-xdk-preview/</url>
      
        <content type="html"><![CDATA[<p>用 <strong>HTML/CSS/JavaScript</strong> 进行<strong>移动端 App 跨平台开发</strong>的开源旗手非 <a href="http://phonegap.com/" target="_blank" rel="noopener"><strong>Adobe PhoneGap</strong></a> 莫属，它的开源核心 <a href="http://cordova.apache.org/" target="_blank" rel="noopener"><strong>Apache Cordova</strong></a> 就像 Apple Safari、Google Chrome 的 Webkit 内核一样，驱动着国内外不少同类解决方案（如 <a href="https://software.intel.com/zh-cn/intel-xdk" target="_blank" rel="noopener"><strong>Intel XDK</strong></a>、<a href="http://www.wex5.com/" target="_blank" rel="noopener">WeX5</a>）。</p><p>但 PhoneGap 在开发时也有一些问题 ——</p><ol><li> Adobe 官方支持 PhoneGap  的 IDE 是 Dreamweaver（开源人肯定优先选开源产品）</li><li> <a href="https://play.google.com/store/apps/details?id=com.adobe.phonegap.app" target="_blank" rel="noopener">Android 开发者真机预览 App</a>  没有官方下载链接（天朝将会上线的“谷歌市场”估计也不会同步 Google Play 所有的 App）</li><li> Adobe 官方提供的 <a href="https://build.phonegap.com/" target="_blank" rel="noopener">PhoneGap 构建服务</a> <em>私有 App 免费服务配额</em> 很有限</li><li> Android 开发时用 <a href="https://crosswalk-project.org/" target="_blank" rel="noopener"><strong>CrossWalk</strong></a>（Intel 开源的 Chromium 核心）替换 <strong>WebView</strong> 要自己折腾</li><li> 群众反映的<a href="https://github.com/phonegap/phonegap-app-developer/issues/287#issuecomment-210536817" target="_blank" rel="noopener">某些问题</a> 似乎解决缓慢</li></ol><p>上述这些问题正好被“牛逼”已久的 <strong>Intel XDK</strong> 解决了~</p><iframe    style="width: 100%; height: 80vh" frameborder="0" allowfullscreen    src="http://player.youku.com/embed/XNzU1Njk1MDU2"></iframe><p><a href="http://v.youku.com/v_show/id_XNzU1Njk1MDU2.html" target="_blank" rel="noopener">（在新网页中观看视频）</a></p><p>Intel XDK 整个上手过程还是比较顺利 ——</p><ol><li> 官网下载<em>安装包</em>（<a href="https://software.intel.com/zh-cn/intel-xdk-early-access" target="_blank" rel="noopener">中文版</a>还不是稳定版）</li><li> 安装、启动后注册 <strong>Intel 开发者账号</strong></li><li>从 <em>Template  或 Samples and Demos *中选一项创建应用（建议勾选“use *</em>App Designer**”，有些模板有<a href="https://software.intel.com/en-us/xdk/docs/app-designer-overview" target="_blank" rel="noopener">“所见即所得”的<strong>拖拽 UI 控件模式</strong></a>）<br> <img src="http://static.oschina.net/uploads/img/201606/22103244_0LsM.png" alt="App 设计器"></li><li>写好自己的程序后即可到 <em>Build  选项卡</em>中选择 <strong>App 打包目标平台<br> <img src="http://static.oschina.net/uploads/img/201606/22095531_mjsf.png" alt="构建前提示添加数字证书"></strong></li><li>点击 IDE 界面上的提示链接，会跳转到 App Build Settings 页面，再其中完善一下 App 相关信息（若需要 <strong>CrossWalk</strong> 来优化性能，请选择 <strong>Embedded  运行时</strong>，因为 <em>Shared</em> 只会从 <em>Google Play</em> 自动安装共享库，天朝用户只能用 20+ MB 的<strong>静态编译版 APK</strong> 了……）<br> <img src="http://static.oschina.net/uploads/img/201606/22103245_mgR9.png" alt="Build 设置 CrossWalk 优化"><br> <img src="http://static.oschina.net/uploads/img/201606/22103245_rwa7.png" alt="CrossWalk 运行时类型"></li><li>在上述界面中还需要新建一个** Developer Certificate**（相关信息的填写可参考  <em>Android 数字证书</em>  的生成方法）<br> <img src="http://static.oschina.net/uploads/img/201606/22095532_hmWi.png" alt="添加开发者证书"><br> <img src="http://static.oschina.net/uploads/img/201606/22095532_wQHX.png" alt="新建 Android 数字证书 KeyStore"></li><li>再回到 <em>Build 选项卡</em>时可能会提示你 Unlock Certificate，输入之前设置的<strong>证书密钥</strong>即可<br> <img src="http://static.oschina.net/uploads/img/201606/22095540_E52L.png" alt="Build 选项卡"></li><li>终于，我们可以点击期盼已久 <em>Start Builds 按钮</em>了（<em>等进度条</em>是天朝擅长的……）<br> <img src="http://static.oschina.net/uploads/img/201606/22095550_kFO2.png" alt="等待构建"></li><li>构建成功后，你注册开发者账号的邮箱会收到一封内含下载链接的电邮（直接在 IDE 界面上点<em>下载按钮</em>是单线程下载……）<br> <img src="http://static.oschina.net/uploads/space/2016/0621/182435_X0QM_1171658.png" alt="App 构建下载链接"></li></ol><p>Android App 安装、运行亲测结果 ——</p><ol><li> <strong>ARM 架构版</strong>：在 <a href="http://www.miui.com/" target="_blank" rel="noopener"><strong>MIUI</strong></a> v7 上需开启“安装未知来源的应用”，运行正常！~</li><li> <strong>x86 架构版</strong>：<a href="http://www.bluestacks.com/" target="_blank" rel="noopener">BlueStacks</a> 虚拟机安装成功，运行黑屏……</li></ol><p>【参考文档】</p><ol><li> <a href="http://cordova.apache.org/docs/zh-cn/5.4.0/" target="_blank" rel="noopener">Apache Cordova 官方中文文档</a></li><li> <a href="https://software.intel.com/en-us/xdk/docs/using-build-tab-and-build-settings" target="_blank" rel="noopener">Intel XDK 构建选项</a></li><li> <a href="https://software.intel.com/en-us/xdk/docs/intel-xdk-certificate-management" target="_blank" rel="noopener">Intel XDK 开发者账号证书管理</a></li><li> <a href="http://docs.apicloud.com/Dev-Guide/Android-License-Application-Guidance" target="_blank" rel="noopener">Android 数字证书概述</a></li><li> <a href="http://www.micmiu.com/lang/java/keytool-start-guide/" target="_blank" rel="noopener">Java 证书工具讲解</a></li><li> <a href="http://www.ourunix.org/post/146.html" target="_blank" rel="noopener">Android 应用签名机制</a></li><li> <a href="https://software.intel.com/en-us/xdk/docs/choosing-crosswalk-build-options-shared-or-embedded" target="_blank" rel="noopener">Intel CrossWalk 运行时的选择</a></li><li> <a href="https://software.intel.com/en-us/xdk/docs/building-cordova-ios-app-with-wkwebview" target="_blank" rel="noopener">通过 Cordova 插件添加 iOS WKWebView 支持</a></li><li> <a href="https://software.intel.com/en-us/articles/cordova-whitelisting-with-intel-xdk-for-ajax-and-launching-external-apps" target="_blank" rel="noopener">Intel XDK AJAX 域名白名单</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> Intel </tag>
            
            <tag> SDK </tag>
            
            <tag> IDE </tag>
            
            <tag> PhoneGap </tag>
            
            <tag> Cordova </tag>
            
            <tag> Mobile </tag>
            
            <tag> Software </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>再战“所见即所得”富文本编辑器（附 原创工具）</title>
      <link href="/programming/rich-text-editor-hacker/"/>
      <url>/programming/rich-text-editor-hacker/</url>
      
        <content type="html"><![CDATA[<h2 id="未尽的事业"><a href="#未尽的事业" class="headerlink" title="未尽的事业"></a>未尽的事业</h2><p>2014 年底，我为了搞定 <strong>电邮签名档</strong> 做了次<a href="http://my.oschina.net/TechQuery/blog/350954" target="_blank" rel="noopener">专门的研发</a>，非常有收获！但它依然有个<a href="http://my.oschina.net/TechQuery/blog/350954#OSC_h1_2" target="_blank" rel="noopener">坑</a> ——</p><blockquote><p><strong>外置 CSS 样式</strong> 要人工一一填到 HTML 标签的 style 属性中，图片也要自己转换成 <strong>Base64 编码</strong>……</p></blockquote><p>2016 年初，我又遇到需要手写 <strong>富文本电邮</strong>的一件事，手工转换一个大网页 —— 累个半死…… 同时，女友也在为“<strong>微信公众平台 图文消息编辑器</strong> 不能在文章正文加超链接”发愁，想用我当年开发的 <a href="http://gitee.com/Tech_Query/iBookmarkLet#-%E5%AF%8C%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E6%A1%86-%E8%87%AA%E5%AE%9A%E4%B9%89-html-%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5-%E6%8F%92%E5%85%A5%E5%B7%A5%E5%85%B7-v0-4" target="_blank" rel="noopener"><strong>HTML 代码注入工具</strong></a> 除了学会写 静态网页代码，还是要我手工转换为 <strong>单一网页格式</strong>（类似 Internet Explorer <code>.mht</code>）……</p><h2 id="编程马拉松"><a href="#编程马拉松" class="headerlink" title="编程马拉松"></a>编程马拉松</h2><p>基于不久前对 <a href="http://gitee.com/Tech_Query/iQuery/commit/5f2e05676e16b33a81f0639c760738ec9763d487" target="_blank" rel="noopener"><strong>CSS 对象</strong>的深入研究</a>，我用之前两个夜晚的饭后休息时间完成了一个 <a href="http://gitee.com/Tech_Query/iBookmarkLet#-%E7%BD%91%E9%A1%B5%E4%BB%A3%E7%A0%81-%E8%A1%8C%E5%86%85%E5%8C%96-v0-2" target="_blank" rel="noopener"><strong>网页代码 行内化工具</strong></a>的开发、测试 ——</p><pre class=" language-javascript"><code class="language-javascript">javascript<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>BOM<span class="token punctuation">,</span> DOM<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/* ---------- 生效样式 ---------- */</span>  <span class="token keyword">function</span> <span class="token function">Tag_Computed_CSS</span><span class="token punctuation">(</span>iDOM<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>      JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>iDOM<span class="token punctuation">.</span>ownerDocument<span class="token punctuation">.</span>defaultView<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>iDOM<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/* ---------- 原始样式 ---------- */</span>  <span class="token keyword">var</span> Tag_Style <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>    iSandBox <span class="token operator">=</span> DOM<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'iframe'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  iSandBox<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>  DOM<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>iSandBox<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">function</span> <span class="token function">Tag_Default_CSS</span><span class="token punctuation">(</span>iTagName<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> _DOM_ <span class="token operator">=</span> iSandBox<span class="token punctuation">.</span>contentWindow<span class="token punctuation">.</span>document<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Tag_Style<span class="token punctuation">[</span>iTagName<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">var</span> iDefault <span class="token operator">=</span> _DOM_<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>iTagName<span class="token punctuation">)</span><span class="token punctuation">;</span>      _DOM_<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>iDefault<span class="token punctuation">)</span><span class="token punctuation">;</span>      Tag_Style<span class="token punctuation">[</span>iTagName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">Tag_Computed_CSS</span><span class="token punctuation">(</span>iDefault<span class="token punctuation">)</span><span class="token punctuation">;</span>      _DOM_<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>iDefault<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> Tag_Style<span class="token punctuation">[</span>iTagName<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/* ---------- 变更样式 ---------- */</span>  <span class="token keyword">function</span> <span class="token function">Tag_Customed_CSS</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> iCustomed <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>      iComputed <span class="token operator">=</span> <span class="token function">Tag_Computed_CSS</span><span class="token punctuation">(</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      iDefault <span class="token operator">=</span> <span class="token function">Tag_Default_CSS</span><span class="token punctuation">(</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>tagName<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> iAttr <span class="token keyword">in</span> iComputed<span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>        <span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>iAttr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>        <span class="token operator">!</span>iAttr<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/^(moz|webkit|ms)/</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>        iComputed<span class="token punctuation">[</span>iAttr<span class="token punctuation">]</span> <span class="token operator">!=</span> iDefault<span class="token punctuation">[</span>iAttr<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span>        <span class="token operator">!</span>iAttr<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/width|height/i</span><span class="token punctuation">)</span>      <span class="token punctuation">)</span>        iCustomed<span class="token punctuation">[</span>iAttr<span class="token punctuation">]</span> <span class="token operator">=</span> iComputed<span class="token punctuation">[</span>iAttr<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> iCustomed<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/* ---------- 内联化核心 ---------- */</span>  BOM<span class="token punctuation">.</span>CSS_Inline <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> iStyle <span class="token operator">=</span> <span class="token function">Tag_Customed_CSS</span><span class="token punctuation">(</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> iAttr <span class="token keyword">in</span> iStyle<span class="token punctuation">)</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">[</span>iAttr<span class="token punctuation">]</span> <span class="token operator">=</span> iStyle<span class="token punctuation">[</span>iAttr<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  BOM<span class="token punctuation">.</span>Image_Inline <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>iDOM<span class="token punctuation">,</span> iWaterMark<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> _Image_ <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      iCanvas <span class="token operator">=</span> DOM<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    _Image_<span class="token punctuation">.</span>crossOrigin <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> iContext <span class="token operator">=</span> iCanvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    _Image_<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      iCanvas<span class="token punctuation">.</span>width <span class="token operator">=</span> _Image_<span class="token punctuation">.</span>width<span class="token punctuation">;</span>      iCanvas<span class="token punctuation">.</span>height <span class="token operator">=</span> _Image_<span class="token punctuation">.</span>height<span class="token punctuation">;</span>      iContext<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>_Image_<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>iWaterMark<span class="token punctuation">)</span> <span class="token punctuation">{</span>        iContext<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token string">'20px sans-serif'</span><span class="token punctuation">;</span>        iContext<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'white'</span><span class="token punctuation">;</span>        iContext<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span>iWaterMark<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> _Image_<span class="token punctuation">.</span>height <span class="token operator">-</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      iDOM<span class="token punctuation">.</span>src <span class="token operator">=</span> iCanvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">'image/png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      _Image_ <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    _Image_<span class="token punctuation">.</span>src <span class="token operator">=</span> iDOM<span class="token punctuation">.</span>src<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  BOM<span class="token punctuation">.</span>Web_Inline <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> iTag <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> iTag<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>      <span class="token keyword">switch</span> <span class="token punctuation">(</span>iTag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>tagName<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">case</span> <span class="token string">'meta'</span><span class="token punctuation">:</span>        <span class="token keyword">case</span> <span class="token string">'style'</span><span class="token punctuation">:</span>        <span class="token keyword">case</span> <span class="token string">'script'</span><span class="token punctuation">:</span>        <span class="token keyword">case</span> <span class="token string">'iframe'</span><span class="token punctuation">:</span>          iTag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>iTag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'img'</span><span class="token punctuation">:</span>          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">Image_Inline</span><span class="token punctuation">(</span>iTag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">default</span><span class="token punctuation">:</span>          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">CSS_Inline</span><span class="token punctuation">(</span>iTag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token keyword">return</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>innerHTML<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">/* ---------- 使用流程 ---------- */</span>  BOM<span class="token punctuation">.</span><span class="token function">Web_Inline</span><span class="token punctuation">(</span>DOM<span class="token punctuation">.</span>body<span class="token punctuation">,</span> BOM<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">'图片水印文字：'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  BOM<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    DOM<span class="token punctuation">.</span>body<span class="token punctuation">.</span>textContent <span class="token operator">=</span> DOM<span class="token punctuation">.</span>body<span class="token punctuation">.</span>innerHTML<span class="token punctuation">;</span>    BOM<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'请全选、复制当前显示的所以代码~'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> self<span class="token punctuation">.</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> editor </tag>
            
            <tag> rich-text </tag>
            
            <tag> injection </tag>
            
            <tag> hacker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【原创】Docker LAMP 入门</title>
      <link href="/development/docker-lamp/"/>
      <url>/development/docker-lamp/</url>
      
        <content type="html"><![CDATA[<p><strong>LAMP 服务器套件</strong>（Linux + Apache + MySQL + PHP）早已成为 <strong>Web 应用开发者</strong> 最常用的<strong>部署环境</strong>，几乎是入门必修课，但它的搭建、维护也是对初学者很艰难的一课。虽然有 <strong>XAMPP</strong> 这样的跨平台一键安装包，但它们主要是为了方便搭建开发环境，并不适合直接用在<strong>线上生产环境</strong>。</p><p>自己辛辛苦苦写好的网站上线都费事，简直太沮丧了…… 于是，各种各样的<strong>云计算服务</strong>应运而生，从各个层面解决不同水平 Web 应用开发者的部署需求。下面是从服务底层到用户顶层依次列出的常见<strong>云计算服务模式</strong> ——</p><ul><li><strong>IaaS</strong>（<strong>基础设施</strong> 即 服务）—— 云主机/服务器</li><li><strong>CaaS</strong>（<strong>应用容器</strong> 即 服务）—— Docker</li><li><strong>PaaS</strong>（<strong>技术平台</strong> 即 服务）—— AWS、GAE、SAE 等</li><li><strong>BaaS</strong>（<strong>后端 API</strong> 即 服务）—— LeanCloud 等</li><li><strong>SaaS</strong>（<strong>应用软件</strong> 即 服务）—— Tower、Worktile 等</li></ul><p>在云计算时代到来之前，还有几种常见的部署环境 ——</p><ul><li>类似 PaaS 的<strong>网站空间</strong> —— 本质上是一个操作系统中用 Apache 之类的 HTTP 服务器，对不同的域名 指向不同的<strong>网站根目录</strong>，所以上传网站文件只能用 FTP 读写你自己的目录，网站程序也不能读写本站之外的服务器目录，同机的所有网站共享一个 IP 地址</li><li>类似 IaaS 的 <strong>VPS（虚拟主机）</strong> —— 同样是独享一个操作系统的虚拟机，但究其<strong>宿主环境</strong>，一个 VPS 只能运行在一个真实的服务器主机上，而云主机则运行在一群真机协作抽象成的一个超级服务器（<strong>服务器集群</strong>）。后者的硬件资源 超高利用率、真机热插拔（便于扩展、容错）等特性，是前者望尘莫及的；但对它们的用户来说，包括 <strong>独享 IP</strong>、<strong>SSH</strong>（远程登录命令行）等关键特性在内的使用方法几乎完全一样</li></ul><p>至于 <strong>Docker</strong>，它旨在<strong>把 Web 应用程序和它的标准运行环境（由一个配置文件描述）打包为一个虚拟机镜像</strong>，让部署、迁移、扩展一键搞定，无需开发人员、运维人员手动配置云主机，因“开发与部署的环境不完全相同”而产生的 Bug 也没有了。</p><hr><p>构建一个 <strong>Ubuntu + LAMP</strong> 镜像的 <strong>Dockerfile</strong> 配置文件 ——</p><pre class=" language-dockerfile"><code class="language-dockerfile">FROM ubuntu:14.04MAINTAINER test_32 "shiy2008@gmail.com"RUN apt-get update; \    apt-get install -y lamp-server^;COPY . /var/wwwEXPOSE 80CMD /etc/init.d/apache2 restart</code></pre><hr><p>【参考文档】</p><ol><li> <a href="http://blog.csdn.net/we_shell/article/details/38445979" target="_blank" rel="noopener">http://blog.csdn.net/we_shell/article/details/38445979</a></li><li> <a href="http://blog.sina.com.cn/s/blog_7380598c0100wdl5.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_7380598c0100wdl5.html</a></li><li> <a href="http://segmentfault.com/q/1010000000693754" target="_blank" rel="noopener">http://segmentfault.com/q/1010000000693754</a></li><li> <a href="http://dockerfile.github.io/#/ubuntu" target="_blank" rel="noopener">http://dockerfile.github.io/#/ubuntu</a></li><li> <a href="http://www.alauda.cn/2015/07/12/dockerfiledemo/" target="_blank" rel="noopener">http://www.alauda.cn/2015/07/12/dockerfiledemo/</a></li><li> <a href="http://dockerpool.com/static/books/docker_practice/" target="_blank" rel="noopener">http://dockerpool.com/static/books/docker_practice/</a></li><li> <a href="https://docs.docker.com/" target="_blank" rel="noopener">https://docs.docker.com/</a></li><li> <a href="http://www.aixq.com/post-328.html" target="_blank" rel="noopener">http://www.aixq.com/post-328.html</a></li><li> <a href="http://blog.sina.com.cn/s/blog_4dc988240102vj8a.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_4dc988240102vj8a.html</a></li><li><a href="http://www.docker.org.cn/book/docker.html" target="_blank" rel="noopener">http://www.docker.org.cn/book/docker.html</a></li><li><a href="http://my.oschina.net/ylchou/blog/522381" target="_blank" rel="noopener">http://my.oschina.net/ylchou/blog/522381</a></li><li><a href="https://github.com/docker/kitematic/issues/1037" target="_blank" rel="noopener">https://github.com/docker/kitematic/issues/1037</a></li><li><a href="http://www.oschina.net/question/1171658_2177501" target="_blank" rel="noopener">http://www.oschina.net/question/1171658_2177501</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> LAMP </tag>
            
            <tag> server </tag>
            
            <tag> cloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【爱之深】Linux Deepin 2014 试用札记</title>
      <link href="/maintenance/deepin-2014/"/>
      <url>/maintenance/deepin-2014/</url>
      
        <content type="html"><![CDATA[<p>【原文链接】<a href="https://my.oschina.net/TechQuery/blog/380778" target="_blank" rel="noopener">https://my.oschina.net/TechQuery/blog/380778</a></p><h2 id="高度赞扬"><a href="#高度赞扬" class="headerlink" title="高度赞扬"></a>高度赞扬</h2><p>作为一个关注 <strong>中国开源社区、深度技术论坛</strong> 近十年的技术员、程序员，私以为 —— <strong>Linux Deepin 2014</strong> 是 第一款真正意义上中国人（主导开发）的 PC 操作系统！也是<strong>继 Ubuntu 之后，全球第二个真正好用的 Linux 桌面发行版</strong>！</p><p>主要理由 ——</p><ol><li> <strong>稳定的专职开发团队</strong>（感谢 深度技术论坛 创始人 刘闻欢）</li><li> <strong>与国际开源社区接轨的运作模式</strong></li><li> <strong>国内外程序员的大力支持</strong></li><li> <strong>自主研发、简洁易用的安装工具、桌面环境</strong></li></ol><h2 id="较大的-Bug"><a href="#较大的-Bug" class="headerlink" title="较大的 Bug"></a>较大的 Bug</h2><h3 id="官方安装-U-盘制作工具-名成实败"><a href="#官方安装-U-盘制作工具-名成实败" class="headerlink" title="官方安装 U 盘制作工具 名成实败"></a>官方安装 U 盘制作工具 名成实败</h3><ul><li>【环境】自攒台式机 —— Intel 奔腾 64bit 双核、ASUS 主板、SATA - IDE 兼容模式、WinXP Pro 32bit SP3<br>简体中文版</li><li>【操作】制作 Deepin 2014.2 64bit 安装 U 盘</li><li>【症状】U 盘格式化被格式化为一个 8MB 的隐藏分区、一个占用剩余空间、没有任何文件的 Windows 可用分区，开机引导时（传统 BIOS）只有最低分辨率黑屏闪光标（EFI 引导就直接跳过 U 盘进本机系统了）</li></ul><h3 id="WUBI-安装等进度条时，介绍动画不显示"><a href="#WUBI-安装等进度条时，介绍动画不显示" class="headerlink" title="WUBI 安装等进度条时，介绍动画不显示"></a>WUBI 安装等进度条时，介绍动画不显示</h3><ul><li>【环境】同上</li><li>【操作、症状】如题</li></ul><h3 id="QQ-6-7-in-CrossOver-运行几分钟就崩溃"><a href="#QQ-6-7-in-CrossOver-运行几分钟就崩溃" class="headerlink" title="QQ 6.7 (in CrossOver) 运行几分钟就崩溃"></a>QQ 6.7 (in CrossOver) 运行几分钟就崩溃</h3><ul><li>【环境】Deepin 2014.2 64bit （WUBI 安装版）（32bit 安装后无此软件）</li><li>【症状】QQ 能正常运行客户端账号首次登陆后的所有操作，消息窗口也能正常使用，但几分钟后（即使 登陆后没有任何操作），QQ 自己的崩溃反馈窗口打开，并可以用它来重启，但重新登陆后故障反复</li><li>【解决】临时用 <strong>DeepWINE-QQ 2012 国际版</strong></li></ul><h3 id="系统更新不可用"><a href="#系统更新不可用" class="headerlink" title="系统更新不可用"></a>系统更新不可用</h3><ul><li>【环境】Deepin 2014.2（WUBI 安装版）、上海交通大学 镜像（自动测速选择的）、中国大陆官方稳定源（手动选择）</li><li>【操作】用 <strong>深度软件中心</strong> 更新系统软件包</li><li>【症状】<strong>本机软件源包数据库</strong>更新完之后，32bit 显示系统是最新的，64bit 能显示 187 个更新包，点击【全部升级】后报错“系统软件包依赖损坏”（刷新则反复同样的错误），如下图 ——<br><img src="http://static.oschina.net/uploads/space/2015/0228/144405_Zmtb_1171658.png" alt="Deepin 软件包依赖损坏"></li></ul><h3 id="官方-WUBI-安装工具-重启后不能进-Deepin"><a href="#官方-WUBI-安装工具-重启后不能进-Deepin" class="headerlink" title="官方 WUBI 安装工具 重启后不能进 Deepin"></a>官方 WUBI 安装工具 重启后不能进 Deepin</h3><ul><li>【环境】ThinkPad T440s、Intel 酷睿 i5、混合硬盘、Win 8.1 Lenovo OEM 中文版、Deepin 2014.2 64bit（本文写作环境）</li><li>【操作】WUBI 安装提示成功后点“现在重启”后直接 真重启，无人干预时直接进 Windows，且过程无任何变化（即 没有可以选择进 Deepin 的界面），在 msconfig 中也看不到 Deepin 的引导项</li><li>【解决】进 BIOS 的 Boot 列表看到“Deepin”，于是关掉“<strong>Secure Boot</strong>”并重启，引导前按【F 12】打开“<strong>BIOS/EFI 引导菜单</strong>”，选 Deepin 进入</li><li>【建议】即使不能操作 EFI 设置，也应该在 WUBI 安装成功后显示一个后续操作简介，用 Google 搜索 linuxdeepin.com 完全没有 <strong>EFI/Win 8 双系统教程</strong>……（Google 全网也没有 <strong>ThinkPad Win 8、Deepin 双系统教程</strong>）</li></ul><h3 id="GRUB-2-引导界面-Deepin-美化版不显示"><a href="#GRUB-2-引导界面-Deepin-美化版不显示" class="headerlink" title="GRUB 2 引导界面 Deepin 美化版不显示"></a>GRUB 2 引导界面 Deepin 美化版不显示</h3><ul><li>【环境】同上（官方 WUBI 安装）</li><li>【操作】每次进系统时，Deepin 美化过的 <strong>GRUB 引导界面</strong> 都不能显示，只显示 黑底白字的默认界面</li></ul><h3 id="快捷键设置【Windows-Logo-键-方向键】无效"><a href="#快捷键设置【Windows-Logo-键-方向键】无效" class="headerlink" title="快捷键设置【Windows Logo 键 + 方向键】无效"></a>快捷键设置【Windows Logo 键 + 方向键】无效</h3><ul><li>【环境】同上（官方 WUBI 安装）</li><li>【操作】系统设置面板中设置【最大化/恢复窗口】快捷键为【Super + ↑/↓】</li><li>【症状】虽显示设置成功，但实际各种窗口均只响应方向键的操作</li><li>【建议】<strong>WinNT 6.x 内核</strong>开始标配的<strong>【Windows Logo 键 + 方向/数字键】系列快捷键</strong> 非常方便，特别是“配合数字键来启动/切换任务栏上的程序”，对<strong>键盘党</strong>来说非常实用！Deepin 的首批铁杆用户必定是一批<strong>开源程序员</strong>，希望能先服务好这样的人群～</li></ul><h2 id="UED-细节不足"><a href="#UED-细节不足" class="headerlink" title="UED 细节不足"></a>UED 细节不足</h2><h3 id="键盘按键太灵"><a href="#键盘按键太灵" class="headerlink" title="键盘按键太灵"></a>键盘按键太灵</h3><ul><li>【环境】同上</li><li>【现象】键盘<strong>组合快捷键</strong> 快速重复响应（如 Google Chrome 中【Ctrl + Tab】切换选项卡，按一下换好几个）</li><li>【解决】在系统全局设置面板的【键盘和语言】中把“重复延迟”、“重复速率”均调到中间值</li><li>【建议】各种设备参数默认值 参考 <strong>ThinkPad、Mac Book</strong></li></ul><h3 id="默认工作区快捷键与-Google-Chrome-冲突"><a href="#默认工作区快捷键与-Google-Chrome-冲突" class="headerlink" title="默认工作区快捷键与 Google Chrome 冲突"></a>默认工作区快捷键与 Google Chrome 冲突</h3><ul><li>【环境】同上</li><li>【现象】键盘按【Ctrl + 数字键】<strong>切换 Chrome 网页标签</strong> 被系统全局默认快捷键“切换到工作区 n”拦截</li><li>【解决】在系统全局设置面板的【快捷键 - 工作区】中把“切换到工作区 1~4”的设置清空</li><li>【建议】<strong>系统全局默认快捷键</strong> 避开 常用软件的默认设置</li></ul><h3 id="触控板双指滚动方向反了"><a href="#触控板双指滚动方向反了" class="headerlink" title="触控板双指滚动方向反了"></a>触控板双指滚动方向反了</h3><ul><li>【环境】同上</li><li>【解决】在系统全局设置面板的【鼠标和触摸板】中开启“自然滚动”（但此时“边缘滚动”的方向也改了）</li><li>【建议】同上（私以为，在设计的层面 —— <strong>双指滚动</strong> 是从模拟“人手抓握后拖拉”的动作设计出来的，可以叫做“<strong>自然滚动</strong>”；而 <strong>单指边缘滚动</strong> 旨在模拟“鼠标指针拖拽控件滚动条”，应该沿用以前的方向习惯。）</li></ul>]]></content>
      
      
      <categories>
          
          <category> Maintenance </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Deepin </tag>
            
            <tag> system </tag>
            
            <tag> software </tag>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电子邮件签名档 HTML 手写时的折腾（附 原创工具）</title>
      <link href="/programming/email-signature-html-tool/"/>
      <url>/programming/email-signature-html-tool/</url>
      
        <content type="html"><![CDATA[<p>【原文链接】<a href="https://my.oschina.net/TechQuery/blog/350954" target="_blank" rel="noopener">https://my.oschina.net/TechQuery/blog/350954</a></p><h2 id="入职必修课"><a href="#入职必修课" class="headerlink" title="入职必修课"></a>入职必修课</h2><p>鄙人作为码农进厂开电脑的第一件正事就是 —— 在 Foxmail 客户端中设置自己<strong>公司的域名邮箱</strong>，并加上看起来还挺<strong>专业的签名档</strong>。</p><p>接收欢迎新人的邮件，选中老员工的签名档并复制粘贴到写邮件设置中，修改个人信息并保存 —— 这似乎很轻松，但…… 职位一处的文字稍长一些就显示不全…… 旁边那么多空白竟然不能<strong>自适应</strong>？！作为一个<strong>前端程序猿</strong>，简直不能忍 —— 改代码！</p><p>虽然 Foxmail 客户端的<strong>富文本编辑器</strong>几乎和 QQ 邮箱一样（原本也是同一个团队的作品嘛），但竟然不支持 <strong>HTML 格式化</strong>…… 还好在线代码格式化工具很多。但格式化之后，代码依然很烂 —— 各种样式还用 HTML 4 的标签属性，style 属性也是一坨一坨地堆着，姓名、职位、手机、电邮等竟然还用 <code>&lt;input type=&quot;text&quot; /&gt;</code>……</p><p>Foxmail 自己加上去的全局样式不是用 <code>&lt;style /&gt;</code> 写在最前面吗？这么乱的代码，哥怎么有心情改？！写个简称得了，管你们看不看得懂~</p><h2 id="收拾“旧河山”"><a href="#收拾“旧河山”" class="headerlink" title="收拾“旧河山”"></a>收拾“旧河山”</h2><p>俩月后，公司新产品上线，要在签名档已有的俩二维码中间再加一个 —— 公司网管兄用 DreamWeaver 死活改不好，于是来找我帮忙…… 那就不客气了 —— 直接用自己的 CSS 框架的布局模块来重写，那叫一个畅爽~</p><p>写完之后在浏览器里测试完美，便即刻粘贴到 Foxmail 中 —— 样式没了？！</p><p>再尝试用 Foxmail <strong>邮件模板</strong> —— 样式又没了？！</p><p>只好用浏览器调试器一个一个元素地把<strong>外联样式</strong>填回 style 属性中……</p><p>再试 Outlook —— 还是没样式！连 <strong>DataURL 形式的图片</strong>都叉了？！</p><h2 id="前端猿的-Hack"><a href="#前端猿的-Hack" class="headerlink" title="前端猿的 Hack"></a>前端猿的 Hack</h2><p>最后只好登录公司<strong>邮件服务的 Web 版</strong>，在账号选项中设置签名档 —— 连 <strong>HTML 源码编辑模式</strong>都没了……</p><p>那就只能把 新签名档源码在浏览器中打开，再全选、复制、粘贴到邮件系统编辑框 —— 测试邮件基本正常，除了<strong>逼死强迫症的水平滚动条</strong>……（马丹，这不在同事面前显得我很没水平？！）</p><p><img src="http://static.oschina.net/uploads/space/2014/1201/154333_73Tz_1171658.png" alt="Web Mail 签名档设置"></p><p>仔细查看测试邮件的源代码之后发现 —— <strong>所有 style 的长度数值都从百分比变成了像素绝对值</strong>……</p><p>我想应该是 浏览器等客户端程序在复制 HTML 等富文本时把相对值转换成了绝对值，可以用下面的原创程序初步验证 ——</p><pre class=" language-javascript"><code class="language-javascript"><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>BOM<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">var</span> isIE <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>BOM<span class="token punctuation">.</span>document<span class="token punctuation">.</span>attachEvent<span class="token punctuation">;</span>  BOM<span class="token punctuation">.</span>CB_getData <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>cType<span class="token punctuation">,</span> CallBack<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> This <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span>      EM <span class="token operator">=</span> isIE        <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token string">'attachEvent'</span><span class="token punctuation">,</span> <span class="token string">'onpaste'</span><span class="token punctuation">,</span> <span class="token string">'detachEvent'</span><span class="token punctuation">]</span>        <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'addEventListener'</span><span class="token punctuation">,</span> <span class="token string">'paste'</span><span class="token punctuation">,</span> <span class="token string">'removeEventListener'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>cType <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>isIE<span class="token punctuation">)</span>      <span class="token keyword">switch</span> <span class="token punctuation">(</span>cType<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">case</span> <span class="token string">'text'</span><span class="token punctuation">:</span>          cType <span class="token operator">=</span> <span class="token string">'text/plain'</span><span class="token punctuation">;</span>          <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'url'</span><span class="token punctuation">:</span>          cType <span class="token operator">=</span> <span class="token string">'text/unicode'</span><span class="token punctuation">;</span>          <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'html'</span><span class="token punctuation">:</span>          cType <span class="token operator">=</span> <span class="token string">'text/html'</span><span class="token punctuation">;</span>          <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    This<span class="token punctuation">.</span>document<span class="token punctuation">[</span>EM<span class="token punctuation">[</span>cType <span class="token operator">?</span> <span class="token number">0</span> <span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">(</span>      EM<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> PO <span class="token operator">=</span> isIE <span class="token operator">?</span> This <span class="token punctuation">:</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> CBR <span class="token operator">=</span> CallBack<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>          isIE <span class="token operator">?</span> PO<span class="token punctuation">.</span>srcElement <span class="token punctuation">:</span> PO<span class="token punctuation">.</span>target<span class="token punctuation">,</span>          PO<span class="token punctuation">.</span>clipboardData<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span>cType<span class="token punctuation">)</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>CBR<span class="token punctuation">)</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>isIE<span class="token punctuation">)</span> PO<span class="token punctuation">.</span>event<span class="token punctuation">.</span>returnValue <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>          <span class="token keyword">else</span> PO<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      isIE <span class="token operator">?</span> undefined <span class="token punctuation">:</span> <span class="token boolean">false</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//  粘贴事件发生时，回调函数的首个参数 将赋值为 剪贴板中的内容</span><span class="token function">CB_getData</span><span class="token punctuation">(</span><span class="token string">'HTML'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>Content<span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Content<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//  返回 false 阻止浏览器 事件默认行为，即不在用户粘贴的地方输出 剪贴板内容（同 jQuery）</span></code></pre><p>网管小哥只好把浏览器窗口拉窄一些再复制粘贴 —— 至少看起来没啥问题了……（但我知道在一些领导的轻薄笔记本、平板电脑等更窄的屏幕上还会溢出啊）</p><p>最后的最后 —— 在 <strong>Web 邮箱的签名档设置框</strong>中右击打开调试器，直接编辑它的 <strong>HTML 文档片段</strong>，把签名档源码粘贴进去再返回来保存 —— 发出来的测试邮件源码完整保留了<strong>长度值的百分比原值</strong>~</p><p><img src="http://static.oschina.net/uploads/space/2014/1201/154419_B5gz_1171658.png" alt="Web Mail 签名档编辑框内容代码注入"></p><h2 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h2><p>按理说，<strong>E-mail</strong> 这种兼容 HTML 格式的<strong>经典互联网标准</strong> 应该至少支持 HTML 4 + CSS 2 吧？哥手写的布局系统基于 display: table(-cell) 就不行？</p><p>Outlook、Foxmail 等 <strong>Windows 邮件客户端</strong> 渲染 HTML 应该直接调用本机的 <strong>IE 内核</strong>吧？哥用的可是 <strong>IE 11</strong> 啊~</p><p>咋就这么多不兼容的坑坑呢……？</p><hr><p>其实很多<strong>网站系统的富文本编辑框</strong> 都没有 <strong>HTML 代码编辑模式</strong>，直接复制粘贴<strong>富文本片段</strong>经常会格式出错（比如 <strong>微信公众平台</strong>编辑模式的图文消息发布模块）……</p><p>在后台程序过滤之外，<strong>前端工程师</strong> 能一劳永逸地解决此类问题的方法只有 —— 用 <strong>JavaScript</strong> 做 <strong>HTML 代码片段注入</strong>……</p><p>所以我写了个 <strong>Bookmarklet</strong>（网页浏览器 <strong>书签栏按钮小工具</strong>）发布在 <a href="http://gitee.com/Tech_Query/iBookmarkLet" target="_blank" rel="noopener"><strong>Git@OSC</strong></a> 上，欢迎大家折腾、<strong>提 issue</strong>~</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ol><li> <a href="http://www.topcss.org/?tag=document-activeelement" target="_blank" rel="noopener">http://www.topcss.org/?tag=document-activeelement</a></li><li> <a href="http://www.cnblogs.com/hughtxp/p/3939976.html" target="_blank" rel="noopener">http://www.cnblogs.com/hughtxp/p/3939976.html</a></li><li> <a href="http://blog.csdn.net/lee_magnum/article/details/17761441" target="_blank" rel="noopener">http://blog.csdn.net/lee_magnum/article/details/17761441</a></li><li> <a href="http://www.cnblogs.com/xzhang/p/3968204.html" target="_blank" rel="noopener">http://www.cnblogs.com/xzhang/p/3968204.html</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> toolkit </tag>
            
            <tag> HTML </tag>
            
            <tag> Email </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【原创】Google 站内搜索小工具</title>
      <link href="/maintenance/google-search-tool-insite/"/>
      <url>/maintenance/google-search-tool-insite/</url>
      
        <content type="html"><![CDATA[<p>对于<strong>经常在互联网中查资料去开拓自己的未知领域</strong>的人们来说，<strong>搜索引擎</strong>绝对是必备工具 —— 它不但能在全球浩瀚的信息海洋中对我们需要的信息“大海捞针”，也能有针对性地对某个网站的内容进行搜寻，让我们能不受<strong>内容源网站自身内容组织结构</strong>的负面影响，迅速找到需要的内容。</p><p>虽然 <strong>站内搜索</strong> 早已是搜索引擎的标配，但大多做得不好，经常一篇文章已经在某网站发布了比较久了，但就是搜不出来……（特别是 中途调整过<strong>网址结构</strong>的网站，比如 路径格式变更、换子域名、换主域名 等）</p><p>目前为止，<strong>Google</strong> 依然是 难得可用且很好用的<strong>站内搜索引擎</strong>，这一点我在以前原创的<a href="http://bbs.fyscu.com/forum.php?mod=redirect&goto=findpost&ptid=2711&pid=58461" target="_blank" rel="noopener">【Google 站内搜索助手】v0.9</a>的发布帖中早有论述~</p><p>因为我对上述工具的<a href="/programming/google-search-tool/">上游代码</a>做了升级，所以也重构了这个工具。而且，我把自己写的所有实用的 <strong>Bookmarklet</strong> 整合成了一个<a href="http://gitee.com/Tech_Query/iBookmarkLet/" target="_blank" rel="noopener"><strong>开源项目 iBookmarkLet</strong></a> 发布，所以博文里就只贴出<strong>安装版代码</strong> ——</p><!-- prettier-ignore-start --><pre class=" language-javascript"><code class="language-javascript">javascript<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>BOM<span class="token punctuation">,</span>DOM<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">function</span> <span class="token function">iRegExp</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> c<span class="token operator">=</span><span class="token regex">/ /</span><span class="token punctuation">;</span><span class="token keyword">return</span> c<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span>c<span class="token punctuation">}</span><span class="token keyword">var</span> DN<span class="token punctuation">,</span>HN<span class="token punctuation">,</span>trim<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> a<span class="token operator">=</span><span class="token function">iRegExp</span><span class="token punctuation">(</span><span class="token string">"(^s*)|(s*$)"</span><span class="token punctuation">,</span><span class="token string">"g"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> b<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>SS<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span>WF<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> TN<span class="token punctuation">,</span>TA<span class="token punctuation">,</span>N<span class="token punctuation">,</span>n<span class="token punctuation">,</span>IS<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>TN <span class="token keyword">in</span><span class="token punctuation">{</span>input<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span>textarea<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">try</span><span class="token punctuation">{</span>TA<span class="token operator">=</span>DOM<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span>TN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>N <span class="token keyword">in</span> TA<span class="token punctuation">)</span><span class="token keyword">with</span><span class="token punctuation">(</span>TA<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">)</span>IS<span class="token operator">=</span><span class="token function">trim</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>selectionStart<span class="token punctuation">,</span>selectionEnd<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>EO<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token operator">==</span>IS<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>IS<span class="token operator">=</span><span class="token function">trim</span><span class="token punctuation">(</span>DOM<span class="token punctuation">.</span>selection<span class="token operator">?</span>DOM<span class="token punctuation">.</span>selection<span class="token punctuation">.</span><span class="token function">createRange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">:</span>DOM<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token operator">==</span>IS<span class="token punctuation">)</span><span class="token keyword">for</span><span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>n<span class="token operator">&lt;</span>WF<span class="token punctuation">.</span>length<span class="token punctuation">;</span>n<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">try</span><span class="token punctuation">{</span>IS<span class="token operator">=</span>arguments<span class="token punctuation">.</span><span class="token function">callee</span><span class="token punctuation">(</span>WF<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>EO<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token operator">!=</span>IS<span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">}</span><span class="token keyword">return</span> IS<span class="token punctuation">}</span><span class="token punctuation">(</span>BOM<span class="token punctuation">.</span>frames<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token string">""</span><span class="token operator">!=</span>SS<span class="token operator">?</span><span class="token punctuation">(</span>HN<span class="token operator">=</span>BOM<span class="token punctuation">.</span>location<span class="token punctuation">.</span>hostname<span class="token punctuation">,</span>DN<span class="token operator">=</span>HN<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/(edu|net|org|com|gov)\.\w+$/</span><span class="token punctuation">)</span><span class="token operator">?</span>HN<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/(\w+\.){2}\w+$/</span><span class="token punctuation">)</span><span class="token punctuation">:</span>HN<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/\w+\.\w+$/</span><span class="token punctuation">)</span><span class="token punctuation">,</span>BOM<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"https://wen.lu/search?newwindow=1&amp;q="</span><span class="token operator">+</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span><span class="token punctuation">[</span>SS<span class="token punctuation">,</span><span class="token string">" site:"</span><span class="token punctuation">,</span>DN<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"_blank"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>BOM<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">"您未选中任何网页中的文字……\n\n\n『确定』进入问题反馈；『取消』即退出本工具。"</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span>BOM<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">"输入框中的是『运行环境』信息，请直接复制它们，按『确认』即可访问 原作者主页～"</span><span class="token punctuation">,</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">)</span><span class="token punctuation">,</span>BOM<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"http://www.fyscu.com/"</span><span class="token punctuation">,</span><span class="token string">"_blank"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>BOM<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"【Google 站内搜索助手 v1.0】\n\n(C)2013-2014  四川大学·飞扬俱乐部·研发部"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>top<span class="token punctuation">,</span>top<span class="token punctuation">.</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><!-- prettier-ignore-end -->]]></content>
      
      
      <categories>
          
          <category> Maintenance </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Google </tag>
            
            <tag> browser </tag>
            
            <tag> bookmark </tag>
            
            <tag> toolkit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【浏览器小工具】墙内 Google 划词搜索</title>
      <link href="/programming/google-search-tool/"/>
      <url>/programming/google-search-tool/</url>
      
        <content type="html"><![CDATA[<p>天朝<strong>习大大</strong>继位之后，政坛、社会暗流更加汹涌，各路高官皆有落马者…… <strong>好在江山依然稳固，彭阿姨依然美丽</strong>，但我<strong>大谷歌</strong>却牺牲更大，义务封口近一岁，重放新声遥无期……</p><p>好在我朝素不缺<strong>侠肝义胆之士</strong>，树立数个<strong>海外镜像</strong>来招魂，其魂最真者 —— <a href="http://www.v2ex.com/t/126018" target="_blank" rel="noopener">某 <strong>V2EX</strong> 大神的一声<strong>天问</strong> —— 路在何方！~</a></p><p>鄙人不才，仅能<strong>低调地传承侠客的义举</strong> —— 把大神的招魂镜像封装在<a href="http://bbs.fyscu.com/forum.php?mod=viewthread&tid=3677" target="_blank" rel="noopener">我之前做的一个 Bookmarklet</a> 中，并再次优化，方便大家使用 ——</p><h2 id="安装用代码"><a href="#安装用代码" class="headerlink" title="安装用代码"></a>安装用代码</h2><!-- prettier-ignore-start --><pre class=" language-javascript"><code class="language-javascript">javascript<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>BOM<span class="token punctuation">,</span>DOM<span class="token punctuation">,</span>SL<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">function</span> <span class="token function">iRegExp</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> c<span class="token operator">=</span><span class="token regex">/ /</span><span class="token punctuation">;</span><span class="token keyword">return</span> c<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span>c<span class="token punctuation">}</span><span class="token keyword">var</span> trim<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> a<span class="token operator">=</span><span class="token function">iRegExp</span><span class="token punctuation">(</span><span class="token string">"(^s*)|(s*$)"</span><span class="token punctuation">,</span><span class="token string">"g"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> b<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>SS<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span>WF<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> TN<span class="token punctuation">,</span>TA<span class="token punctuation">,</span>N<span class="token punctuation">,</span>n<span class="token punctuation">,</span>IS<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>TN <span class="token keyword">in</span><span class="token punctuation">{</span>input<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span>textarea<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">try</span><span class="token punctuation">{</span>TA<span class="token operator">=</span>DOM<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span>TN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>N <span class="token keyword">in</span> TA<span class="token punctuation">)</span><span class="token keyword">with</span><span class="token punctuation">(</span>TA<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">)</span>IS<span class="token operator">=</span><span class="token function">trim</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>selectionStart<span class="token punctuation">,</span>selectionEnd<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>EO<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token operator">==</span>IS<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>IS<span class="token operator">=</span><span class="token function">trim</span><span class="token punctuation">(</span>DOM<span class="token punctuation">.</span>selection<span class="token operator">?</span>DOM<span class="token punctuation">.</span>selection<span class="token punctuation">.</span><span class="token function">createRange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">:</span>DOM<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token operator">==</span>IS<span class="token punctuation">)</span><span class="token keyword">for</span><span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>n<span class="token operator">&lt;</span>WF<span class="token punctuation">.</span>length<span class="token punctuation">;</span>n<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">try</span><span class="token punctuation">{</span>IS<span class="token operator">=</span>arguments<span class="token punctuation">.</span><span class="token function">callee</span><span class="token punctuation">(</span>WF<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>EO<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token operator">!=</span>IS<span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">}</span><span class="token keyword">return</span> IS<span class="token punctuation">}</span><span class="token punctuation">(</span>BOM<span class="token punctuation">.</span>frames<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token string">""</span><span class="token operator">!=</span>SS<span class="token operator">?</span>BOM<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"https://wen.lu/search?newwindow=1&amp;lr=lang_"</span><span class="token punctuation">,</span>SL<span class="token punctuation">,</span><span class="token string">"&amp;q="</span><span class="token punctuation">,</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>SS<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"_blank"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>BOM<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">"您未选中任何网页中的文字……\n\n\n『确定』进入问题反馈；『取消』即退出本工具。"</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span>BOM<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">"输入框中的是『运行环境』信息，请直接复制它们，按『确认』即可访问 原作者主页～"</span><span class="token punctuation">,</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">)</span><span class="token punctuation">,</span>BOM<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"http://www.fyscu.com/"</span><span class="token punctuation">,</span><span class="token string">"_blank"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>BOM<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"【Google 中文搜索助手 v0.9】\n\n(C)2013-2014  四川大学·飞扬俱乐部·研发部"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>top<span class="token punctuation">,</span>top<span class="token punctuation">.</span>document<span class="token punctuation">,</span><span class="token string">"zh-CN"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><!-- prettier-ignore-end --><h2 id="开发用源码"><a href="#开发用源码" class="headerlink" title="开发用源码"></a>开发用源码</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>BOM<span class="token punctuation">,</span> DOM<span class="token punctuation">,</span> SL<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">function</span> <span class="token function">iRegExp</span><span class="token punctuation">(</span>Pattern<span class="token punctuation">,</span> Mode<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> RegEx <span class="token operator">=</span> <span class="token regex">/ /</span><span class="token punctuation">;</span>    RegEx<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>Pattern<span class="token punctuation">,</span> Mode<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> RegEx<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">var</span> trim <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> RegEx <span class="token operator">=</span> <span class="token function">iRegExp</span><span class="token punctuation">(</span><span class="token string">'(^s*)|(s*$)'</span><span class="token punctuation">,</span> <span class="token string">'g'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span>Str<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> Str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>RegEx<span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> SS <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>WF<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> IS <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> TN <span class="token keyword">in</span> <span class="token punctuation">{</span> input<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> textarea<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token keyword">try</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> TA <span class="token operator">=</span> DOM<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span>TN<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> N <span class="token keyword">in</span> TA<span class="token punctuation">)</span>          <span class="token keyword">with</span> <span class="token punctuation">(</span>TA<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">)</span> IS <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>selectionStart<span class="token punctuation">,</span> selectionEnd<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">EO</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>IS <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">)</span>      IS <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span>        DOM<span class="token punctuation">.</span>selection          <span class="token operator">?</span> DOM<span class="token punctuation">.</span>selection<span class="token punctuation">.</span><span class="token function">createRange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text          <span class="token punctuation">:</span> DOM<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>IS <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">)</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> n <span class="token operator">&lt;</span> WF<span class="token punctuation">.</span>length<span class="token punctuation">;</span> n<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//  以下异常处理 很神奇地 绕过了 IE、Firefox 对 iframe 的跨域安全限制～</span>        <span class="token comment" spellcheck="true">//  但可能在它们中运行时会有一瞬间的卡顿……</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>          IS <span class="token operator">=</span> arguments<span class="token punctuation">.</span><span class="token function">callee</span><span class="token punctuation">(</span>WF<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">EO</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>IS <span class="token operator">!=</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token keyword">return</span> IS<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>BOM<span class="token punctuation">.</span>frames<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>SS <span class="token operator">!=</span> <span class="token string">''</span><span class="token punctuation">)</span>    BOM<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>      <span class="token punctuation">[</span>        <span class="token string">'https://wen.lu/search?newwindow=1&amp;lr=lang_'</span><span class="token punctuation">,</span>        SL<span class="token punctuation">,</span>        <span class="token string">'&amp;q='</span><span class="token punctuation">,</span>        <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>SS<span class="token punctuation">)</span>      <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token string">'_blank'</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>    BOM<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span>      <span class="token string">'您未选中任何网页中的文字……\n\n\n『确定』进入问题反馈；『取消』即退出本工具。'</span>    <span class="token punctuation">)</span>  <span class="token punctuation">)</span> <span class="token punctuation">{</span>    BOM<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span>      <span class="token string">'输入框中的是『运行环境』信息，请直接复制它们，按『确认』即可访问 原作者主页～'</span><span class="token punctuation">,</span>      navigator<span class="token punctuation">.</span>userAgent    <span class="token punctuation">)</span><span class="token punctuation">;</span>    BOM<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'http://www.fyscu.com/'</span><span class="token punctuation">,</span> <span class="token string">'_blank'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span>    BOM<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span>      <span class="token string">'【Google 中文搜索助手 v0.9】\n\n(C)2013-2014  四川大学·飞扬俱乐部·研发部'</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>top<span class="token punctuation">,</span> top<span class="token punctuation">.</span>document<span class="token punctuation">,</span> <span class="token string">'zh-CN'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="为何还坚持-Google-？"><a href="#为何还坚持-Google-？" class="headerlink" title="为何还坚持 Google ？"></a>为何还坚持 Google ？</h2><ol><li> <strong>棱镜门丑闻</strong>虽然揭露了<strong>美帝在国际互联网隐藏多年的大木马</strong>，Google 等业界典范也未能幸免…… 但一个<strong>世界最大的移民国家对自由执着的追求</strong>，让那些阴暗面总是不能得逞太久；而<strong>天朝的秘密</strong>大多都躺在几十年后还不一定能解密的档案中……</li><li> <strong>百度</strong>这样一个<strong>唯利是图、没啥技术</strong>的搜索引擎，<strong>搜索结果中假冒伪劣、坑蒙拐骗丛生，人为和谐比比皆是</strong> —— 叫“中国黄页”还差不多~</li><li> <strong>搜狐搜狗</strong>虽是<strong>中国大陆搜索引擎中最用心、最努力的</strong>，2010 年和<strong>腾讯搜搜</strong>一样，接收了一些<strong>谷歌中国危机</strong>中跳槽的人才，2014 年又全面合并人才储备不少的搜搜，加上<strong>搜狗输入法</strong>多年积累的<strong>语料数据、技术创新</strong>，已经很棒了~ 但个人近两年对它的持续使用发现 —— <strong>垃圾站屏蔽、小众站抓取</strong> 还有较大进步空间……</li><li> <strong>奇虎 360 搜索</strong> 有点像当年 115 搜索 等<strong>结果二次筛选</strong>的网站，虽然它一直力行用户体验第一的产品原则，但作为 3B 大战的直接产物，加上 360 一直屡教不改的“<strong>流氓推广</strong>”方式，让我没法信任它提供的内容……</li></ol>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Google </tag>
            
            <tag> browser </tag>
            
            <tag> bookmark </tag>
            
            <tag> toolkit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【笔记】移动 Web 前端开发 那些蛋疼事儿</title>
      <link href="/development/web-mobile-issues/"/>
      <url>/development/web-mobile-issues/</url>
      
        <content type="html"><![CDATA[<p><strong>移动 Web 前端开发的设备适配</strong> 现在有种“<strong>兼容老 IE</strong>”的蛋疼感…… 希望刚刚正式颁布的 <strong>HTML 5 标准</strong>可以让这种现在渐渐改变，而不是又一个“Web 噩梦时代”的开始……</p><p>以下是一些<strong>优秀参考文章</strong>的搜集，是<strong>本人肉眼过滤</strong>于 sogou.com；而非 URL 的条目则是 <strong>肉测心得</strong> ——</p><h2 id="响应式设计入门"><a href="#响应式设计入门" class="headerlink" title="响应式设计入门"></a>响应式设计入门</h2><ol><li> <a href="http://www.cnblogs.com/vajoy/p/3903591.html" target="_blank" rel="noopener">http://www.cnblogs.com/vajoy/p/3903591.html</a></li><li> <a href="http://jinjuan.me/webapp-share-zte/" target="_blank" rel="noopener">http://jinjuan.me/webapp-share-zte/</a></li></ol><h2 id="User-Agent（网页客户端-标识符）"><a href="#User-Agent（网页客户端-标识符）" class="headerlink" title="User Agent（网页客户端 标识符）"></a>User Agent（网页客户端 标识符）</h2><ul><li><a href="http://outofmemory.cn/code-snippet/1901/mobile-liulanqi-Us" target="_blank" rel="noopener">http://outofmemory.cn/code-snippet/1901/mobile-liulanqi-Us</a></li></ul><h2 id="Meta-Viewport-标签（移动设备适配元数据）"><a href="#Meta-Viewport-标签（移动设备适配元数据）" class="headerlink" title="Meta/Viewport 标签（移动设备适配元数据）"></a>Meta/Viewport 标签（移动设备适配元数据）</h2><ol><li> <a href="http://sowm.cn/wpjam/article/5FBDBB430CC9E424299B61EC03BF5C42.html" target="_blank" rel="noopener">http://sowm.cn/wpjam/article/5FBDBB430CC9E424299B61EC03BF5C42.html</a></li><li> <a href="http://wiki.eoeandroid.com/Targeting_Screens_from_Web_Apps" target="_blank" rel="noopener">http://wiki.eoeandroid.com/Targeting_Screens_from_Web_Apps</a></li><li> <a href="http://wanglery.iteye.com/blog/1926747" target="_blank" rel="noopener">http://wanglery.iteye.com/blog/1926747</a></li><li> <a href="http://www.cnblogs.com/stephenykk/p/3822441.html" target="_blank" rel="noopener">http://www.cnblogs.com/stephenykk/p/3822441.html</a></li></ol><h2 id="屏幕像素比"><a href="#屏幕像素比" class="headerlink" title="屏幕像素比"></a>屏幕像素比</h2><ul><li><a href="http://www.zhangxinxu.com/wordpress/2012/08/window-devicepixelratio/" target="_blank" rel="noopener">http://www.zhangxinxu.com/wordpress/2012/08/window-devicepixelratio/</a></li></ul><h2 id="Target-DensityDPI（安卓中等屏幕专用）"><a href="#Target-DensityDPI（安卓中等屏幕专用）" class="headerlink" title="Target DensityDPI（安卓中等屏幕专用）"></a>Target DensityDPI（安卓中等屏幕专用）</h2><ul><li><a href="http://blog.csdn.net/fengri5566/article/details/9414599" target="_blank" rel="noopener">http://blog.csdn.net/fengri5566/article/details/9414599</a></li></ul><h2 id="WebView-怪癖（微信内置浏览器-等）"><a href="#WebView-怪癖（微信内置浏览器-等）" class="headerlink" title="WebView 怪癖（微信内置浏览器 等）"></a>WebView 怪癖（<strong><em>微信内置浏览器</em></strong> 等）</h2><ol><li> <strong>JavaScript 动态设置 Viewport</strong> 时 <code>device-width</code> 无效，需手动指定 具体像素值（如 320）</li><li> 其 <strong>device-dpi</strong> ≠ medium-dpi（设置无效），最佳效果是手动指定为 <code>medium-dpi</code></li><li> <strong>Android</strong> 有些版本的 <strong>WebView 组件</strong>中 <code>&lt;input type=&quot;file&quot; /&gt;</code> 无效，它的调用从底层被拦截，在 JavaScript 层面无异常抛出，程序没被中断</li></ol><h2 id="position-fixed-大坑"><a href="#position-fixed-大坑" class="headerlink" title="position: fixed 大坑"></a>position: fixed 大坑</h2><ol><li> <a href="https://github.com/maxzhang/maxzhang.github.com/issues/11" target="_blank" rel="noopener">https://github.com/maxzhang/maxzhang.github.com/issues/11</a></li><li> <a href="https://github.com/maxzhang/maxzhang.github.com/issues/2" target="_blank" rel="noopener">https://github.com/maxzhang/maxzhang.github.com/issues/2</a></li><li> <a href="https://github.com/maxzhang/maxzhang.github.com/issues/7" target="_blank" rel="noopener">https://github.com/maxzhang/maxzhang.github.com/issues/7</a></li></ol><h2 id="移动版网页布局技巧"><a href="#移动版网页布局技巧" class="headerlink" title="移动版网页布局技巧"></a>移动版网页布局技巧</h2><ol><li> <a href="http://www.w3cplus.com/mobile/mobile-terminal-refactoring-mobile-layout.html" target="_blank" rel="noopener">http://www.w3cplus.com/mobile/mobile-terminal-refactoring-mobile-layout.html</a></li><li> <a href="http://blog.csdn.net/hursing/article/details/9186199" target="_blank" rel="noopener">http://blog.csdn.net/hursing/article/details/9186199</a></li></ol><hr><h2 id="移动端网页调试-——-HTTP"><a href="#移动端网页调试-——-HTTP" class="headerlink" title="移动端网页调试 —— HTTP"></a>移动端网页调试 —— HTTP</h2><h3 id="公网（weinre-花生壳）"><a href="#公网（weinre-花生壳）" class="headerlink" title="公网（weinre + 花生壳）"></a>公网（weinre + 花生壳）</h3><ol><li> <a href="http://www.cnblogs.com/lhb25/p/debug-mobile-site-and-app-with-weinre.html" target="_blank" rel="noopener">http://www.cnblogs.com/lhb25/p/debug-mobile-site-and-app-with-weinre.html</a></li><li> <a href="http://segmentfault.com/q/1010000000941321" target="_blank" rel="noopener">http://segmentfault.com/q/1010000000941321</a></li><li> <a href="http://service.oray.com/question/2480.html" target="_blank" rel="noopener">http://service.oray.com/question/2480.html</a></li></ol><h3 id="内网（UC-浏览器开发者版-WiFi）"><a href="#内网（UC-浏览器开发者版-WiFi）" class="headerlink" title="内网（UC 浏览器开发者版 + WiFi）"></a>内网（UC 浏览器开发者版 + WiFi）</h3><ol><li> <a href="http://www.uc.cn/business/developer/" target="_blank" rel="noopener">http://www.uc.cn/business/developer/</a></li><li> <a href="http://plus.uc.cn/document/webapp/doc5.html" target="_blank" rel="noopener">http://plus.uc.cn/document/webapp/doc5.html</a></li></ol><h3 id="内网（Firefox-42-WiFi）"><a href="#内网（Firefox-42-WiFi）" class="headerlink" title="内网（Firefox 42 + WiFi）"></a>内网（Firefox 42 + WiFi）</h3><ol><li> <a href="https://developer.mozilla.org/zh-TW/docs/Tools/Remote_Debugging/Debugging_Firefox_for_Android_over_Wifi" target="_blank" rel="noopener">https://developer.mozilla.org/zh-TW/docs/Tools/Remote_Debugging/Debugging_Firefox_for_Android_over_Wifi</a></li></ol><hr><h2 id="线上网页-JS-日志"><a href="#线上网页-JS-日志" class="headerlink" title="线上网页 JS 日志"></a>线上网页 JS 日志</h2><ol><li> <a href="http://jslogger.com/" target="_blank" rel="noopener">http://jslogger.com</a></li></ol><hr><h2 id="触控事件的蛋疼"><a href="#触控事件的蛋疼" class="headerlink" title="触控事件的蛋疼"></a>触控事件的蛋疼</h2><ol><li> <a href="http://select.yeeyan.org/view/213582/202991" target="_blank" rel="noopener">http://select.yeeyan.org/view/213582/202991</a></li><li> <a href="http://www.cnblogs.com/pifoo/archive/2011/05/23/webkit-touch-event-1.html" target="_blank" rel="noopener">http://www.cnblogs.com/pifoo/archive/2011/05/23/webkit-touch-event-1.html</a></li><li> <a href="http://www.aliued.cn/2013/04/27/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91%E4%B9%8Btouch-event%E7%AF%87.html" target="_blank" rel="noopener">http://www.aliued.cn/2013/04/27/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91%E4%B9%8Btouch-event%E7%AF%87.html</a></li><li> <a href="http://www.web-tinker.com/article/20364.html" target="_blank" rel="noopener">http://www.web-tinker.com/article/20364.html</a></li></ol><h2 id="GPU-硬件加速渲染"><a href="#GPU-硬件加速渲染" class="headerlink" title="GPU 硬件加速渲染"></a>GPU 硬件加速渲染</h2><ol><li> <a href="http://blog.bingo929.com/transform-translate3d-translatez-transition-gpu-hardware-acceleration.html" target="_blank" rel="noopener">http://blog.bingo929.com/transform-translate3d-translatez-transition-gpu-hardware-acceleration.html</a></li></ol><p>（绝对是 <strong>未完待续</strong>……）</p>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> issue </tag>
            
            <tag> collection </tag>
            
            <tag> mobile </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【笔记】Web 前端开发疑难</title>
      <link href="/development/web-front-end-issues/"/>
      <url>/development/web-front-end-issues/</url>
      
        <content type="html"><![CDATA[<p><strong>网页布局</strong> 方方面面<strong>疑难解答</strong>的优秀文章，由本人<strong>肉眼搜集</strong>于 sogou.com（按一般的<strong>技术学习路线</strong>排序；<strong>技术更迭，未完待续</strong>）——</p><h2 id="【CSS-盒模型】元素长宽计算与-padding、border-的关系"><a href="#【CSS-盒模型】元素长宽计算与-padding、border-的关系" class="headerlink" title="【CSS 盒模型】元素长宽计算与 padding、border 的关系"></a>【CSS 盒模型】元素长宽计算与 padding、border 的关系</h2><ol><li> <a href="http://bbs.aau.cn/forum.php/?mod=viewthread&amp;tid=7398" target="_blank" rel="noopener">http://bbs.aau.cn/forum.php/?mod=viewthread&amp;tid=7398</a></li><li> <a href="http://www.cnblogs.com/muyun/p/3567235.html" target="_blank" rel="noopener">http://www.cnblogs.com/muyun/p/3567235.html</a></li></ol><h2 id="【浏览器乱象】网页长宽属性"><a href="#【浏览器乱象】网页长宽属性" class="headerlink" title="【浏览器乱象】网页长宽属性"></a>【浏览器乱象】网页长宽属性</h2><ol><li> <a href="http://blog.sina.com.cn/s/blog_48e6792c0100z7ge.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_48e6792c0100z7ge.html</a></li><li> <a href="http://blog.csdn.net/u010200222/article/details/10948059" target="_blank" rel="noopener">http://blog.csdn.net/u010200222/article/details/10948059</a></li><li> <a href="http://www.cnblogs.com/yesw/p/4259727.html" target="_blank" rel="noopener">http://www.cnblogs.com/yesw/p/4259727.html</a></li></ol><h2 id="【CSS】伪元素特性"><a href="#【CSS】伪元素特性" class="headerlink" title="【CSS】伪元素特性"></a>【CSS】伪元素特性</h2><ol><li> <a href="http://www.cnblogs.com/oooweb/p/css-pseudo-element-before-and-after.html" target="_blank" rel="noopener">http://www.cnblogs.com/oooweb/p/css-pseudo-element-before-and-after.html</a></li><li> <a href="http://www.hulufei.com/post/about-before-and-after-pseudo-element" target="_blank" rel="noopener">http://www.hulufei.com/post/about-before-and-after-pseudo-element</a></li></ol><h2 id="【CSS】content-属性用法详解"><a href="#【CSS】content-属性用法详解" class="headerlink" title="【CSS】content 属性用法详解"></a>【CSS】content 属性用法详解</h2><ol><li> <a href="http://blog.dimpurr.com/css-before-after/" target="_blank" rel="noopener">http://blog.dimpurr.com/css-before-after/</a></li><li> <a href="http://www.zhangxinxu.com/wordpress/2010/04/css-content%e5%86%85%e5%ae%b9%e7%94%9f%e6%88%90%e6%8a%80%e6%9c%af%e4%bb%a5%e5%8f%8a%e5%ba%94%e7%94%a8/" target="_blank" rel="noopener">http://www.zhangxinxu.com/wordpress/2010/04/css-content%e5%86%85%e5%ae%b9%e7%94%9f%e6%88%90%e6%8a%80%e6%9c%af%e4%bb%a5%e5%8f%8a%e5%ba%94%e7%94%a8/</a></li><li> <a href="http://www.zhangxinxu.com/wordpress/2014/08/css-counters-automatic-number-content/" target="_blank" rel="noopener">http://www.zhangxinxu.com/wordpress/2014/08/css-counters-automatic-number-content/</a></li><li> <a href="http://www.w3cplus.com/css3/css-counters.html" target="_blank" rel="noopener">http://www.w3cplus.com/css3/css-counters.html</a></li></ol><h2 id="【CSS】文本溢出显示省略号"><a href="#【CSS】文本溢出显示省略号" class="headerlink" title="【CSS】文本溢出显示省略号"></a>【CSS】文本溢出显示省略号</h2><ol><li> <a href="http://www.cnblogs.com/lilyimage/p/3653864.html" target="_blank" rel="noopener">http://www.cnblogs.com/lilyimage/p/3653864.html</a></li></ol><h2 id="【CSS-盒模型】position、float-与-display-关系梳理"><a href="#【CSS-盒模型】position、float-与-display-关系梳理" class="headerlink" title="【CSS 盒模型】position、float 与 display 关系梳理"></a>【CSS 盒模型】position、float 与 display 关系梳理</h2><p><a href="http://www.cnblogs.com/coffeedeveloper/p/3145790.html" target="_blank" rel="noopener">http://www.cnblogs.com/coffeedeveloper/p/3145790.html</a></p><h2 id="【CSS-盒模型】内容、元素水平、垂直居中"><a href="#【CSS-盒模型】内容、元素水平、垂直居中" class="headerlink" title="【CSS 盒模型】内容、元素水平、垂直居中"></a>【CSS 盒模型】内容、元素水平、垂直居中</h2><ol><li> <a href="http://www.qianduan.net/css-to-achieve-the-vertical-center-of-the-five-kinds-of-methods.html" target="_blank" rel="noopener">http://www.qianduan.net/css-to-achieve-the-vertical-center-of-the-five-kinds-of-methods.html</a></li><li> <a href="http://www.zhangxinxu.com/wordpress/2010/10/%e6%88%91%e6%89%80%e7%9f%a5%e9%81%93%e7%9a%84%e5%87%a0%e7%a7%8ddisplaytable-cell%e7%9a%84%e5%ba%94%e7%94%a8/" target="_blank" rel="noopener">http://www.zhangxinxu.com/wordpress/2010/10/%e6%88%91%e6%89%80%e7%9f%a5%e9%81%93%e7%9a%84%e5%87%a0%e7%a7%8ddisplaytable-cell%e7%9a%84%e5%ba%94%e7%94%a8/</a></li></ol><h2 id="【CSS-盒模型】z-index-堆叠规则"><a href="#【CSS-盒模型】z-index-堆叠规则" class="headerlink" title="【CSS 盒模型】z-index 堆叠规则"></a>【CSS 盒模型】z-index 堆叠规则</h2><ol><li> <a href="http://blog.doyoe.com/2014/01/21/css/%E4%BD%A0%E9%9C%80%E8%A6%81%E4%BA%86%E8%A7%A3%E7%9A%84z-index%E4%B8%96%E7%95%8C/" target="_blank" rel="noopener">http://blog.doyoe.com/2014/01/21/css/%E4%BD%A0%E9%9C%80%E8%A6%81%E4%BA%86%E8%A7%A3%E7%9A%84z-index%E4%B8%96%E7%95%8C/</a></li></ol><h2 id="【CSS-3】IE-CSS-滤镜"><a href="#【CSS-3】IE-CSS-滤镜" class="headerlink" title="【CSS 3】IE CSS 滤镜"></a>【CSS 3】IE CSS 滤镜</h2><ol><li> <a href="http://www.cnblogs.com/shiyangxt/archive/2008/11/16/1334633.html" target="_blank" rel="noopener">http://www.cnblogs.com/shiyangxt/archive/2008/11/16/1334633.html</a></li><li> <a href="http://www.javascriptkit.com/filters/filters.shtml" target="_blank" rel="noopener">http://www.javascriptkit.com/filters/filters.shtml</a></li><li> <a href="http://www.laoshu133.com/post/css_background_transparence.html?jdfwkey=ggieh1" target="_blank" rel="noopener">http://www.laoshu133.com/post/css_background_transparence.html?jdfwkey=ggieh1</a></li><li> <a href="http://www.cnblogs.com/yushiro/archive/2008/11/26/1341219.html" target="_blank" rel="noopener">http://www.cnblogs.com/yushiro/archive/2008/11/26/1341219.html</a></li><li> <a href="http://www.75team.com/archives/303" target="_blank" rel="noopener">http://www.75team.com/archives/303</a></li></ol><h2 id="【动态-CSS】JavaScript-操作-CSS-属性"><a href="#【动态-CSS】JavaScript-操作-CSS-属性" class="headerlink" title="【动态 CSS】JavaScript 操作 CSS 属性"></a>【动态 CSS】JavaScript 操作 CSS 属性</h2><ol><li> <a href="http://www.cnblogs.com/flyjs/archive/2012/02/20/2360502.html" target="_blank" rel="noopener">http://www.cnblogs.com/flyjs/archive/2012/02/20/2360502.html</a></li><li> <a href="http://www.zhangxinxu.com/wordpress/2012/05/getcomputedstyle-js-getpropertyvalue-currentstyle/" target="_blank" rel="noopener">http://www.zhangxinxu.com/wordpress/2012/05/getcomputedstyle-js-getpropertyvalue-currentstyle/</a></li></ol><h2 id="【动态-CSS】JavaScript-操作-CSS-规则"><a href="#【动态-CSS】JavaScript-操作-CSS-规则" class="headerlink" title="【动态 CSS】JavaScript 操作 CSS 规则"></a>【动态 CSS】JavaScript 操作 CSS 规则</h2><ol><li> <a href="http://blog.csdn.net/renfufei/article/details/39085235" target="_blank" rel="noopener">http://blog.csdn.net/renfufei/article/details/39085235</a></li><li> <a href="http://javascript.ruanyifeng.com/dom/css.html" target="_blank" rel="noopener">http://javascript.ruanyifeng.com/dom/css.html</a></li><li> <a href="http://robinqu.iteye.com/blog/461359" target="_blank" rel="noopener">http://robinqu.iteye.com/blog/461359</a></li><li> <a href="http://www.alloyteam.com/2013/12/powerfuljs-1-to-operate-an-html-document-using-js/" target="_blank" rel="noopener">http://www.alloyteam.com/2013/12/powerfuljs-1-to-operate-an-html-document-using-js/</a></li></ol><h2 id="【DOM-特性】Attribute-与-Property"><a href="#【DOM-特性】Attribute-与-Property" class="headerlink" title="【DOM 特性】Attribute 与 Property"></a>【DOM 特性】Attribute 与 Property</h2><ol><li> <a href="http://www.cnblogs.com/dolphinX/p/3348582.html" target="_blank" rel="noopener">http://www.cnblogs.com/dolphinX/p/3348582.html</a></li><li> <a href="http://www.cnblogs.com/zhwl/p/3520162.html" target="_blank" rel="noopener">http://www.cnblogs.com/zhwl/p/3520162.html</a></li></ol><h2 id="【DOM-兼容】innerText、textContent"><a href="#【DOM-兼容】innerText、textContent" class="headerlink" title="【DOM 兼容】innerText、textContent"></a>【DOM 兼容】innerText、textContent</h2><ol><li> <a href="http://www.cnblogs.com/sniper007/archive/2012/04/24/2468175.html" target="_blank" rel="noopener">http://www.cnblogs.com/sniper007/archive/2012/04/24/2468175.html</a></li><li> <a href="http://www.360doc.com/content/14/0414/16/15727046_368828277.shtml" target="_blank" rel="noopener">http://www.360doc.com/content/14/0414/16/15727046_368828277.shtml</a></li></ol><h2 id="【DOM-兼容】动态创建元素"><a href="#【DOM-兼容】动态创建元素" class="headerlink" title="【DOM 兼容】动态创建元素"></a>【DOM 兼容】动态创建元素</h2><ol><li> <a href="http://www.cnblogs.com/yizihan/p/4386431.html" target="_blank" rel="noopener">http://www.cnblogs.com/yizihan/p/4386431.html</a></li><li> <a href="http://qbaok.blog.163.com/blog/static/101292652013022296590/" target="_blank" rel="noopener">http://qbaok.blog.163.com/blog/static/101292652013022296590/</a></li></ol><h2 id="【DOM-监控】Mutation-的-Event-与-Observer"><a href="#【DOM-监控】Mutation-的-Event-与-Observer" class="headerlink" title="【DOM 监控】Mutation 的 Event 与 Observer"></a>【DOM 监控】Mutation 的 Event 与 Observer</h2><ol><li> <a href="http://www.cnblogs.com/rubylouvre/p/3192021.html" target="_blank" rel="noopener">http://www.cnblogs.com/rubylouvre/p/3192021.html</a></li><li> <a href="http://www.cnblogs.com/rubylouvre/archive/2012/05/28/2520721.html" target="_blank" rel="noopener">http://www.cnblogs.com/rubylouvre/archive/2012/05/28/2520721.html</a></li><li> <a href="http://chrisyip.github.io/post/mutation-events-and-mutationobserver/" target="_blank" rel="noopener">http://chrisyip.github.io/post/mutation-events-and-mutationobserver/</a></li><li> <a href="http://javascript.ruanyifeng.com/dom/mutationobserver.html" target="_blank" rel="noopener">http://javascript.ruanyifeng.com/dom/mutationobserver.html</a></li><li> <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver</a></li></ol><h2 id="【浏览器数据流操作】JavaScript-转换-DataURL"><a href="#【浏览器数据流操作】JavaScript-转换-DataURL" class="headerlink" title="【浏览器数据流操作】JavaScript 转换 DataURL"></a>【浏览器数据流操作】JavaScript 转换 DataURL</h2><ol><li> <a href="http://www.iunbug.com/archives/2012/06/05/254.html" target="_blank" rel="noopener">http://www.iunbug.com/archives/2012/06/05/254.html</a></li><li> <a href="http://www.78oa.com/news/news727.html" target="_blank" rel="noopener">http://www.78oa.com/news/news727.html</a></li><li> <a href="http://my.oschina.net/l3ve/blog/300097" target="_blank" rel="noopener">http://my.oschina.net/l3ve/blog/300097</a></li><li> <a href="http://stackoverflow.com/questions/11335460/how-do-i-parse-a-data-url-in-node" target="_blank" rel="noopener">http://stackoverflow.com/questions/11335460/how-do-i-parse-a-data-url-in-node</a></li><li> <a href="http://stackoverflow.com/questions/6926016/nodejs-saving-a-base64-encoded-image-to-disk" target="_blank" rel="noopener">http://stackoverflow.com/questions/6926016/nodejs-saving-a-base64-encoded-image-to-disk</a></li><li> <a href="http://segmentfault.com/q/1010000000095621" target="_blank" rel="noopener">http://segmentfault.com/q/1010000000095621</a></li><li> <a href="https://cnodejs.org/topic/4f939c84407edba2143c12f7" target="_blank" rel="noopener">https://cnodejs.org/topic/4f939c84407edba2143c12f7</a></li><li> <a href="https://developer.mozilla.org/zh-CN/docs/Using_files_from_web_applications" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Using_files_from_web_applications</a></li><li> <a href="http://www.cnblogs.com/boychenney/archive/2011/10/08/2203036.html" target="_blank" rel="noopener">http://www.cnblogs.com/boychenney/archive/2011/10/08/2203036.html</a></li></ol><h2 id="【浏览器数据流操作】JavaScript-Base64-编解码"><a href="#【浏览器数据流操作】JavaScript-Base64-编解码" class="headerlink" title="【浏览器数据流操作】JavaScript Base64 编解码"></a>【浏览器数据流操作】JavaScript Base64 编解码</h2><ol><li> <a href="http://qianduanblog.com/post/js-learning-34-en-decodeuri-en-decodeuricomponent-un-escape-btoa-atob.html" target="_blank" rel="noopener">http://qianduanblog.com/post/js-learning-34-en-decodeuri-en-decodeuricomponent-un-escape-btoa-atob.html</a></li><li> <a href="http://www.cnblogs.com/rubylouvre/archive/2010/09/19/1829898.html" target="_blank" rel="noopener">http://www.cnblogs.com/rubylouvre/archive/2010/09/19/1829898.html</a></li></ol><h2 id="【浏览器数据流操作】JavaScript-二进制数据操作"><a href="#【浏览器数据流操作】JavaScript-二进制数据操作" class="headerlink" title="【浏览器数据流操作】JavaScript 二进制数据操作"></a>【浏览器数据流操作】JavaScript 二进制数据操作</h2><ol><li> <a href="http://javascript.ruanyifeng.com/htmlapi/file.html" target="_blank" rel="noopener">http://javascript.ruanyifeng.com/htmlapi/file.html</a></li><li> <a href="http://javascript.ruanyifeng.com/stdlib/arraybuffer.html#toc7" target="_blank" rel="noopener">http://javascript.ruanyifeng.com/stdlib/arraybuffer.html#toc7</a></li><li> <a href="http://www.douban.com/note/225494734/" target="_blank" rel="noopener">http://www.douban.com/note/225494734/</a></li><li> <a href="http://www.blogjava.net/jidebingfeng/articles/406171.html" target="_blank" rel="noopener">http://www.blogjava.net/jidebingfeng/articles/406171.html</a></li><li> <a href="http://www.cnblogs.com/axes/p/4603984.html" target="_blank" rel="noopener">http://www.cnblogs.com/axes/p/4603984.html</a></li></ol><h2 id="【浏览器加密】window-crypto"><a href="#【浏览器加密】window-crypto" class="headerlink" title="【浏览器加密】window.crypto"></a>【浏览器加密】window.crypto</h2><ol><li> <a href="http://blog.csdn.net/emu/article/details/39618297" target="_blank" rel="noopener">http://blog.csdn.net/emu/article/details/39618297</a></li><li> <a href="http://www.cnblogs.com/rubylouvre/p/3462457.html" target="_blank" rel="noopener">http://www.cnblogs.com/rubylouvre/p/3462457.html</a></li></ol><h2 id="【浏览器乱象】键盘事件对象的-keyCode-属性"><a href="#【浏览器乱象】键盘事件对象的-keyCode-属性" class="headerlink" title="【浏览器乱象】键盘事件对象的 keyCode 属性"></a>【浏览器乱象】键盘事件对象的 keyCode 属性</h2><ol><li> <a href="http://www.tychio.net/tech/2013/06/06/event-keycode.html" target="_blank" rel="noopener">http://www.tychio.net/tech/2013/06/06/event-keycode.html</a></li></ol><h2 id="【浏览器乱象】网页文档模式"><a href="#【浏览器乱象】网页文档模式" class="headerlink" title="【浏览器乱象】网页文档模式"></a>【浏览器乱象】网页文档模式</h2><ol><li> <a href="http://blog.csdn.net/ennyhong/article/details/8330160" target="_blank" rel="noopener">http://blog.csdn.net/ennyhong/article/details/8330160</a></li><li> <a href="http://blog.csdn.net/justremind/article/details/25913639" target="_blank" rel="noopener">http://blog.csdn.net/justremind/article/details/25913639</a></li><li> <a href="http://www.oschina.net/translate/doctype" target="_blank" rel="noopener">http://www.oschina.net/translate/doctype</a></li></ol><h2 id="【浏览器乱象】Window-对象的识别"><a href="#【浏览器乱象】Window-对象的识别" class="headerlink" title="【浏览器乱象】Window 对象的识别"></a>【浏览器乱象】Window 对象的识别</h2><ol><li> <a href="http://www.w3school.com.cn/jsref/dom_obj_window.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/jsref/dom_obj_window.asp</a></li><li> <a href="http://www.cnblogs.com/rubylouvre/archive/2010/02/20/1669886.html" target="_blank" rel="noopener">http://www.cnblogs.com/rubylouvre/archive/2010/02/20/1669886.html</a></li></ol><h2 id="【浏览器乱象】鼠标事件兼容"><a href="#【浏览器乱象】鼠标事件兼容" class="headerlink" title="【浏览器乱象】鼠标事件兼容"></a>【浏览器乱象】鼠标事件兼容</h2><ol><li> <a href="http://segmentfault.com/a/1190000002499967" target="_blank" rel="noopener">http://segmentfault.com/a/1190000002499967</a></li><li> <a href="http://w3help.org/zh-cn/causes/BT9017" target="_blank" rel="noopener">http://w3help.org/zh-cn/causes/BT9017</a></li><li> <a href="http://blog.csdn.net/ge_yulong/article/details/38924475" target="_blank" rel="noopener">http://blog.csdn.net/ge_yulong/article/details/38924475</a></li><li> <a href="http://www.cnblogs.com/_franky/archive/2010/05/01/1725624.html" target="_blank" rel="noopener">http://www.cnblogs.com/_franky/archive/2010/05/01/1725624.html</a></li></ol><h2 id="【DOM-事件】事件模拟"><a href="#【DOM-事件】事件模拟" class="headerlink" title="【DOM 事件】事件模拟"></a>【DOM 事件】事件模拟</h2><ol><li> <a href="http://web.jaxedit.com/post/2013/03/30/2990442.html" target="_blank" rel="noopener">http://web.jaxedit.com/post/2013/03/30/2990442.html</a></li></ol><h2 id="【HTML-5-API】鼠标拖拽"><a href="#【HTML-5-API】鼠标拖拽" class="headerlink" title="【HTML 5 API】鼠标拖拽"></a>【HTML 5 API】鼠标拖拽</h2><ol><li> <a href="http://www.cnblogs.com/hooray/archive/2012/01/30/2331648.html" target="_blank" rel="noopener">http://www.cnblogs.com/hooray/archive/2012/01/30/2331648.html</a></li></ol><h2 id="【AJAX】跨域通信"><a href="#【AJAX】跨域通信" class="headerlink" title="【AJAX】跨域通信"></a>【AJAX】跨域通信</h2><ol><li> <a href="https://segmentfault.com/a/1190000003642057" target="_blank" rel="noopener">https://segmentfault.com/a/1190000003642057</a></li><li> <a href="http://segmentfault.com/a/1190000000702539" target="_blank" rel="noopener">http://segmentfault.com/a/1190000000702539</a></li><li> <a href="https://github.com/luics/storage/wiki/Storage" target="_blank" rel="noopener">https://github.com/luics/storage/wiki/Storage</a></li><li> <a href="http://cssha.com/cross-domain-local-storage/" target="_blank" rel="noopener">http://cssha.com/cross-domain-local-storage/</a></li><li> <a href="http://stackoverflow.com/questions/1653308/access-control-allow-origin-multiple-origin-domains" target="_blank" rel="noopener">http://stackoverflow.com/questions/1653308/access-control-allow-origin-multiple-origin-domains</a></li><li> <a href="http://blog.csdn.net/vivianhope/article/details/46581039" target="_blank" rel="noopener">http://blog.csdn.net/vivianhope/article/details/46581039</a></li><li> <a href="http://www.tuicool.com/articles/3UBzIbb" target="_blank" rel="noopener">http://www.tuicool.com/articles/3UBzIbb</a></li><li> <a href="http://my.oschina.net/blogshi/blog/303758" target="_blank" rel="noopener">http://my.oschina.net/blogshi/blog/303758</a></li><li> <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS</a></li><li><a href="https://dev.opera.com/articles/dom-access-control-using-cors/" target="_blank" rel="noopener">https://dev.opera.com/articles/dom-access-control-using-cors/</a></li></ol><h2 id="【AJAX】跨域-XHR-兼容"><a href="#【AJAX】跨域-XHR-兼容" class="headerlink" title="【AJAX】跨域 XHR 兼容"></a>【AJAX】跨域 XHR 兼容</h2><ol><li> <a href="http://segmentfault.com/a/1190000000702550" target="_blank" rel="noopener">http://segmentfault.com/a/1190000000702550</a></li><li> <a href="http://www.vinqon.com/codeblog/?detail/11103" target="_blank" rel="noopener">http://www.vinqon.com/codeblog/?detail/11103</a></li><li> <a href="http://www.w3cmm.com/ajax/xdomainrequest.html" target="_blank" rel="noopener">http://www.w3cmm.com/ajax/xdomainrequest.html</a></li><li> <a href="https://msdn.microsoft.com/en-us/library/ie/cc288060(v=vs.85).aspx" target="_blank" rel="noopener">https://msdn.microsoft.com/en-us/library/ie/cc288060(v=vs.85).aspx</a></li><li> <a href="http://blogs.msdn.com/b/ieinternals/archive/2009/07/23/the-ie8-native-xmlhttprequest-object.aspx" target="_blank" rel="noopener">http://blogs.msdn.com/b/ieinternals/archive/2009/07/23/the-ie8-native-xmlhttprequest-object.aspx</a></li></ol><h2 id="【HTML-5-API】历史记录-与-AJAX"><a href="#【HTML-5-API】历史记录-与-AJAX" class="headerlink" title="【HTML 5 API】历史记录 与 AJAX"></a>【HTML 5 API】历史记录 与 AJAX</h2><ol><li> <a href="http://www.zhangxinxu.com/wordpress/2013/06/html5-history-api-pushstate-replacestate-ajax/" target="_blank" rel="noopener">http://www.zhangxinxu.com/wordpress/2013/06/html5-history-api-pushstate-replacestate-ajax/</a></li><li> <a href="http://blog.csdn.net/tianyitianyi1/article/details/7426606" target="_blank" rel="noopener">http://blog.csdn.net/tianyitianyi1/article/details/7426606</a></li><li> <a href="http://blog.csdn.net/fdipzone/article/details/8928202" target="_blank" rel="noopener">http://blog.csdn.net/fdipzone/article/details/8928202</a></li><li> <a href="https://github.com/browserstate/history.js" target="_blank" rel="noopener">https://github.com/browserstate/history.js</a></li></ol><h2 id="【JSON-本地处理】JSON-对象方法的详细用法"><a href="#【JSON-本地处理】JSON-对象方法的详细用法" class="headerlink" title="【JSON 本地处理】JSON 对象方法的详细用法"></a>【JSON 本地处理】JSON 对象方法的详细用法</h2><ol><li> <a href="http://www.cnblogs.com/mu-mu/p/3394475.html" target="_blank" rel="noopener">http://www.cnblogs.com/mu-mu/p/3394475.html</a></li><li> <a href="http://www.cnblogs.com/anychem/archive/2012/04/02/2429785.html" target="_blank" rel="noopener">http://www.cnblogs.com/anychem/archive/2012/04/02/2429785.html</a></li><li> <a href="http://www.cnblogs.com/damonlan/archive/2012/03/13/2394787.html" target="_blank" rel="noopener">http://www.cnblogs.com/damonlan/archive/2012/03/13/2394787.html</a></li></ol><h2 id="【JS-技巧】in-操作符"><a href="#【JS-技巧】in-操作符" class="headerlink" title="【JS 技巧】in 操作符"></a>【JS 技巧】in 操作符</h2><ol><li> <a href="http://www.linuxfly.org/post/524/" target="_blank" rel="noopener">http://www.linuxfly.org/post/524/</a></li></ol><h2 id="【JS-技巧】类数组对象"><a href="#【JS-技巧】类数组对象" class="headerlink" title="【JS 技巧】类数组对象"></a>【JS 技巧】类数组对象</h2><ol><li> <a href="http://www.cnblogs.com/littledu/archive/2012/05/19/2508672.html" target="_blank" rel="noopener">http://www.cnblogs.com/littledu/archive/2012/05/19/2508672.html</a></li><li> <a href="http://www.zipeng.info/archives/js-array-like-obj.html" target="_blank" rel="noopener">http://www.zipeng.info/archives/js-array-like-obj.html</a></li><li> <a href="http://www.cnblogs.com/fool/archive/2010/10/09/1846966.html" target="_blank" rel="noopener">http://www.cnblogs.com/fool/archive/2010/10/09/1846966.html</a></li><li> <a href="http://www.zuojj.com/archives/218.html" target="_blank" rel="noopener">http://www.zuojj.com/archives/218.html</a></li><li> <a href="http://blueion.iteye.com/blog/371861" target="_blank" rel="noopener">http://blueion.iteye.com/blog/371861</a></li></ol><h2 id="【JS-技巧】对象自定义属性的单独处理"><a href="#【JS-技巧】对象自定义属性的单独处理" class="headerlink" title="【JS 技巧】对象自定义属性的单独处理"></a>【JS 技巧】对象自定义属性的单独处理</h2><ol><li> <a href="http://birdshome.cnblogs.com/archive/2005/06/24/GetExpandoAttributes.html" target="_blank" rel="noopener">http://birdshome.cnblogs.com/archive/2005/06/24/GetExpandoAttributes.html</a></li><li> <a href="http://fsy0718.com/?p=36" target="_blank" rel="noopener">http://fsy0718.com/?p=36</a></li></ol><h2 id="【SVG】浏览器-JS-网页截图"><a href="#【SVG】浏览器-JS-网页截图" class="headerlink" title="【SVG】浏览器 JS 网页截图"></a>【SVG】浏览器 JS 网页截图</h2><ol><li> <a href="http://www.raychase.net/1152" target="_blank" rel="noopener">http://www.raychase.net/1152</a></li><li> <a href="http://www.webhek.com/drawwindow" target="_blank" rel="noopener">http://www.webhek.com/drawwindow</a></li><li> <a href="https://github.com/niklasvh/html2canvas" target="_blank" rel="noopener">https://github.com/niklasvh/html2canvas</a></li><li> <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API/Drawing_DOM_objects_into_a_canvas" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API/Drawing_DOM_objects_into_a_canvas</a></li></ol><h2 id="【浏览器性能】JavaScript-函数调用降频"><a href="#【浏览器性能】JavaScript-函数调用降频" class="headerlink" title="【浏览器性能】JavaScript 函数调用降频"></a>【浏览器性能】JavaScript 函数调用降频</h2><ol><li> <a href="http://www.webhek.com/function-debounce" target="_blank" rel="noopener">http://www.webhek.com/function-debounce</a></li></ol><h2 id="【Web-前端性能】"><a href="#【Web-前端性能】" class="headerlink" title="【Web 前端性能】"></a>【Web 前端性能】</h2><ul><li><a href="http://www.csdn.net/article/2013-09-23/2817020-web-performance-optimization" target="_blank" rel="noopener">http://www.csdn.net/article/2013-09-23/2817020-web-performance-optimization</a></li></ul><h2 id="【HTTP-协议】Header-标准"><a href="#【HTTP-协议】Header-标准" class="headerlink" title="【HTTP 协议】Header 标准"></a>【HTTP 协议】Header 标准</h2><ol><li> <a href="http://www.cnblogs.com/shanyou/archive/2012/05/06/2486134.html" target="_blank" rel="noopener">http://www.cnblogs.com/shanyou/archive/2012/05/06/2486134.html</a></li><li> <a href="http://kb.cnblogs.com/page/92320/" target="_blank" rel="noopener">http://kb.cnblogs.com/page/92320/</a></li><li> <a href="https://imququ.com/post/vary-header-in-http.html" target="_blank" rel="noopener">https://imququ.com/post/vary-header-in-http.html</a></li></ol><h2 id="【HTTP-协议】缓存机制"><a href="#【HTTP-协议】缓存机制" class="headerlink" title="【HTTP 协议】缓存机制"></a>【HTTP 协议】缓存机制</h2><ol><li> <a href="http://www.cnblogs.com/TankXiao/archive/2012/11/28/2793365.html" target="_blank" rel="noopener">http://www.cnblogs.com/TankXiao/archive/2012/11/28/2793365.html</a></li><li> <a href="http://www.studyofnet.com/news/935.html" target="_blank" rel="noopener">http://www.studyofnet.com/news/935.html</a></li><li> <a href="http://blog.csdn.net/crazyhacking/article/details/44497293" target="_blank" rel="noopener">http://blog.csdn.net/crazyhacking/article/details/44497293</a></li></ol><h2 id="【HTTP-协议】ETag-缓存头"><a href="#【HTTP-协议】ETag-缓存头" class="headerlink" title="【HTTP 协议】ETag 缓存头"></a>【HTTP 协议】ETag 缓存头</h2><ol><li> <a href="http://blog.csdn.net/21aspnet/article/details/6604822" target="_blank" rel="noopener">http://blog.csdn.net/21aspnet/article/details/6604822</a></li><li> <a href="http://blog.csdn.net/chenzhiqin20/article/details/10947857" target="_blank" rel="noopener">http://blog.csdn.net/chenzhiqin20/article/details/10947857</a></li></ol><h2 id="【实时通讯】HTTP-SSE"><a href="#【实时通讯】HTTP-SSE" class="headerlink" title="【实时通讯】HTTP SSE"></a>【实时通讯】HTTP SSE</h2><ol><li> <a href="http://www.ituring.com.cn/tupubarticle/1408" target="_blank" rel="noopener">http://www.ituring.com.cn/tupubarticle/1408</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> issue </tag>
            
            <tag> collection </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【原创】Web 前端脚本文件响应式异步加载器（框架页兼容）</title>
      <link href="/programming/web-js-file-loader-iframe/"/>
      <url>/programming/web-js-file-loader-iframe/</url>
      
        <content type="html"><![CDATA[<p>我之前开源了<a href="/programming/Web-JS-file-loader/">【JavaScript 文件响应式异步加载器】v0.6</a>，用于在 Web 前端统一管理单页开发中的 JS 模块加载，方便、优雅、可靠。</p><p>但若要用框架页的模式来开发较为复杂的 Web 应用，统一管理父子页面的 JS、CSS 又是一件麻烦的事……</p><p>框架页是一种 HTML 模块化的基础技术，我们通常希望整个网页在视觉上浑然一体，而非被框架分割成一块又一块，所以不同的框架页通常使用同一套基础的 JS、CSS 脚本库。一般的做法是在每个框架页的 <code>&lt;head /&gt;</code> 中都硬编码上完全相同的基础库引用，虽然浏览器缓存会消除文件的重复下载，但 JS 代码会在每个框架页的上下文中再运行一遍，多消耗 N 倍的 CPU 执行时间、多占用 N 份相同大小的内存……</p><p>好在框架页之间有 Window 对象之间的引用，好在 JavaScript 的函数可以用 call/apply 方法轻松改变执行上下文</p><h2 id="框架页稳定版-v0-8"><a href="#框架页稳定版-v0-8" class="headerlink" title="框架页稳定版 v0.8"></a>框架页稳定版 v0.8</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//                >>>  EasyImport.js  &lt;&lt;&lt;</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//      [Version]    v0.8  (2014-10-31)  Stable</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//      [Usage]      Only for loading JavaScript files in All Kinds of Web,</span><span class="token comment" spellcheck="true">//                   with JS/CSS-Inherit support for Frames.</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//              (C)2013-2014    SCU FYclub-RDD</span><span class="token comment" spellcheck="true">//</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>BOM<span class="token punctuation">,</span> DOM<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// ----------- Private Attribute ----------- //</span>  <span class="token keyword">var</span> UA <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">,</span>    RootPath<span class="token punctuation">,</span>    JS_List <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    CallBack<span class="token punctuation">,</span>    NameSpace <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    EIJS <span class="token operator">=</span> <span class="token punctuation">{</span>      AsyncJS<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      DOM_Ready<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// ----------- Inner Basic Member ----------- //</span>  <span class="token keyword">var</span> IE_Ver <span class="token operator">=</span>    UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/MSIE (\d+)\.\d/i</span><span class="token punctuation">)</span> <span class="token operator">||</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/Trident\/.+; rv:(\d+)\.\d/i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  IE_Ver <span class="token operator">=</span> IE_Ver <span class="token operator">?</span> <span class="token function">Number</span><span class="token punctuation">(</span>IE_Ver<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token number">NaN</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> old_IE <span class="token operator">=</span> IE_Ver <span class="token operator">&amp;&amp;</span> IE_Ver <span class="token operator">&lt;</span> <span class="token number">9</span><span class="token punctuation">,</span>    is_Pad <span class="token operator">=</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/Tablet|Pad|Book|Android 3/i</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    is_Phone <span class="token operator">=</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/Phone|Touch|Symbian/i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> is_Mobile <span class="token operator">=</span> is_Pad <span class="token operator">||</span> is_Phone <span class="token operator">||</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/Mobile/i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">function</span> <span class="token function">DOM_Loaded_Event</span><span class="token punctuation">(</span>DOM_E<span class="token punctuation">,</span> CB_Func<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>old_IE<span class="token punctuation">)</span> DOM_E<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'load'</span><span class="token punctuation">,</span> CB_Func<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>      DOM_E<span class="token punctuation">.</span><span class="token function">attachEvent</span><span class="token punctuation">(</span><span class="token string">'onreadystatechange'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>DOM_E<span class="token punctuation">.</span>readyState<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/loaded|complete/</span><span class="token punctuation">)</span><span class="token punctuation">)</span> CB_Func<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>DOM_E<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">DOM_Ready_Event</span><span class="token punctuation">(</span>_CB<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>old_IE<span class="token punctuation">)</span> DOM<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'DOMContentLoaded'</span><span class="token punctuation">,</span> _CB<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>self <span class="token operator">!==</span> top<span class="token punctuation">)</span> <span class="token function">DOM_Loaded_Event</span><span class="token punctuation">(</span>DOM<span class="token punctuation">,</span> _CB<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>      <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>          DOM<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span><span class="token function">doScroll</span><span class="token punctuation">(</span><span class="token string">'left'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          _CB<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>DOM<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token function">setTimeout</span><span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>callee<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">$_TN</span><span class="token punctuation">(</span>HTML_Elements<span class="token punctuation">,</span> TagName<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> HTML_Elements<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span>TagName<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">NewTag</span><span class="token punctuation">(</span>TagName<span class="token punctuation">,</span> AttrList<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> NE <span class="token operator">=</span> DOM<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>TagName<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>AttrList<span class="token punctuation">)</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> AK <span class="token keyword">in</span> AttrList<span class="token punctuation">)</span> NE<span class="token punctuation">[</span>AK<span class="token punctuation">]</span> <span class="token operator">=</span> AttrList<span class="token punctuation">[</span>AK<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> NE<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">PagePath_IE</span><span class="token punctuation">(</span>_BOM<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> _PP <span class="token operator">=</span> _BOM<span class="token punctuation">.</span>document<span class="token punctuation">.</span>URL<span class="token punctuation">;</span>    _PP <span class="token operator">=</span> _PP<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>_PP<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">3</span><span class="token punctuation">)</span> _PP<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    _PP<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> _PP<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">var</span> DOM_Head <span class="token operator">=</span> <span class="token function">$_TN</span><span class="token punctuation">(</span>DOM<span class="token punctuation">,</span> <span class="token string">'head'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> DOM_Title <span class="token operator">=</span> <span class="token function">$_TN</span><span class="token punctuation">(</span>DOM_Head<span class="token punctuation">,</span> <span class="token string">'title'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">try</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> _DOM <span class="token operator">=</span> parent<span class="token punctuation">.</span>document<span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> Inherit_Root <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// ----------- Frame Inherit (JS) ----------- //</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>Inherit_Root <span class="token operator">||</span> self <span class="token operator">===</span> top<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//  Default NameSpaces (Offical Support Libraries)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>IE_Ver<span class="token punctuation">)</span>      NameSpace <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span> jQuery<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>          $<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">jQuery</span><span class="token punctuation">(</span>              arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>              arguments<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">1</span> <span class="token operator">?</span> arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>document            <span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span>      <span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> _NS<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>IE_Ver<span class="token punctuation">)</span> <span class="token punctuation">{</span>      _NS <span class="token operator">=</span> parent<span class="token punctuation">.</span>ImportJS<span class="token punctuation">.</span><span class="token function">NS</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> _NS<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>__NS <span class="token keyword">in</span> _NS<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">var</span> _NS_Shell <span class="token operator">=</span> _NS<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>__NS<span class="token punctuation">]</span><span class="token punctuation">;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>_NS_Shell <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> _NS_ <span class="token operator">=</span> parent<span class="token punctuation">[</span>__NS<span class="token punctuation">]</span><span class="token punctuation">;</span>            self<span class="token punctuation">[</span>__NS<span class="token punctuation">]</span> <span class="token operator">=</span> _NS_<span class="token punctuation">;</span>          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> _NS_Shell <span class="token operator">==</span> <span class="token string">'function'</span><span class="token punctuation">)</span>            self<span class="token punctuation">[</span>__NS<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>_NS_S<span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> _NS_S<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>_NS_Shell<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      _NS <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">var</span> _SE <span class="token operator">=</span> <span class="token function">$_TN</span><span class="token punctuation">(</span><span class="token function">$_TN</span><span class="token punctuation">(</span>_DOM<span class="token punctuation">,</span> <span class="token string">'head'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> JS_URL<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> _SE<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        JS_URL <span class="token operator">=</span> _SE<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>JS_URL <span class="token operator">==</span> <span class="token string">''</span> <span class="token operator">||</span> JS_URL<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/EasyImport.*\.js/i</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>IE_Ver <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> JS_URL <span class="token operator">=</span> <span class="token function">PagePath_IE</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span> <span class="token operator">+</span> JS_URL<span class="token punctuation">;</span>        _NS<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>JS_URL<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      BOM<span class="token punctuation">.</span>onbeforeunload <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> SE <span class="token operator">=</span> <span class="token function">$_TN</span><span class="token punctuation">(</span>DOM<span class="token punctuation">,</span> <span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> SE<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> SE<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>SE<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        SE <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        DOM<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        DOM<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        BOM<span class="token punctuation">.</span>onbeforeunload <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        BOM<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        top<span class="token punctuation">.</span><span class="token function">CollectGarbage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    NameSpace <span class="token operator">=</span> _NS<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// ----------- Frame Inherit (CSS) ----------- //</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Inherit_Root <span class="token operator">&amp;&amp;</span> self <span class="token operator">!==</span> top<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> _LE <span class="token operator">=</span> _DOM<span class="token punctuation">.</span>styleSheets<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> CSS_URL<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> _LE<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>_LE<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>rel<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'nofollow'</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>      CSS_URL <span class="token operator">=</span> _LE<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>href<span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>IE_Ver <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> CSS_URL <span class="token operator">=</span> <span class="token function">PagePath_IE</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span> <span class="token operator">+</span> CSS_URL<span class="token punctuation">;</span>      DOM_Head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>        _LE<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>old_IE <span class="token operator">?</span> <span class="token string">'owningElement'</span> <span class="token punctuation">:</span> <span class="token string">'ownerNode'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>      <span class="token punctuation">)</span><span class="token punctuation">.</span>href <span class="token operator">=</span> CSS_URL<span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// ----------- Standard Mode Meta Patches ----------- //</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>is_Mobile<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>old_IE<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">var</span> is_WeChat <span class="token operator">=</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/MicroMessenger/i</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        is_UCWeb <span class="token operator">=</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/UCBrowser|UCWeb/i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      DOM_Head<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>        <span class="token function">NewTag</span><span class="token punctuation">(</span><span class="token string">'meta'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>          name<span class="token punctuation">:</span> <span class="token string">'viewport'</span><span class="token punctuation">,</span>          content<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">[</span><span class="token string">'width'</span><span class="token punctuation">,</span> is_WeChat <span class="token operator">||</span> is_UCWeb <span class="token operator">?</span> <span class="token number">320</span> <span class="token punctuation">:</span> <span class="token string">'device-width'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">'initial-scale=1.0'</span><span class="token punctuation">,</span>            <span class="token string">'target-densitydpi=medium-dpi'</span>          <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        DOM_Title      <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span>      DOM_Head<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>        <span class="token function">NewTag</span><span class="token punctuation">(</span><span class="token string">'meta'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>          name<span class="token punctuation">:</span> <span class="token string">'MobileOptimized'</span><span class="token punctuation">,</span>          content<span class="token punctuation">:</span> <span class="token number">320</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        DOM_Title      <span class="token punctuation">)</span><span class="token punctuation">;</span>    DOM_Head<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>      <span class="token function">NewTag</span><span class="token punctuation">(</span><span class="token string">'meta'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>        name<span class="token punctuation">:</span> <span class="token string">'HandheldFriendly'</span><span class="token punctuation">,</span>        content<span class="token punctuation">:</span> <span class="token string">'true'</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      DOM_Title    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>IE_Ver<span class="token punctuation">)</span>    DOM_Head<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>      <span class="token function">NewTag</span><span class="token punctuation">(</span><span class="token string">'meta'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>        <span class="token string">'http-equiv'</span><span class="token punctuation">:</span> <span class="token string">'X-UA-Compatible'</span><span class="token punctuation">,</span>        content<span class="token punctuation">:</span> <span class="token string">'IE=Edge, Chrome=1'</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      DOM_Title    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// ----------- Inner Logic Module ----------- //</span>  <span class="token keyword">function</span> <span class="token function">xImport</span><span class="token punctuation">(</span>JS_URL<span class="token punctuation">,</span> CB_Func<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> SE <span class="token operator">=</span> DOM<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">with</span> <span class="token punctuation">(</span>SE<span class="token punctuation">)</span> <span class="token punctuation">{</span>      type <span class="token operator">=</span> <span class="token string">'text/javascript'</span><span class="token punctuation">;</span>      charset <span class="token operator">=</span> <span class="token string">'UTF-8'</span><span class="token punctuation">;</span>      src <span class="token operator">=</span> JS_URL<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>CB_Func<span class="token punctuation">)</span> <span class="token function">DOM_Loaded_Event</span><span class="token punctuation">(</span>SE<span class="token punctuation">,</span> CB_Func<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> DOM_Head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>SE<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">LI_Add</span><span class="token punctuation">(</span>LQ<span class="token punctuation">,</span> RP<span class="token punctuation">,</span> FN<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>FN<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/^http(s)?:\/\//</span><span class="token punctuation">)</span><span class="token punctuation">)</span> FN <span class="token operator">=</span> RP <span class="token operator">+</span> FN<span class="token punctuation">;</span>    LQ<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> URL<span class="token punctuation">:</span> FN <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">SL_Set</span><span class="token punctuation">(</span>RP<span class="token punctuation">,</span> List0<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> List0<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span><span class="token punctuation">)</span> List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> List1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> List0<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      List1<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> _URL<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'string'</span><span class="token punctuation">)</span> <span class="token function">LI_Add</span><span class="token punctuation">(</span>List1<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> RP<span class="token punctuation">,</span> List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token punctuation">{</span>          <span class="token keyword">var</span> _Rule <span class="token operator">=</span> <span class="token punctuation">{</span>              old_PC<span class="token punctuation">:</span> old_IE<span class="token punctuation">,</span>              Mobile<span class="token punctuation">:</span> is_Mobile<span class="token punctuation">,</span>              Phone<span class="token punctuation">:</span> is_Phone<span class="token punctuation">,</span>              Pad<span class="token punctuation">:</span> is_Pad            <span class="token punctuation">}</span><span class="token punctuation">,</span>            no_Break <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>          <span class="token keyword">for</span> <span class="token punctuation">(</span>RI <span class="token keyword">in</span> _Rule<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>_Rule<span class="token punctuation">[</span>RI<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">if</span> <span class="token punctuation">(</span>List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>RI<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> no_Break <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>              <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>RI<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token function">LI_Add</span><span class="token punctuation">(</span>List1<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> RP<span class="token punctuation">,</span> List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>RI<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>no_Break <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>List1<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>new_PC<span class="token punctuation">)</span>          <span class="token function">LI_Add</span><span class="token punctuation">(</span>List1<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> RP<span class="token punctuation">,</span> List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>new_PC<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>List1<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> k<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> List1<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">CB_Set</span><span class="token punctuation">(</span>List<span class="token punctuation">,</span> Index<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> Item <span class="token operator">=</span> List<span class="token punctuation">[</span>Index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>Item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>CallBack<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">var</span> AJSQ <span class="token operator">=</span> EIJS<span class="token punctuation">.</span>AsyncJS<span class="token punctuation">;</span>      <span class="token keyword">var</span> AJS_NO <span class="token operator">=</span> AJSQ<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>      <span class="token keyword">var</span> AJS_CB <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>AJSQ<span class="token punctuation">[</span>AJS_NO<span class="token punctuation">]</span> <span class="token operator">==</span> Item<span class="token punctuation">.</span>length<span class="token punctuation">)</span> Item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">CallBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">TF_Import</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> n <span class="token operator">&lt;</span> Item<span class="token punctuation">.</span>length<span class="token punctuation">;</span> n<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token function">xImport</span><span class="token punctuation">(</span>Item<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">.</span>URL<span class="token punctuation">,</span> AJS_CB<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">CB_Chain</span><span class="token punctuation">(</span>JS_RC<span class="token punctuation">,</span> Final_CB<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> DRQ <span class="token operator">=</span> EIJS<span class="token punctuation">.</span>DOM_Ready<span class="token punctuation">;</span>    <span class="token keyword">var</span> DRQ_NO <span class="token operator">=</span> DRQ<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> k <span class="token operator">=</span> JS_RC<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">,</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">></span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span> k<span class="token operator">--</span><span class="token punctuation">,</span> l<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>l<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Final_CB<span class="token punctuation">)</span> <span class="token punctuation">{</span>          JS_RC<span class="token punctuation">[</span>k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'CallBack'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>iEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>DRQ<span class="token punctuation">[</span>DRQ_NO<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> Final_CB<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token punctuation">;</span>          <span class="token function">DOM_Ready_Event</span><span class="token punctuation">(</span>JS_RC<span class="token punctuation">[</span>k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>CallBack<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">var</span> Last_Script <span class="token operator">=</span> JS_RC<span class="token punctuation">[</span>k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>URL<span class="token punctuation">;</span>          JS_RC<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'CallBack'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>iEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>DRQ<span class="token punctuation">[</span>DRQ_NO<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token function">xImport</span><span class="token punctuation">(</span>Last_Script<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token punctuation">;</span>          <span class="token function">DOM_Ready_Event</span><span class="token punctuation">(</span>JS_RC<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>CallBack<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">continue</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> JS_RC<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'CallBack'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">CB_Set</span><span class="token punctuation">(</span>JS_RC<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// ----------- Open API ----------- //</span>  BOM<span class="token punctuation">.</span>ImportJS <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> Func_Args <span class="token operator">=</span> Array<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>slice<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> Func_Args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'string'</span><span class="token punctuation">)</span> RootPath <span class="token operator">=</span> Func_Args<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> RootPath <span class="token operator">=</span> <span class="token string">'./'</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>Func_Args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> JS_List <span class="token operator">=</span> Func_Args<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">throw</span> <span class="token string">"Format of Importing List isn't currect !"</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> Func_Args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'function'</span><span class="token punctuation">)</span> CallBack <span class="token operator">=</span> Func_Args<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> CallBack <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>Func_Args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Array</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>IE_Ver<span class="token punctuation">)</span>      NameSpace <span class="token operator">=</span> NameSpace<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>Func_Args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>IE_Ver<span class="token punctuation">)</span> <span class="token punctuation">{</span>      JS_List <span class="token operator">=</span> NameSpace<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>JS_List<span class="token punctuation">)</span><span class="token punctuation">;</span>      NameSpace <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">var</span> JS_Item <span class="token operator">=</span> <span class="token function">SL_Set</span><span class="token punctuation">(</span>RootPath<span class="token punctuation">,</span> JS_List<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">CB_Chain</span><span class="token punctuation">(</span>JS_Item<span class="token punctuation">,</span> CallBack<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">xImport</span><span class="token punctuation">(</span>JS_Item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>URL<span class="token punctuation">,</span> JS_Item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>CallBack<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  BOM<span class="token punctuation">.</span>ImportJS<span class="token punctuation">.</span>UA <span class="token operator">=</span> <span class="token punctuation">{</span>    IE<span class="token punctuation">:</span> <span class="token operator">!</span><span class="token operator">!</span>old_IE<span class="token punctuation">,</span>    Modern<span class="token punctuation">:</span> <span class="token operator">!</span>old_IE<span class="token punctuation">,</span>    Mobile<span class="token punctuation">:</span> <span class="token operator">!</span><span class="token operator">!</span>is_Mobile<span class="token punctuation">,</span>    Pad<span class="token punctuation">:</span> <span class="token operator">!</span><span class="token operator">!</span>is_Pad<span class="token punctuation">,</span>    Phone<span class="token punctuation">:</span> <span class="token operator">!</span><span class="token operator">!</span>is_Phone  <span class="token punctuation">}</span><span class="token punctuation">;</span>  BOM<span class="token punctuation">.</span>ImportJS<span class="token punctuation">.</span>NS <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> NameSpace<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> self<span class="token punctuation">.</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> JavaScript </tag>
            
            <tag> module </tag>
            
            <tag> loader </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【原创】JavaScript 文件响应式异步加载器（单页稳定版）</title>
      <link href="/programming/web-js-file-loader/"/>
      <url>/programming/web-js-file-loader/</url>
      
        <content type="html"><![CDATA[<p>我在做<a href="http://mag.fyscu.com/" target="_blank" rel="noopener">《i 飞扬》电子杂志 HTML5 在线版</a>的过程中，为了在不改变 <strong>Web 前端程序猿的编程思维习惯</strong>的前提下，保证整个 <strong>WebApp 的好用、可靠</strong>，自己开发了一个<strong>【JavaScript 文件响应式异步加载器】</strong>—— <a href="http://bbs.fyscu.com/forum.php?mod=viewthread&tid=4808" target="_blank" rel="noopener">EasyImport.js</a>。</p><p>开始只是一段放在 HTML <code>&lt;head /&gt;</code> 中的小脚本，没觉得是个多么复杂的东西。但随着应用的深入，要想做到上述自己定下的目标，<strong>代码不断地迭代</strong>，期间也因为严重的 Bug 而怀疑它的价值，所以有了后来的一次较大的局部重构。</p><p>但辛劳总会有收获 —— 个人更深刻地理解了 <strong>JavaScript</strong>、<strong>DOM</strong> 的一些细节，它本身也到了足够成熟的地步，作为几个<strong>线上实用项目的基础库</strong>，运行在很多人的浏览器中~</p><h2 id="v0-6（单页稳定版）"><a href="#v0-6（单页稳定版）" class="headerlink" title="v0.6（单页稳定版）"></a>v0.6（单页稳定版）</h2><p>这是 <strong>EasyImport.js 首个功能完备的稳定版</strong>，能给 <strong>单页应用</strong> 提供有力的<strong>异步加载、响应式适配</strong>支持，但不支持 <strong><code>&lt;iframe /&gt;</code> 子页面的 JS、CSS 继承</strong>（也就是说，它独立运行于每一个加载它的父/子页面中，不考虑关联页面的相互联系）。它将提供<strong>长期 Bug 修复的官方维护</strong>，后续版本与本版的公共代码也将同步更新，但不会再改变代码的整体结构。而子页面继承将在下个稳定版给予集成~</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//                >>>  EasyImport.js  &lt;&lt;&lt;</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//      [Version]    v0.6  (2014-11-17)  Stable</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//      [Usage]      Only for loading JavaScript files in Single-Page Web,</span><span class="token comment" spellcheck="true">//                   no Inherit support for Frames.</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//              (C)2013-2014    SCU FYclub-RDD</span><span class="token comment" spellcheck="true">//</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>BOM<span class="token punctuation">,</span> DOM<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">var</span> UA <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">,</span>    RootPath<span class="token punctuation">,</span>    JS_List<span class="token punctuation">,</span>    CallBack<span class="token punctuation">,</span>    EIJS <span class="token operator">=</span> <span class="token punctuation">{</span>      AsyncJS<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      DOM_Ready<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// ----------- Inner Basic Member ----------- //</span>  <span class="token keyword">var</span> is_IE <span class="token operator">=</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/MSIE (\d)|Trident[^\)]+rv:(\d+)/i</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    is_Webkit <span class="token operator">=</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/Webkit/i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> IE_Ver <span class="token operator">=</span> is_IE <span class="token operator">?</span> <span class="token function">Number</span><span class="token punctuation">(</span>is_IE<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> is_IE<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token number">NaN</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> old_IE <span class="token operator">=</span> IE_Ver <span class="token operator">&amp;&amp;</span> IE_Ver <span class="token operator">&lt;</span> <span class="token number">9</span><span class="token punctuation">,</span>    is_Pad <span class="token operator">=</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/Tablet|Pad|Book|Android 3/i</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    is_Phone <span class="token operator">=</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/Phone|Touch|Android 2|Symbian/i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> is_Mobile <span class="token operator">=</span>    <span class="token punctuation">(</span>is_Pad <span class="token operator">||</span> is_Phone <span class="token operator">||</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/Mobile/i</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/ PC /</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">function</span> <span class="token function">DOM_Loaded_Event</span><span class="token punctuation">(</span>DOM_E<span class="token punctuation">,</span> CB_Func<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>old_IE<span class="token punctuation">)</span> DOM_E<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'load'</span><span class="token punctuation">,</span> CB_Func<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>      DOM_E<span class="token punctuation">.</span><span class="token function">attachEvent</span><span class="token punctuation">(</span><span class="token string">'onreadystatechange'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>DOM_E<span class="token punctuation">.</span>readyState<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/loaded|complete/</span><span class="token punctuation">)</span><span class="token punctuation">)</span> CB_Func<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>DOM_E<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">DOM_Ready_Event</span><span class="token punctuation">(</span>_CB<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>old_IE<span class="token punctuation">)</span> DOM<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'DOMContentLoaded'</span><span class="token punctuation">,</span> _CB<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>self <span class="token operator">!==</span> top<span class="token punctuation">)</span> <span class="token function">DOM_Loaded_Event</span><span class="token punctuation">(</span>DOM<span class="token punctuation">,</span> _CB<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>      <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>          DOM<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span><span class="token function">doScroll</span><span class="token punctuation">(</span><span class="token string">'left'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          _CB<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>DOM<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token function">setTimeout</span><span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>callee<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">$_TN</span><span class="token punctuation">(</span>HTML_Elements<span class="token punctuation">,</span> TagName<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> HTML_Elements<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span>TagName<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">NewTag</span><span class="token punctuation">(</span>TagName<span class="token punctuation">,</span> AttrList<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> NE <span class="token operator">=</span> DOM<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>TagName<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>AttrList<span class="token punctuation">)</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> AK <span class="token keyword">in</span> AttrList<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>IE_Ver <span class="token operator">&amp;&amp;</span> AK <span class="token operator">==</span> <span class="token string">'class'</span><span class="token punctuation">)</span> NE<span class="token punctuation">.</span>className <span class="token operator">=</span> AttrList<span class="token punctuation">[</span>AK<span class="token punctuation">]</span><span class="token punctuation">;</span>        NE<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>AK<span class="token punctuation">,</span> AttrList<span class="token punctuation">[</span>AK<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token keyword">return</span> NE<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">var</span> DOM_Head <span class="token operator">=</span> <span class="token function">$_TN</span><span class="token punctuation">(</span>DOM<span class="token punctuation">,</span> <span class="token string">'head'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> DOM_Title <span class="token operator">=</span> <span class="token function">$_TN</span><span class="token punctuation">(</span>DOM_Head<span class="token punctuation">,</span> <span class="token string">'title'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// ----------- Standard Mode Meta Patches ----------- //</span>  DOM_Head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>    <span class="token function">NewTag</span><span class="token punctuation">(</span><span class="token string">'meta'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>      <span class="token string">'http-equiv'</span><span class="token punctuation">:</span> <span class="token string">'Window-Target'</span><span class="token punctuation">,</span>      content<span class="token punctuation">:</span> <span class="token string">'_top'</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>is_Mobile<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>old_IE<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">var</span> is_WeChat <span class="token operator">=</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/MicroMessenger/i</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        is_UCWeb <span class="token operator">=</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/UCBrowser|UCWeb/i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      DOM_Head<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>        <span class="token function">NewTag</span><span class="token punctuation">(</span><span class="token string">'meta'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>          name<span class="token punctuation">:</span> <span class="token string">'viewport'</span><span class="token punctuation">,</span>          content<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">[</span>              <span class="token string">'width'</span><span class="token punctuation">,</span>              is_Phone <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>is_WeChat <span class="token operator">||</span> is_UCWeb<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">320</span> <span class="token punctuation">:</span> <span class="token string">'device-width'</span>            <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">'initial-scale=1.0'</span><span class="token punctuation">,</span>            <span class="token string">'minimum-scale=1.0'</span><span class="token punctuation">,</span>            <span class="token string">'target-densitydpi=medium-dpi'</span>          <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        DOM_Title      <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span>      DOM_Head<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>        <span class="token function">NewTag</span><span class="token punctuation">(</span><span class="token string">'meta'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>          name<span class="token punctuation">:</span> <span class="token string">'MobileOptimized'</span><span class="token punctuation">,</span>          content<span class="token punctuation">:</span> <span class="token number">320</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        DOM_Title      <span class="token punctuation">)</span><span class="token punctuation">;</span>    DOM_Head<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>      <span class="token function">NewTag</span><span class="token punctuation">(</span><span class="token string">'meta'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>        name<span class="token punctuation">:</span> <span class="token string">'HandheldFriendly'</span><span class="token punctuation">,</span>        content<span class="token punctuation">:</span> <span class="token string">'true'</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      DOM_Title    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>IE_Ver<span class="token punctuation">)</span>    DOM_Head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>      <span class="token function">NewTag</span><span class="token punctuation">(</span><span class="token string">'meta'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>        <span class="token string">'http-equiv'</span><span class="token punctuation">:</span> <span class="token string">'X-UA-Compatible'</span><span class="token punctuation">,</span>        content<span class="token punctuation">:</span> <span class="token string">'IE=Edge, Chrome=1'</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// ----------- Inner Logic Module ----------- //</span>  <span class="token keyword">function</span> <span class="token function">xImport</span><span class="token punctuation">(</span>JS_URL<span class="token punctuation">,</span> CB_Func<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> SE <span class="token operator">=</span> <span class="token function">NewTag</span><span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>      type<span class="token punctuation">:</span> <span class="token string">'text/javascript'</span><span class="token punctuation">,</span>      charset<span class="token punctuation">:</span> <span class="token string">'UTF-8'</span><span class="token punctuation">,</span>      src<span class="token punctuation">:</span> JS_URL    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>CB_Func<span class="token punctuation">)</span> <span class="token function">DOM_Loaded_Event</span><span class="token punctuation">(</span>SE<span class="token punctuation">,</span> CB_Func<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">$_TN</span><span class="token punctuation">(</span>DOM<span class="token punctuation">,</span> <span class="token string">'head'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>SE<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">LI_Add</span><span class="token punctuation">(</span>LQ<span class="token punctuation">,</span> RP<span class="token punctuation">,</span> FN<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>FN<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/^http(s)?:\/\//</span><span class="token punctuation">)</span><span class="token punctuation">)</span> FN <span class="token operator">=</span> RP <span class="token operator">+</span> FN<span class="token punctuation">;</span>    LQ<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> URL<span class="token punctuation">:</span> FN <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">SL_Set</span><span class="token punctuation">(</span>RP<span class="token punctuation">,</span> List0<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> List0<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span><span class="token punctuation">)</span> List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> List1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> List0<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      List1<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> _URL<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'string'</span><span class="token punctuation">)</span> <span class="token function">LI_Add</span><span class="token punctuation">(</span>List1<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> RP<span class="token punctuation">,</span> List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token punctuation">{</span>          <span class="token keyword">var</span> _Rule <span class="token operator">=</span> <span class="token punctuation">{</span>              old_PC<span class="token punctuation">:</span> old_IE<span class="token punctuation">,</span>              Mobile<span class="token punctuation">:</span> is_Mobile<span class="token punctuation">,</span>              Phone<span class="token punctuation">:</span> is_Phone<span class="token punctuation">,</span>              Pad<span class="token punctuation">:</span> is_Pad            <span class="token punctuation">}</span><span class="token punctuation">,</span>            no_Break <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>          <span class="token keyword">for</span> <span class="token punctuation">(</span>RI <span class="token keyword">in</span> _Rule<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>_Rule<span class="token punctuation">[</span>RI<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">if</span> <span class="token punctuation">(</span>List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>RI<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> no_Break <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>              <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>RI<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token function">LI_Add</span><span class="token punctuation">(</span>List1<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> RP<span class="token punctuation">,</span> List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>RI<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>no_Break <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>List1<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>new_PC<span class="token punctuation">)</span>          <span class="token function">LI_Add</span><span class="token punctuation">(</span>List1<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> RP<span class="token punctuation">,</span> List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>new_PC<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>List1<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> k<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> List1<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">CB_Set</span><span class="token punctuation">(</span>List<span class="token punctuation">,</span> Index<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> Item <span class="token operator">=</span> List<span class="token punctuation">[</span>Index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>Item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>CallBack<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">var</span> AJSQ <span class="token operator">=</span> EIJS<span class="token punctuation">.</span>AsyncJS<span class="token punctuation">;</span>      <span class="token keyword">var</span> AJS_NO <span class="token operator">=</span> AJSQ<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>      <span class="token keyword">var</span> AJS_CB <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>AJSQ<span class="token punctuation">[</span>AJS_NO<span class="token punctuation">]</span> <span class="token operator">==</span> Item<span class="token punctuation">.</span>length<span class="token punctuation">)</span> Item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">CallBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">TF_Import</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> n <span class="token operator">&lt;</span> Item<span class="token punctuation">.</span>length<span class="token punctuation">;</span> n<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token function">xImport</span><span class="token punctuation">(</span>Item<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">.</span>URL<span class="token punctuation">,</span> AJS_CB<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">CB_Chain</span><span class="token punctuation">(</span>JS_RC<span class="token punctuation">,</span> Final_CB<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> DRQ <span class="token operator">=</span> EIJS<span class="token punctuation">.</span>DOM_Ready<span class="token punctuation">;</span>    <span class="token keyword">var</span> DRQ_NO <span class="token operator">=</span> DRQ<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> k <span class="token operator">=</span> JS_RC<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">,</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">></span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span> k<span class="token operator">--</span><span class="token punctuation">,</span> l<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>l<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Final_CB<span class="token punctuation">)</span> <span class="token punctuation">{</span>          JS_RC<span class="token punctuation">[</span>k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'CallBack'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>iEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>DRQ<span class="token punctuation">[</span>DRQ_NO<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> Final_CB<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token punctuation">;</span>          <span class="token function">DOM_Ready_Event</span><span class="token punctuation">(</span>JS_RC<span class="token punctuation">[</span>k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>CallBack<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">var</span> Last_Script <span class="token operator">=</span> JS_RC<span class="token punctuation">[</span>k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>URL<span class="token punctuation">;</span>          JS_RC<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'CallBack'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>iEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>DRQ<span class="token punctuation">[</span>DRQ_NO<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token function">xImport</span><span class="token punctuation">(</span>Last_Script<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token punctuation">;</span>          <span class="token function">DOM_Ready_Event</span><span class="token punctuation">(</span>JS_RC<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>CallBack<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">continue</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> JS_RC<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'CallBack'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">CB_Set</span><span class="token punctuation">(</span>JS_RC<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// ----------- Open API ----------- //</span>  BOM<span class="token punctuation">.</span>ImportJS <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> Func_Args <span class="token operator">=</span> Array<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>slice<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> Func_Args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'string'</span><span class="token punctuation">)</span> RootPath <span class="token operator">=</span> Func_Args<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>      RootPath <span class="token operator">=</span> <span class="token function">$_TN</span><span class="token punctuation">(</span>DOM<span class="token punctuation">,</span> <span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>src<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>        <span class="token regex">/[^\/]*EasyImport[^\/]*\.js[^\/]*$/i</span><span class="token punctuation">,</span>        <span class="token string">''</span>      <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>Func_Args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> JS_List <span class="token operator">=</span> Func_Args<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">throw</span> <span class="token string">"Format of Importing List isn't currect !"</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> Func_Args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'function'</span><span class="token punctuation">)</span> CallBack <span class="token operator">=</span> Func_Args<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> CallBack <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> JS_Item <span class="token operator">=</span> <span class="token function">SL_Set</span><span class="token punctuation">(</span>RootPath<span class="token punctuation">,</span> JS_List<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>JS_Item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token function">CB_Chain</span><span class="token punctuation">(</span>JS_Item<span class="token punctuation">,</span> CallBack<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">xImport</span><span class="token punctuation">(</span>JS_Item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>URL<span class="token punctuation">,</span> JS_Item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>CallBack<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  BOM<span class="token punctuation">.</span>ImportJS<span class="token punctuation">.</span>UA <span class="token operator">=</span> <span class="token punctuation">{</span>    IE<span class="token punctuation">:</span> <span class="token operator">!</span><span class="token operator">!</span>old_IE<span class="token punctuation">,</span>    Modern<span class="token punctuation">:</span> <span class="token operator">!</span>old_IE<span class="token punctuation">,</span>    Mobile<span class="token punctuation">:</span> <span class="token operator">!</span><span class="token operator">!</span>is_Mobile<span class="token punctuation">,</span>    Pad<span class="token punctuation">:</span> <span class="token operator">!</span><span class="token operator">!</span>is_Pad<span class="token punctuation">,</span>    Phone<span class="token punctuation">:</span> <span class="token operator">!</span><span class="token operator">!</span>is_Phone  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> document<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="【平台支持】"><a href="#【平台支持】" class="headerlink" title="【平台支持】"></a>【平台支持】</h2><ul><li>主流内核浏览器：IE 7~11、Firefox 3+、Chrome、Safari、Opera</li><li>国产马甲浏览器：傲游 2+、枫树、搜狗高速 3+、360 安全/极速、猎豹、QQ 等（还可能有个别奇葩 Bug，恕无力一一测试……）</li><li>Android、iOS、Windows Phone、Symbian 等智能设备平台上的自带浏览器及其内核控件</li></ul><h2 id="【主要特性】"><a href="#【主要特性】" class="headerlink" title="【主要特性】"></a>【主要特性】</h2><ol><li> 替代 <code>&lt;script /&gt;</code> 加载 HTML 页面中<strong>所有外置、内置 JavaScript 脚本</strong>，但不改变原有“<strong>顺序即依赖</strong>”的前端编程习惯，且书写形式比原来更简洁</li><li> 所有外置脚本都可写在 <code>&lt;head /&gt;</code> 中，但却能与整个页面的其它部分<strong>并行加载</strong>，<strong>代码结构清晰</strong>而又<strong>高性能</strong></li><li> 最后一段脚本（无论内置回调、外置脚本）自动在 <strong>DOM Ready</strong> 后加载/执行，既靠谱又方便（<code>$(document).ready(function () {});</code> 之类的大包装可以完全不需要了）</li><li> 无依赖的部分外置脚本只需用 <code>[]</code>（数组字面量）括起来就可以<strong>异步加载</strong></li><li> 外置脚本可以根据浏览器平台类型<strong>选择性加载</strong>，模块化管理 JavaScript</li><li> <strong>移动设备浏览器布局模式自适配</strong>：添加其适用的各种 <code>&lt;meta /&gt;</code> 标签，让网页源码以标准而通用的简洁思维编写，自然地实施<strong>响应式设计</strong></li><li> 浏览器级的 <code>&lt;iframe /&gt;</code> 套用防御</li></ol><h2 id="【典型案例】"><a href="#【典型案例】" class="headerlink" title="【典型案例】"></a>【典型案例】</h2><p><a href="http://mag.fyscu.com/iWB/iBookView.php?name=iFY&amp;index=19" target="_blank" rel="noopener">http://mag.fyscu.com/iWB/iBookView.php?name=iFY&amp;index=19</a></p><p>以下<strong>示例代码</strong>摘抄自上述网页的 HTML 源码 ——</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  ......  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./Libs/EasyImport.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token function">ImportJS</span><span class="token punctuation">(</span>      <span class="token punctuation">[</span>        <span class="token punctuation">{</span>          old_PC<span class="token punctuation">:</span> <span class="token string">'jQuery.js'</span><span class="token punctuation">,</span>          new_PC<span class="token punctuation">:</span> <span class="token string">'jQuery2.js'</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span>          <span class="token punctuation">{</span>            old_PC<span class="token punctuation">:</span> <span class="token string">'Turn.HTML4.js'</span><span class="token punctuation">,</span>            new_PC<span class="token punctuation">:</span> <span class="token string">'Turn.js'</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token string">'Smooth_Scroll.js'</span><span class="token punctuation">,</span>          <span class="token string">'jPlayer.js'</span><span class="token punctuation">,</span>          <span class="token string">'jQuery.Hammer.js'</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            old_PC<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            new_PC<span class="token punctuation">:</span> <span class="token string">'jQuery.PageZoomer.js'</span><span class="token punctuation">,</span>            Mobile<span class="token punctuation">:</span> <span class="token boolean">false</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            new_PC<span class="token punctuation">:</span> <span class="token string">'Hover_Scroll.js'</span><span class="token punctuation">,</span>            Mobile<span class="token punctuation">:</span> <span class="token boolean">false</span>          <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'FY_iWeBook.js'</span>      <span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#iWB'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">iWeBook</span><span class="token punctuation">(</span><span class="token string">'#jPlayer_Box'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> duoshuoQuery <span class="token operator">=</span> <span class="token punctuation">{</span> short_name<span class="token punctuation">:</span> <span class="token string">'fyscu'</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token function">ImportJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'http://static.duoshuo.com/embed.js'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  ......<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></code></pre><h2 id="【参考文章】"><a href="#【参考文章】" class="headerlink" title="【参考文章】"></a>【参考文章】</h2><ol><li> <a href="http://sunnylost.com/article/js.load.scripts.sequence.html" target="_blank" rel="noopener">http://sunnylost.com/article/js.load.scripts.sequence.html</a></li><li> <a href="http://bbs.fyscu.com/forum.php?mod=viewthread&amp;tid=4808" target="_blank" rel="noopener">http://bbs.fyscu.com/forum.php?mod=viewthread&amp;tid=4808</a></li><li> <a href="http://www.cnblogs.com/pigtail/archive/2013/03/15/2961631.html" target="_blank" rel="noopener">http://www.cnblogs.com/pigtail/archive/2013/03/15/2961631.html</a></li><li> <a href="http://www.uiej.com/960.html" target="_blank" rel="noopener">http://www.uiej.com/960.html</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> JavaScript </tag>
            
            <tag> module </tag>
            
            <tag> loader </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【网页重构】CSS 规则清理（浏览器 BookMarkLet、FireBug 插件）</title>
      <link href="/programming/css-rule-cleaner/"/>
      <url>/programming/css-rule-cleaner/</url>
      
        <content type="html"><![CDATA[<p>很多程序猿认为 —— <strong>最蛋疼的工作不在于重写或创新，而是“修改前任程序猿留下的代码”……</strong></p><p>对<strong>前端工程师</strong>来说，若不进行彻底的<strong>网页重构</strong>，而只是修补现有网页的代码（多是之前由 <strong>后端工程师</strong> 乃至 <strong>只会点儿 DreamWeaver 的运维网管</strong> 写的），再加上浏览器兼容性的工作特性（特别是 **IE 8-**），简直是“英年早逝”的节奏……</p><p>你能想象一个 HTML 文件中全是大量<em>乱七八糟、东拼西凑</em>的 标签结构 和 CSS 规则 吗？不仅如此，<code>&lt;link rel=&quot;stylesheet&quot; /&gt;</code>、<code>&lt;style /&gt;</code>、<code>&lt;script /&gt;</code> 也是随时随地出现；很多 HTML 元素都由不止一个 CSS 文件中的多个毫无逻辑联系的规则 叠加影响；文件命名、目录结构也超乱…… <strong>“大海捞针”、“牵一发而动全身”</strong>便是再贴切不过的形容了……</p><p>若能用工具清理一遍 CSS，那我们的工作就搞定一半了～</p><h2 id="原创小工具"><a href="#原创小工具" class="headerlink" title="原创小工具"></a>原创小工具</h2><p>这里先分享一下我原创的一个 <strong>BookMarkLet</strong> 形式的 <a href="http://gitee.com/Tech_Query/iBookmarkLet" target="_blank" rel="noopener"><strong>网页 CSS 规则使用率检测工具</strong></a> ——</p><pre class=" language-javascript"><code class="language-javascript"><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>BOM<span class="token punctuation">,</span> DOM<span class="token punctuation">,</span> $<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">var</span> CSS_File <span class="token operator">=</span> DOM<span class="token punctuation">.</span>styleSheets<span class="token punctuation">,</span>    CopyRight <span class="token operator">=</span> <span class="token string">'(C)2014-2015  test_32@fyscu.com'</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>$<span class="token punctuation">)</span> <span class="token punctuation">{</span>    BOM<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span>      <span class="token string">'Please run This Tool in IE 8+ (Standard Mode) or a Modern Web Browser.'</span> <span class="token operator">+</span>        <span class="token string">'\n\n'</span> <span class="token operator">+</span>        CopyRight    <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>console<span class="token punctuation">)</span> <span class="token punctuation">{</span>    BOM<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span>      <span class="token string">'Please run This Tool with JavaScript Console opened.'</span> <span class="token operator">+</span>        <span class="token string">'\n\n'</span> <span class="token operator">+</span>        CopyRight    <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">URL_Path</span><span class="token punctuation">(</span>URL<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>URL<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/^\w+:\/\//</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      URL <span class="token operator">=</span> URL<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      URL<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      URL <span class="token operator">=</span> URL<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> URL<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">SelectorCheck</span><span class="token punctuation">(</span>Selector<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Selector <span class="token operator">=</span> Selector<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> _NU_ <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> Selector<span class="token punctuation">.</span>length<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">$</span><span class="token punctuation">(</span>Selector<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> _NU_<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>Selector<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> _NU_<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">CSS_Rule_Each</span><span class="token punctuation">(</span>CSS_Rule_Group<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">try</span> <span class="token punctuation">{</span>      <span class="token keyword">var</span> CSS_Rule <span class="token operator">=</span> CSS_Rule_Group<span class="token punctuation">.</span>cssRules <span class="token operator">||</span> CSS_Rule_Group<span class="token punctuation">.</span>rules<span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token keyword">var</span> Selector <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">,</span>      NoUsage <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      Test_Result <span class="token operator">=</span> <span class="token punctuation">{</span>        media<span class="token punctuation">:</span> CSS_Rule_Group<span class="token punctuation">.</span>media<span class="token punctuation">.</span>mediaText<span class="token punctuation">,</span>        mediaRules<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        fontsRules<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>      <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>CSS_Rule<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> _Rule_<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> CSS_Rule<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        _Rule_ <span class="token operator">=</span> CSS_Rule<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>_Rule_<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>            <span class="token punctuation">{</span>              <span class="token comment" spellcheck="true">//  CSSStyleRule</span>              _Rule_ <span class="token operator">=</span> <span class="token function">SelectorCheck</span><span class="token punctuation">(</span>_Rule_<span class="token punctuation">.</span>selectorText<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token keyword">if</span> <span class="token punctuation">(</span>_Rule_<span class="token punctuation">.</span>length<span class="token punctuation">)</span> NoUsage<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>_Rule_<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>          <span class="token keyword">case</span> <span class="token number">4</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">//  CSSMediaRule</span>            Test_Result<span class="token punctuation">.</span>mediaRules<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arguments<span class="token punctuation">.</span><span class="token function">callee</span><span class="token punctuation">(</span>_Rule_<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>          <span class="token keyword">case</span> <span class="token number">5</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">//  CSSFontFaceRule</span>            Test_Result<span class="token punctuation">.</span>fontsRules<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>              fontFamily<span class="token punctuation">:</span> _Rule_<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontFamily<span class="token punctuation">,</span>              src<span class="token punctuation">:</span> _Rule_<span class="token punctuation">.</span>style<span class="token punctuation">.</span>src            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>      Test_Result<span class="token punctuation">.</span>WasteRate <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>NoUsage<span class="token punctuation">.</span>length <span class="token operator">/</span> j<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'%'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span>Test_Result<span class="token punctuation">,</span> NoUsage<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> _File_<span class="token punctuation">,</span> _Result_ <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> CSS_File<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    _Result_<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">CSS_Rule_Each</span><span class="token punctuation">(</span>CSS_File<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> _File_ <span class="token operator">=</span> _Result_<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    _File_<span class="token punctuation">.</span>href <span class="token operator">=</span> CSS_File<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>href<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>_File_<span class="token punctuation">.</span>WasteRate <span class="token operator">&amp;&amp;</span> _File_<span class="token punctuation">.</span>href<span class="token punctuation">)</span> _File_<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token function">URL_Path</span><span class="token punctuation">(</span>_File_<span class="token punctuation">.</span>href<span class="token punctuation">)</span><span class="token punctuation">;</span>    _File_<span class="token punctuation">.</span>element <span class="token operator">=</span> CSS_File<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>ownerNode<span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>_File_<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>_Result_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> self<span class="token punctuation">.</span>document<span class="token punctuation">,</span> self<span class="token punctuation">.</span>document<span class="token punctuation">.</span>querySelectorAll<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="安装版代码"><a href="#安装版代码" class="headerlink" title="安装版代码"></a>安装版代码</h3><!-- prettier-ignore-start --><pre class=" language-javascript"><code class="language-javascript">javascript<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> a<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/^\w+:\/\//</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>a<span class="token operator">=</span>a<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>a<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">,</span>a<span class="token operator">=</span>a<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>a<span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">g</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> b<span class="token punctuation">,</span>d<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>a<span class="token operator">=</span>a<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">,</span>b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>d<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>d<span class="token operator">&lt;</span>a<span class="token punctuation">.</span>length<span class="token punctuation">;</span>d<span class="token operator">++</span><span class="token punctuation">)</span><span class="token function">c</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>d<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token operator">||</span>b<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>d<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> b<span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">h</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> b<span class="token punctuation">,</span>e<span class="token punctuation">,</span>f<span class="token punctuation">,</span>i<span class="token punctuation">,</span>h<span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{</span>b<span class="token operator">=</span>a<span class="token punctuation">.</span>cssRules<span class="token operator">||</span>a<span class="token punctuation">.</span>rules<span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span>e<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>f<span class="token operator">=</span><span class="token punctuation">{</span>media<span class="token punctuation">:</span>a<span class="token punctuation">.</span>media<span class="token punctuation">.</span>mediaText<span class="token punctuation">,</span>mediaRules<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>fontsRules<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">for</span><span class="token punctuation">(</span>h<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>h<span class="token operator">&lt;</span>b<span class="token punctuation">.</span>length<span class="token punctuation">;</span>h<span class="token operator">++</span><span class="token punctuation">)</span><span class="token keyword">switch</span><span class="token punctuation">(</span>i<span class="token operator">=</span>b<span class="token punctuation">[</span>h<span class="token punctuation">]</span><span class="token punctuation">,</span>i<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>i<span class="token operator">=</span><span class="token function">g</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>selectorText<span class="token punctuation">)</span><span class="token punctuation">,</span>i<span class="token punctuation">.</span>length<span class="token operator">&amp;&amp;</span>e<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token number">4</span><span class="token punctuation">:</span>f<span class="token punctuation">.</span>mediaRules<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arguments<span class="token punctuation">.</span><span class="token function">callee</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token number">5</span><span class="token punctuation">:</span>f<span class="token punctuation">.</span>fontsRules<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>fontFamily<span class="token punctuation">:</span>i<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontFamily<span class="token punctuation">,</span>src<span class="token punctuation">:</span>i<span class="token punctuation">.</span>style<span class="token punctuation">.</span>src<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>f<span class="token punctuation">.</span>WasteRate<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token operator">*</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>length<span class="token operator">/</span>h<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"%"</span><span class="token punctuation">}</span><span class="token keyword">return</span><span class="token punctuation">[</span>f<span class="token punctuation">,</span>e<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token keyword">var</span> j<span class="token punctuation">,</span>i<span class="token punctuation">,</span>k<span class="token punctuation">,</span>d<span class="token operator">=</span>b<span class="token punctuation">.</span>styleSheets<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token string">"(C)2014-2015  test_32@fyscu.com"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>c<span class="token punctuation">)</span><span class="token keyword">return</span> a<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Please run This Tool in IE 8+ (Standard Mode) or a Modern Web Browser.\n\n"</span><span class="token operator">+</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>console<span class="token punctuation">)</span><span class="token keyword">return</span> a<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Please run This Tool with JavaScript Console opened.\n\n"</span><span class="token operator">+</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>k<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>d<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>k<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">h</span><span class="token punctuation">(</span>d<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>j<span class="token operator">=</span>k<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>j<span class="token punctuation">.</span>href<span class="token operator">=</span>d<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>href<span class="token punctuation">,</span>j<span class="token punctuation">.</span>WasteRate<span class="token operator">&amp;&amp;</span>j<span class="token punctuation">.</span>href<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>j<span class="token punctuation">.</span>href<span class="token operator">=</span><span class="token function">f</span><span class="token punctuation">(</span>j<span class="token punctuation">.</span>href<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>j<span class="token punctuation">.</span>element<span class="token operator">=</span>d<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>ownerNode<span class="token punctuation">,</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>self<span class="token punctuation">.</span>document<span class="token punctuation">,</span>self<span class="token punctuation">.</span>document<span class="token punctuation">.</span>querySelectorAll<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><!-- prettier-ignore-end --><h3 id="工具特性"><a href="#工具特性" class="headerlink" title="工具特性"></a>工具特性</h3><ol><li> <strong>扫描当前网页中所有内置/外置的 CSS，在控制台显示各 CSS 标签/文件中哪些规则对本页无用、共占比多少</strong></li><li> 外置 CSS 会显示<strong>文件相对路径</strong></li><li> 内置 CSS 会显示其对应的 HTML 元素，便于<strong>在调试器显示的 DOM 树上定位</strong></li><li> <strong>CSS 媒体查询、字体</strong>的规则会在显示的对象中有独立分支</li><li> 暂不支持 CSS 选择符中间有 <strong>伪类、伪元素</strong>的情况，只支持它们出现在 选择符链的最后端（这是与下文提及的专业工具之<strong>有效比计算</strong>有误差的主要原因）</li><li> <strong>跨域的 CSS 文件</strong>无法扫描（它们一般都是 <strong>CDN 通用库</strong> 或 部署环境中的<strong>静态文件服务器</strong>托管的压缩版，本来就不是用于调试的）</li></ol><h2 id="FireBug-插件-——-CSS-Usage"><a href="#FireBug-插件-——-CSS-Usage" class="headerlink" title="FireBug 插件 —— CSS Usage"></a>FireBug 插件 —— CSS Usage</h2><p>现在比较成熟的 <strong>CSS 有效性检查工具</strong> 当属 <code>CSS Usage</code> 了，它不仅能用彩色的富文本显示每个 CSS 标签/文件中<strong>每条规则在当前网页中的使用率</strong>，还能<strong>生成过滤后的 CSS 文本</strong>，可以直接复制粘贴到代码编辑器中保存、使用～</p><p>至于它的安装，和 FireBug 一样，在 <strong>FireFox</strong> 的<strong>附加组件</strong>管理界面中搜索、下载、安装、重启，在 FireBug 主界面上端的选项卡最后就能看到它了～</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> CSS </tag>
            
            <tag> browser </tag>
            
            <tag> bookmark </tag>
            
            <tag> toolkit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaScript 进阶】面向对象编程与 jQuery 式 API 的实现</title>
      <link href="/programming/javascript-oop-jquery-api/"/>
      <url>/programming/javascript-oop-jquery-api/</url>
      
        <content type="html"><![CDATA[<p><strong>JavaScript 简洁、灵活，jQuery 优雅、强大</strong> —— 它们共同开拓了新的思维方式，影响了一代程序员和他们的 Web 前端开源项目，这是毋庸置疑的~</p><p>要想让它们的简洁、灵活、优雅、强大为我所用，内化为编程上的精神法宝，亲手“临摹”一下既有趣又有力。一番死磕之后，jQuery 中蕴含的 <strong>JavaScript 面向对象的思想方法</strong> 自然就很容易理解了~</p><h2 id="山寨版-jQuery-半成品"><a href="#山寨版-jQuery-半成品" class="headerlink" title="山寨版 jQuery 半成品"></a>山寨版 jQuery 半成品</h2><p>目前仅简单地实现了<strong>最常用的选择器</strong>（标签、ID、类、first/last/only/nth-child 伪类）、<strong>选择器上下文</strong>、<strong>最常用的 jQuery 对象方法</strong>（each、find、on、off 等）、<strong>连缀语法</strong>等 ——</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// ----------- xDOM  Core Object ----------- //</span><span class="token keyword">function</span> <span class="token function">DOMxx</span><span class="token punctuation">(</span>Selector<span class="token punctuation">,</span> Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>xDOM <span class="token operator">=</span> <span class="token string">'0.5'</span><span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>jquery <span class="token operator">=</span> <span class="token string">'1.9.0'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//  Work with the version of jQuery API</span>  <span class="token comment" spellcheck="true">// ----------- Atom Functions (Private Method) ----------- //</span>  <span class="token keyword">function</span> <span class="token function">Each</span><span class="token punctuation">(</span>Object<span class="token punctuation">,</span> CallBack<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> Object<span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token string">'length'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> _RV_ <span class="token operator">=</span> CallBack<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>          Object<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span>          <span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> key <span class="token punctuation">:</span> <span class="token function">Number</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>_RV_ <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">inArray</span><span class="token punctuation">(</span>Value<span class="token punctuation">,</span> iArray<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> iArray<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>iArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> Value<span class="token punctuation">)</span> <span class="token keyword">return</span> i<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">Child_PC</span><span class="token punctuation">(</span>EOS<span class="token punctuation">,</span> PCS<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> PES <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      CES <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token function">Each</span><span class="token punctuation">(</span>EOS<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">inArray</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>parentNode<span class="token punctuation">,</span> PES<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> PES<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>parentNode<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> PCS_KW <span class="token operator">=</span> PCS<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/^(\\w+)-child/i</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>PCS_KW <span class="token operator">==</span> <span class="token string">'nth'</span><span class="token punctuation">)</span> <span class="token keyword">var</span> PCS_EC <span class="token operator">=</span> PCS<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/^nth-child\\((.+)\\)/i</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token function">Each</span><span class="token punctuation">(</span>PES<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      EOS <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>children<span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>EOS<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>      <span class="token keyword">switch</span> <span class="token punctuation">(</span>PCS_KW<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">case</span> <span class="token string">'first'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>          CES<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>EOS<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">case</span> <span class="token string">'last'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>          CES<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>EOS<span class="token punctuation">[</span>EOS<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">case</span> <span class="token string">'only'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>EOS<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> CES<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>EOS<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">case</span> <span class="token string">'nth'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>          PCS_EC <span class="token operator">=</span> PCS_EC<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/(\d+)(\w|\()/g</span><span class="token punctuation">,</span> <span class="token string">'$1 * $2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> N <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">;</span> n<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            N <span class="token operator">=</span> <span class="token function">eval</span><span class="token punctuation">(</span>PCS_EC<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>N <span class="token operator">>=</span> EOS<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>            CES<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>EOS<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> CES<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">$_Atom</span><span class="token punctuation">(</span>REO<span class="token punctuation">,</span> SE<span class="token punctuation">)</span> <span class="token punctuation">{</span>    SE <span class="token operator">=</span> SE<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>SE<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">var</span> PC <span class="token operator">=</span> SE<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    SE <span class="token operator">=</span> SE<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span>SE<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">case</span> <span class="token string">'#'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>        REO <span class="token operator">=</span> self<span class="token punctuation">.</span>document<span class="token punctuation">;</span>        MN <span class="token operator">=</span> <span class="token string">'getElementById'</span><span class="token punctuation">;</span>        SE <span class="token operator">=</span> SE<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token keyword">case</span> <span class="token string">'.'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>        MN <span class="token operator">=</span> <span class="token string">'getElementsByClassName'</span><span class="token punctuation">;</span>        SE <span class="token operator">=</span> SE<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token keyword">case</span> <span class="token string">'*'</span><span class="token punctuation">:</span>      <span class="token keyword">default</span><span class="token punctuation">:</span>        MN <span class="token operator">=</span> <span class="token string">'getElementsByTagName'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    REO <span class="token operator">=</span> REO<span class="token punctuation">[</span>MN<span class="token punctuation">]</span><span class="token punctuation">(</span>SE<span class="token punctuation">)</span><span class="token punctuation">;</span>    REO <span class="token operator">=</span> PC <span class="token operator">?</span> <span class="token function">Child_PC</span><span class="token punctuation">(</span>REO<span class="token punctuation">,</span> PC<span class="token punctuation">)</span> <span class="token punctuation">:</span> REO<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token operator">!</span>REO<span class="token punctuation">.</span>length      <span class="token operator">?</span> <span class="token punctuation">[</span>REO<span class="token punctuation">]</span>      <span class="token punctuation">:</span> REO <span class="token keyword">instanceof</span> <span class="token class-name">Array</span>      <span class="token operator">?</span> REO      <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>slice<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>REO<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">Select</span><span class="token punctuation">(</span>Selector<span class="token punctuation">,</span> Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> Selector_Group <span class="token operator">=</span> Selector<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      Level <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>      Select_Result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token function">Each</span><span class="token punctuation">(</span><span class="token function">$_Atom</span><span class="token punctuation">(</span>Context<span class="token punctuation">,</span> Selector_Group<span class="token punctuation">[</span>Level<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>Index<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Index<span class="token punctuation">)</span> Level<span class="token operator">++</span><span class="token punctuation">;</span>      <span class="token keyword">while</span> <span class="token punctuation">(</span>Selector_Group<span class="token punctuation">[</span>Level<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">)</span> Level<span class="token operator">++</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Selector_Group<span class="token punctuation">[</span>Level<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        Select_Result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>childNodes<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>      <span class="token function">Each</span><span class="token punctuation">(</span><span class="token function">$_Atom</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> Selector_Group<span class="token punctuation">[</span>Level<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> arguments<span class="token punctuation">.</span>callee<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> Select_Result<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">Event_Bind</span><span class="token punctuation">(</span>_Element<span class="token punctuation">,</span> _Type<span class="token punctuation">,</span> _CallBack<span class="token punctuation">,</span> _unBind<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> _CB_ <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>Event<span class="token punctuation">)</span> <span class="token punctuation">{</span>      EO <span class="token operator">=</span> self<span class="token punctuation">.</span>event <span class="token operator">||</span> Event<span class="token punctuation">;</span>      EO<span class="token punctuation">.</span>target <span class="token operator">=</span> EO<span class="token punctuation">.</span>srcElement <span class="token operator">||</span> EO<span class="token punctuation">.</span>target<span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>_CallBack<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>_Element<span class="token punctuation">,</span> EO<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>EO<span class="token punctuation">.</span>returnValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>          EO<span class="token punctuation">.</span>returnValue <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>          EO<span class="token punctuation">.</span>cancelBubble <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>          EO<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          EO<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>_Element<span class="token punctuation">.</span>attachEvent<span class="token punctuation">)</span>      _Element<span class="token punctuation">[</span><span class="token punctuation">(</span>_unBind <span class="token operator">?</span> <span class="token string">'de'</span> <span class="token punctuation">:</span> <span class="token string">'at'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'tachEvent'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>        <span class="token string">'on'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>_Type <span class="token operator">==</span> <span class="token string">'input'</span> <span class="token operator">?</span> <span class="token string">'propertychange'</span> <span class="token punctuation">:</span> _Type<span class="token punctuation">)</span><span class="token punctuation">,</span>        _CB_      <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>      _Element<span class="token punctuation">[</span><span class="token punctuation">(</span>_unBind <span class="token operator">?</span> <span class="token string">'remove'</span> <span class="token punctuation">:</span> <span class="token string">'add'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'EventListener'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>        _Type<span class="token punctuation">,</span>        _CB_<span class="token punctuation">,</span>        <span class="token boolean">false</span>      <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// ----------- Powerful API (Public Method / Data) ----------- //</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>selector <span class="token operator">=</span> Selector<span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>context <span class="token operator">=</span> Context <span class="token operator">||</span> self<span class="token punctuation">.</span>document<span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>DOM <span class="token operator">=</span> <span class="token function">Select</span><span class="token punctuation">(</span>Selector<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>DOM<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>context <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>DOM<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">get</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>Index<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>DOM<span class="token punctuation">[</span>Index<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>each <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>CallBack<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">Each</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>DOM<span class="token punctuation">,</span> CallBack<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>find <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>Selector<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">this<span class="token punctuation">.</span>constructor</span><span class="token punctuation">(</span>      <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>selector<span class="token punctuation">,</span> Selector<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>context    <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>on <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>Event_Type<span class="token punctuation">,</span> CallBack<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">Event_Bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> Event_Type<span class="token punctuation">,</span> CallBack<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>off <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>Event_Type<span class="token punctuation">,</span> CallBack<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">Event_Bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> Event_Type<span class="token punctuation">,</span> CallBack<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// ----------- xDOM  Shortcut Function ----------- //</span><span class="token keyword">function</span> <span class="token function">xDOM</span><span class="token punctuation">(</span>CSS_Selector<span class="token punctuation">,</span> DOM_Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DOMxx</span><span class="token punctuation">(</span>CSS_Selector<span class="token punctuation">,</span> DOM_Context<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>有木有一种步 <strong>Zepto.js</strong> 后尘的感觉……？</p><h2 id="【参考文献】"><a href="#【参考文献】" class="headerlink" title="【参考文献】"></a>【参考文献】</h2><ol><li> <a href="http://www.cnblogs.com/newyorker/archive/2013/02/14/2891298.html" target="_blank" rel="noopener">http://www.cnblogs.com/newyorker/archive/2013/02/14/2891298.html</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> OOP </tag>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【浏览器小工具】网页浮层广告/锁屏一键清除（完善重发）</title>
      <link href="/programming/web-float-ad-cleaner/"/>
      <url>/programming/web-float-ad-cleaner/</url>
      
        <content type="html"><![CDATA[<p>我之前写的【<a href="http://bbs.fyscu.com/forum.php?mod=viewthread&tid=4929" target="_blank" rel="noopener">网页浮动广告一键清除工具</a>】虽然不断完善至 v0.3，但对各种实现方式的<strong>浮层广告</strong> 适配得不全面，自己在使用过程中发现有些网站的浮层广告依然无法彻底清除（<em>某个很亮堂的党报的官网</em> 新闻阅读页的右下角广告 竟然比某些盗版资源站的还顽固）……</p><p>进一步调试、分析后发现，这些“地痞无赖”的广告有个特点 —— 在和 <code>&lt;body /&gt;</code> 一样大的多个 <code>&lt;div /&gt;</code> 层层包裹下（有的多达 13 层），浮层广告用任意的 CSS 设为 <code>display: block</code> 的 HTML 标签包裹（如 <code>&lt;i /&gt;</code>），这个标签再用 <code>position: absolute</code> 定位。（此法也就是“IE 6 不支持 <code>position: fixed</code>”的兼容方法）</p><p>因为我和女友平时都经常使用它（我主要是大量地查技术资料、下经典电影，她主要是看娱乐八卦，反正都是广告满天飞的网站……）于是，继续更新之 ——</p><h2 id="最新稳定版-全部特性"><a href="#最新稳定版-全部特性" class="headerlink" title="最新稳定版 全部特性"></a>最新稳定版 全部特性</h2><ol><li> 可清除 <strong>网页中任一位置的浮动广告</strong></li><li> 可清除 <strong>遮蔽整个网页的登录框</strong></li><li> 可清除 <strong>笼罩整个网页的透明弹窗广告超链接</strong></li><li> 可清除 <strong>网页正文图片边缘的浮动广告</strong>（一般在第二次点击本工具时成功，但此时会误杀一些网页本身的功能浮层，可能会影响某些功能的使用，<strong>建议在纯阅读时二次点击本工具</strong>）</li></ol><h2 id="开发用源代码"><a href="#开发用源代码" class="headerlink" title="开发用源代码"></a>开发用源代码</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//    1Key Web Float Layer Cleaner   v0.5</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//                2014-10-10</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//        (C)2014  test_32@fyscu.com</span><span class="token comment" spellcheck="true">//</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>WO<span class="token punctuation">,</span> DO<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">function</span> <span class="token function">$_TN</span><span class="token punctuation">(</span>REO<span class="token punctuation">,</span> TagName<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>slice<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>REO<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span>TagName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">get_Style</span><span class="token punctuation">(</span>_TE<span class="token punctuation">,</span> _SN<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> _Style <span class="token operator">=</span> _TE<span class="token punctuation">.</span>currentStyle      <span class="token operator">?</span> _TE<span class="token punctuation">.</span>currentStyle<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span>_SN<span class="token punctuation">)</span>      <span class="token punctuation">:</span> DO<span class="token punctuation">.</span>defaultView<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>_TE<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPropertyValue</span><span class="token punctuation">(</span>_SN<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> _Number <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>_Style <span class="token operator">==</span> <span class="token string">'0px'</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token punctuation">:</span> _Style<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">isNaN</span><span class="token punctuation">(</span>_Number<span class="token punctuation">)</span> <span class="token operator">?</span> _Style <span class="token punctuation">:</span> _Number<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">CSS_Match</span><span class="token punctuation">(</span>EO<span class="token punctuation">,</span> RG<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> RG<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">get_Style</span><span class="token punctuation">(</span>EO<span class="token punctuation">,</span> RG<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> RG<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">ParentMatch</span><span class="token punctuation">(</span>EO<span class="token punctuation">,</span> Parent<span class="token punctuation">,</span> Level<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Level<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>EO<span class="token punctuation">.</span>parentNode <span class="token operator">===</span> Parent<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>      <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>EO<span class="token punctuation">.</span>parentNode <span class="token operator">===</span> DO<span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">else</span> EO <span class="token operator">=</span> EO<span class="token punctuation">.</span>parentNode<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">isFixedLayer</span><span class="token punctuation">(</span>_TE<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> inVisible <span class="token operator">=</span> <span class="token function">CSS_Match</span><span class="token punctuation">(</span>_TE<span class="token punctuation">,</span> <span class="token punctuation">[</span>      <span class="token punctuation">[</span><span class="token string">'display'</span><span class="token punctuation">,</span> <span class="token string">'none'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token punctuation">[</span><span class="token string">'visibility'</span><span class="token punctuation">,</span> <span class="token string">'hidden'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token punctuation">[</span><span class="token string">'width'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> Fixed <span class="token operator">=</span>      <span class="token operator">!</span>inVisible <span class="token operator">&amp;&amp;</span>      <span class="token function">CSS_Match</span><span class="token punctuation">(</span>_TE<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'position'</span><span class="token punctuation">,</span> <span class="token string">'absolute'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'position'</span><span class="token punctuation">,</span> <span class="token string">'fixed'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>Fixed <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>WO<span class="token punctuation">.</span>FLC <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token punctuation">:</span> <span class="token function">get_Style</span><span class="token punctuation">(</span>_TE<span class="token punctuation">,</span> <span class="token string">'z-index'</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> <span class="token function">ParentMatch</span><span class="token punctuation">(</span>        <span class="token comment" spellcheck="true">//  清除效果 基本只取决于“DOM 遍历深度”</span>        _TE<span class="token punctuation">,</span>        DO<span class="token punctuation">.</span>body<span class="token punctuation">,</span>        WO<span class="token punctuation">.</span>FLC <span class="token operator">?</span> <span class="token number">13</span> <span class="token punctuation">:</span> <span class="token number">3</span>      <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">var</span> FL_Box <span class="token operator">=</span> <span class="token function">$_TN</span><span class="token punctuation">(</span><span class="token function">$_TN</span><span class="token punctuation">(</span>DO<span class="token punctuation">,</span> <span class="token string">'body'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> iKey <span class="token operator">=</span> <span class="token punctuation">(</span>FL_Count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _FL<span class="token punctuation">;</span> iKey <span class="token operator">&lt;</span> FL_Box<span class="token punctuation">.</span>length<span class="token punctuation">;</span> iKey<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    _FL <span class="token operator">=</span> FL_Box<span class="token punctuation">[</span>iKey<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFixedLayer</span><span class="token punctuation">(</span>_FL<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      _FL<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>_FL<span class="token punctuation">)</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>_FL<span class="token punctuation">)</span><span class="token punctuation">;</span>      FL_Count<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>self<span class="token punctuation">.</span>FLC<span class="token punctuation">)</span> self<span class="token punctuation">.</span>FLC <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token function">alert</span><span class="token punctuation">(</span>    <span class="token punctuation">[</span>      FL_Count<span class="token punctuation">,</span>      <span class="token string">' of the fucking Float ADs/Layers have been cleaned !~'</span><span class="token punctuation">,</span>      <span class="token string">'\n'</span><span class="token punctuation">,</span>      <span class="token string">'You can try Clicking my Button again to be cleaner.'</span><span class="token punctuation">,</span>      <span class="token string">'\n\n'</span><span class="token punctuation">,</span>      <span class="token string">'(C)2014   SCU FYclub-RDD'</span>    <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> self<span class="token punctuation">.</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="安装用代码"><a href="#安装用代码" class="headerlink" title="安装用代码"></a>安装用代码</h2><p>用 <strong>UglifyJS</strong>（<a href="http://www.css-js.cn/" target="_blank" rel="noopener">在线版</a>）生成，压缩率 高于 50% ——</p><!-- prettier-ignore-start --><pre class=" language-javascript"><code class="language-javascript">javascript<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">function</span> <span class="token function">c</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>slice<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">d</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> d<span class="token operator">=</span>a<span class="token punctuation">.</span>currentStyle<span class="token operator">?</span>a<span class="token punctuation">.</span>currentStyle<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">:</span>b<span class="token punctuation">.</span>defaultView<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPropertyValue</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">"0px"</span><span class="token operator">==</span>d<span class="token operator">?</span><span class="token number">0</span><span class="token punctuation">:</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token function">isNaN</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token operator">?</span>d<span class="token punctuation">:</span>e<span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">e</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> c<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>c<span class="token operator">&lt;</span>b<span class="token punctuation">.</span>length<span class="token punctuation">;</span>c<span class="token operator">++</span><span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">d</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span>b<span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> e<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>d<span class="token operator">></span>e<span class="token punctuation">;</span>e<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>parentNode<span class="token operator">===</span>c<span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>parentNode<span class="token operator">===</span>b<span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">;</span>a<span class="token operator">=</span>a<span class="token punctuation">.</span>parentNode<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">g</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> g<span class="token operator">=</span><span class="token function">e</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">"display"</span><span class="token punctuation">,</span><span class="token string">"none"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"visibility"</span><span class="token punctuation">,</span><span class="token string">"hidden"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"width"</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>h<span class="token operator">=</span><span class="token operator">!</span>g<span class="token operator">&amp;&amp;</span><span class="token function">e</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">"position"</span><span class="token punctuation">,</span><span class="token string">"absolute"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"position"</span><span class="token punctuation">,</span><span class="token string">"fixed"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> h<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>FLC<span class="token operator">?</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token function">d</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span><span class="token string">"z-index"</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token function">f</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>b<span class="token punctuation">.</span>body<span class="token punctuation">,</span>a<span class="token punctuation">.</span>FLC<span class="token operator">?</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token keyword">var</span> j<span class="token punctuation">,</span>i<span class="token punctuation">,</span>h<span class="token operator">=</span><span class="token function">c</span><span class="token punctuation">(</span><span class="token function">c</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span>FL_Count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>h<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>j<span class="token operator">=</span>h<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token function">g</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>j<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">,</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">,</span>FL_Count<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>self<span class="token punctuation">.</span>FLC<span class="token operator">||</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>FLC<span class="token operator">=</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token punctuation">[</span>FL_Count<span class="token punctuation">,</span><span class="token string">" of the fucking Float ADs/Layers have been cleaned !~"</span><span class="token punctuation">,</span><span class="token string">"\n"</span><span class="token punctuation">,</span><span class="token string">"You can try Clicking my Button again to be cleaner."</span><span class="token punctuation">,</span><span class="token string">"\n\n"</span><span class="token punctuation">,</span><span class="token string">"(C)2014   SCU FYclub-RDD"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>self<span class="token punctuation">.</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><!-- prettier-ignore-end -->]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> browser </tag>
            
            <tag> bookmark </tag>
            
            <tag> toolkit </tag>
            
            <tag> advertisement </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【奇技淫巧】jQuery 的选择器上下文</title>
      <link href="/programming/jquery-selector-context/"/>
      <url>/programming/jquery-selector-context/</url>
      
        <content type="html"><![CDATA[<p>用过 <strong>jQuery</strong> 的都知道 —— jQuery() 很强大，啥都能往里塞！</p><ol><li> 塞 <strong>HTML 代码</strong> —— 创建 HTML 元素</li><li> 塞 <strong>CSS 选择符</strong> —— 检索 HTML 元素</li><li> 塞 <strong>XPath 表达式</strong> —— 检索 XML 元素</li><li> 塞 <strong>DOM 对象</strong> —— 包装 HTML 元素，使用 jQuery 的强大 API（对象方法）</li><li> 塞 <strong>JS 函数</strong> —— 相当于当在 DOM Ready 之后执行主业务逻辑代码</li></ol><p>但还有些细节需要注意，比如 <strong>jQuery 选择器的上下文</strong>问题。</p><hr><p>jQuery 老手想必都知道，<strong>jQuery() 的第二个参数</strong>可以设置 选择器执行筛选的上下文，也就是<strong>指定元素搜索只能在哪个（些）元素的子元素树形结构范围内</strong>。比如 ——</p><ol><li> <code>$(&#39;script&#39;, document.body)</code> 相当于 <code>$(&#39;body&#39;).find(&#39;script&#39;)</code></li><li> <code>$(&#39;table&#39;, document.getElementsByTagName(&#39;iframe&#39;)[0])</code> 相当于 <code>$(&#39;iframe&#39;).eq(0).contents().find(&#39;table&#39;)</code></li></ol><p>改变了 jQuery 选择器的上下文之后，这个 jQuery 对象接下来的操作都以这个上下文为参考系，非常方便~</p><p>但这里有个例外 —— <strong>若一个 jQuery 对象由 DOM 对象包装而来，那它的上下文会被强制指向 DOM 元素本身，jQuery() 的第二个参数不能改变上下文……</strong></p><p>大家可以用以下代码验证 ——</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'body'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//  显示的 jQuery 对象的 context 属性指向 document</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">,</span> document<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//  显示的 jQuery 对象的 context 属性指向 document.body</span></code></pre><p>这有何影响？一个典型的实例就是 —— <strong>HTML 子框架页（比如 <code>&lt;iframe /&gt;</code>）直接使用父框架加载的 jQuery 及其插件</strong>。</p><hr><p>因为不同框架页和其父页面一样，都是一个完整的网页，所以它们的 CSS、JS 之间默认是相互独立的（除了 BOM、DOM 树之间有相互引用）。程序猿一般都分别加载它们所引用的脚本，无论它们是否有相同的脚本。虽然浏览器都有缓存，不会重复从服务器下载相同的文件，但对本机性能而言，重复加载还是有影响。</p><p>对 CSS 而言，它的属性最终要应用到具体的 DOM 元素上，不会单独占用内存，重复加载对本机无负面影响；但若<strong>重复加载 JS，同样的对象（各种 JS 库所创建的自身实例）会在每个父/子页面的 Window 对象下创建，造成了内存的浪费</strong>……</p><p>综上，因为 <strong>JS 等动态语言的赋值 默认是“引用”（传指针/地址）而非复制</strong>，我们就可以借助框架之间的 BOM、DOM 之间的引用，使父页面加载的 JS 库工作在不同的子页面中。例如 ——</p><pre class=" language-javascript"><code class="language-javascript">self<span class="token punctuation">.</span>jQuery <span class="token operator">=</span> parent<span class="token punctuation">.</span>jQuery<span class="token punctuation">;</span></code></pre><hr><p>当我们使用类似 <code>$(self.document).find(&#39;selector&#39;).doSomething()</code> 的代码时，程序运行正常，所以大家自然会想用更简洁的写法 <code>$(&#39;selector&#39;).doSomething()</code>，但它不会在子页面里查找任何 DOM 元素，只会返回父页面的执行结果…… 因为<strong>父页面的 jQuery 上下文默认是父页面中的 document 对象</strong>~</p><p>所以，我们必须<strong>在子页面对父页面的 jQuery 做一层封装</strong> ——</p><pre class=" language-javascript"><code class="language-javascript">self<span class="token punctuation">.</span>$ <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> self<span class="token punctuation">.</span><span class="token function">jQuery</span><span class="token punctuation">(</span>    arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    arguments<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">1</span> <span class="token operator">?</span> arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> self<span class="token punctuation">.</span>document  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><hr><p>但其实这样的封装有时无法改变 jQuery 对象 API 的上下文，比如在一个 <code>&lt;iframe /&gt;</code> 中 ——</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'&lt;span class="Float_Button">&lt;/span>'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span><span class="token string">'body'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>你会发现，新建的元素被追加到了父页面的最后……</p><p>不怕，解决方法也得益于 <strong>jQuery 对象 API（公用方法）的优越性 —— CSS 选择符、DOM 对象、jQuery 对象 都能往里塞</strong>，我们用自己封装的 jQuery 来强制指定目的地的上下文 ——</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'&lt;span class="Float_Button">&lt;/span>'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'body'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><p>【参考文档】<a href="http://ucren.com/blog/archives/137/comment-page-1" target="_blank" rel="noopener">http://ucren.com/blog/archives/137/comment-page-1</a></p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
